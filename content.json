{"meta":{"title":"𝒞𝑜𝓇𝒶𝓁𝒶𝓇𝑒","subtitle":"𝐼𝓉 𝒾𝓈 𝑜𝓃𝓁𝓎 𝒻𝓊𝓃 𝓉𝑜 𝓁𝒾𝓋𝑒 𝒾𝓃 𝓉𝒽𝑒 𝓅𝓇𝑒𝓈𝑒𝓃𝓉 𝒷𝑒𝒸𝒶𝓊𝓈𝑒 𝓌𝑒 𝓀𝓃𝑜𝓌 𝓉𝒽𝑒𝓇𝑒 𝓌𝒾𝓁𝓁 𝒷𝑒 𝒶𝓃 𝑒𝓃𝒹.","description":"Gan Eden","author":"Coralare","url":"https://coralare.com","root":"/"},"pages":[{"title":"","date":"2021-02-19T15:49:05.117Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"404js/script.js","permalink":"https://coralare.com/404js/script.js","excerpt":"","text":"// Parallax Code var scene = document.getElementById('scene'); var parallax = new Parallax(scene);"},{"title":"BOSS信息（关于我）","date":"2019-07-01T10:00:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"About/index.html","permalink":"https://coralare.com/About/index.html","excerpt":"","text":"你发现了秘密！这里是BOSS的详细信息！ BOSS名称：GamerNoTitleBOSS发现时间：（信息未公开）BOSS存在时长：大约17年？BOSS职业：貌似是一个高中学生~BOSS能力：会做网站 会做程序 会剪片子 会服务器维护……BOSS沟通语言：C++、Python，还会一点nodejs、html、pugBOSS出没时间：周六下午四点半周日下午三点 ~工作日12:00-14:00 16:30-18:40不出现 周末：整天 假期：整天~~BOSS联系方式：邮件方式：admin@bili33.top（推荐）或者GamerNoTitle@outlook.comQQ方式：3559869084（请注明是来自我的Blog的）哔哩哔哩：请搜索GamerNoTitle或点我~！Twitter：@GamerNoTitle（这位仁兄终于想起了自己的Twitter ID）Instragram：@GamerNoTitleFacebook：@GamerNoTitleYouTube Channel：@Pesy Wu其他联系方式（可以一起开黑哦！）：1、英雄联盟雷瑟守备大区搜索：喵呜初音（我是个SUP玩家）2、暴雪战网（国服）搜索：喵呜初音#5400（SUP同上）3、steam链接：@GamerNoTitle4、Origin平台搜索：GamerNoTitle（来玩战地一呀~）5、WARFRAME（国际服）内搜索：Gamer.bili（只是一个十几段的萌新罢了）6、Minecraft（国际服ID）：GamerNoTitle （欢迎来到我的Hypixel辣鸡小屋啊！！！输入/housing join GamerNoTitle可以直达哦~）7、ArkNights（B服）：喵呜初音#07178、新片场：@GamerNoTitle9、CSDN：@GamerNoTitleBOSS据点（关于本站）：本站是搭建在Github上的一个基于hexo的网站地址点我！，经过了两周的调试才弄懂了这个网站是怎么运行的，也是挺累的，建立这个网站主要是想分享一些内容。本站的所有图片使用Github作为图床（也有用coding），所以有的时候图片加载慢并不是我的问题，是Github的问题:D（没错，就是Github的锅！） 我的域名就是bili33.top，其他的还没怎么用 本站使用主题：Butterfly"},{"title":"Gallery","date":"2020-03-29T04:15:22.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"Gallery/index.html","permalink":"https://coralare.com/Gallery/index.html","excerpt":"","text":"流量警告本页面及子页面的图片体积较大，且数目庞大，如果不是流量大户请立即撤离！ A trip to Hong Kong 2019.4.17~2019.4.18香港行"},{"title":"","date":"2021-02-19T15:49:05.111Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"404css/style.css","permalink":"https://coralare.com/404css/style.css","excerpt":"","text":"@import url(\"https://fonts.googleapis.com/css?family=Barlow+Condensed:300,400,500,600,700,800,900|Barlow:300,400,500,600,700,800,900&display=swap\"); *{margin:0;padding:0;} body{overflow:hidden;} .about { position: fixed; z-index: 10; bottom: 10px; right: 10px; width: 40px; height: 40px; display: flex; justify-content: flex-end; align-items: flex-end; transition: all 0.2s ease; } .about .bg_links { width: 40px; height: 40px; border-radius: 100%; display: flex; justify-content: center; align-items: center; background-color: rgba(0, 0, 0, 0.2); border-radius: 100%; backdrop-filter: blur(5px); position: absolute; } .about .logo { width: 40px; height: 40px; z-index: 9; background-image: url(../svg/logo_white.svg); background-size: 50%; background-repeat: no-repeat; background-position: 10px 7px; opacity: 0.9; transition: all 1s 0.2s ease; bottom: 0; right: 0; } .about .social { opacity: 0; right: 0; bottom: 0; } .about .social .icon { width: 100%; height: 100%; background-size: 20px; background-repeat: no-repeat; background-position: center; background-color: transparent; display: flex; transition: all 0.2s ease, background-color 0.4s ease; opacity: 0; border-radius: 100%; } .about .social.portfolio { transition: all 0.8s ease; } .about .social.portfolio .icon { background-image: url(../svg/link.svg); } .about .social.dribbble { transition: all 0.3s ease; } .about .social.dribbble .icon { background-image: url(../svg/dribbble.svg); } .about .social.linkedin { transition: all 0.8s ease; } .about .social.linkedin .icon { background-image: url(../svg/linkedin.svg); } .about:hover { width: 105px; height: 105px; transition: all 0.6s cubic-bezier(0.64, 0.01, 0.07, 1.65); } .about:hover .logo { opacity: 1; transition: all 0.6s ease; } .about:hover .social { opacity: 1; } .about:hover .social .icon { opacity: 0.9; } .about:hover .social:hover { background-size: 28px; } .about:hover .social:hover .icon { background-size: 65%; opacity: 1; } .about:hover .social.portfolio { right: 0; bottom: calc(100% - 40px); transition: all 0.3s 0s cubic-bezier(0.64, 0.01, 0.07, 1.65); } .about:hover .social.portfolio .icon:hover { background-color: #698fb7; } .about:hover .social.dribbble { bottom: 45%; right: 45%; transition: all 0.3s 0.15s cubic-bezier(0.64, 0.01, 0.07, 1.65); } .about:hover .social.dribbble .icon:hover { background-color: #ea4c89; } .about:hover .social.linkedin { bottom: 0; right: calc(100% - 40px); transition: all 0.3s 0.25s cubic-bezier(0.64, 0.01, 0.07, 1.65); } .about:hover .social.linkedin .icon:hover { background-color: #0077b5; } h1, h2, h3, h4, h5, h6, p, ul, li, button, a, i, input, body { margin: 0; padding: 0; list-style: none; border: 0; -webkit-tap-highlight-color: transparent; text-decoration: none; color: inherit; } h1:focus, h2:focus, h3:focus, h4:focus, h5:focus, h6:focus, p:focus, ul:focus, li:focus, button:focus, a:focus, i:focus, input:focus, body:focus { outline: 0; } body { margin: 0; padding: 0; height: auto; font-family: \"Barlow\", sans-serif; background: #695681; } .logo { position: fixed; z-index: 5; bottom: 10px; right: 10px; width: 40px; height: 40px; border-radius: 100%; display: flex; justify-content: center; align-items: center; background: rgba(0, 0, 0, 0.1); border-radius: 100%; backdrop-filter: blur(5px); } .logo img { width: 55%; height: 55%; transform: translateY(-1px); opacity: 0.8; } nav .menu { width: 100%; height: 80px; position: absolute; display: flex; align-items: center; justify-content: space-between; padding: 0 5%; box-sizing: border-box; z-index: 3; } nav .menu .website_name { color: #695681; font-weight: 600; font-size: 20px; letter-spacing: 1px; background: white; padding: 4px 8px; border-radius: 2px; opacity: 0.5; transition: all 0.4s ease; cursor: pointer; } nav .menu .website_name:hover { opacity: 1; } nav .menu .menu_links { transition: all 0.4s ease; opacity: 0.5; } nav .menu .menu_links:hover { opacity: 1; } @media screen and (max-width: 799px) { nav .menu .menu_links { display: none; } } nav .menu .menu_links .link { color: white; text-transform: uppercase; font-weight: 500; margin-right: 50px; letter-spacing: 2px; position: relative; transition: all 0.3s 0.2s ease; } nav .menu .menu_links .link:last-child { margin-right: 0; } nav .menu .menu_links .link:before { content: ''; position: absolute; width: 0px; height: 4px; background: linear-gradient(90deg, #FFEDC0 0%, #FF9D87 100%); bottom: -10px; border-radius: 4px; transition: all 0.4s cubic-bezier(0.82, 0.02, 0.13, 1.26); left: 100%; } nav .menu .menu_links .link:hover { opacity: 1; color: #FB8A8A; } nav .menu .menu_links .link:hover:before { width: 40px; left: 0; } nav .menu .menu_icon { width: 40px; height: 40px; position: relative; display: none; justify-content: center; align-items: center; cursor: pointer; } @media screen and (max-width: 799px) { nav .menu .menu_icon { display: flex; } } nav .menu .menu_icon .icon { width: 24px; height: 2px; background: white; position: absolute; } nav .menu .menu_icon .icon:before, nav .menu .menu_icon .icon:after { content: ''; width: 100%; height: 100%; background: inherit; position: absolute; transition: all 0.3s cubic-bezier(0.49, 0.04, 0, 1.55); } nav .menu .menu_icon .icon:before { transform: translateY(-8px); } nav .menu .menu_icon .icon:after { transform: translateY(8px); } nav .menu .menu_icon:hover .icon { background: #FFEDC0; } nav .menu .menu_icon:hover .icon:before { transform: translateY(-10px); } nav .menu .menu_icon:hover .icon:after { transform: translateY(10px); } .wrapper { display: grid; grid-template-columns: 1fr; justify-content: center; align-items: center; height: 100vh; overflow-x: hidden; } .wrapper .container { margin: 0 auto; transition: all 0.4s ease; display: flex; justify-content: center; align-items: center; position: relative; } .wrapper .container .scene { position: absolute; width: 100vw; height: 100vh; vertical-align: middle; } .wrapper .container .one, .wrapper .container .two, .wrapper .container .three, .wrapper .container .circle, .wrapper .container .p404 { width: 60%; height: 60%; top: 20% !important; left: 20% !important; min-width: 400px; min-height: 400px; } .wrapper .container .one .content, .wrapper .container .two .content, .wrapper .container .three .content, .wrapper .container .circle .content, .wrapper .container .p404 .content { width: 600px; height: 600px; display: flex; justify-content: center; align-items: center; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); animation: content 0.8s cubic-bezier(1, 0.06, 0.25, 1) backwards; } @keyframes content { 0% { width: 0; } } .wrapper .container .one .content .piece, .wrapper .container .two .content .piece, .wrapper .container .three .content .piece, .wrapper .container .circle .content .piece, .wrapper .container .p404 .content .piece { width: 200px; height: 80px; display: flex; position: absolute; border-radius: 80px; z-index: 1; animation: pieceLeft 8s cubic-bezier(1, 0.06, 0.25, 1) infinite both; } @keyframes pieceLeft { 50% { left: 80%; width: 10%; } } @keyframes pieceRight { 50% { right: 80%; width: 10%; } } @media screen and (max-width: 799px) { .wrapper .container .one, .wrapper .container .two, .wrapper .container .three, .wrapper .container .circle, .wrapper .container .p404 { width: 90%; height: 90%; top: 5% !important; left: 5% !important; min-width: 280px; min-height: 280px; } } @media screen and (max-height: 660px) { .wrapper .container .one, .wrapper .container .two, .wrapper .container .three, .wrapper .container .circle, .wrapper .container .p404 { min-width: 280px; min-height: 280px; width: 60%; height: 60%; top: 20% !important; left: 20% !important; } } .wrapper .container .text { width: 60%; height: 40%; min-width: 400px; min-height: 500px; position: absolute; margin: 40px 0; animation: text 0.6s 1.8s ease backwards; } @keyframes text { 0% { opacity: 0; transform: translateY(40px); } } @media screen and (max-width: 799px) { .wrapper .container .text { min-height: 400px; height: 80%; } } .wrapper .container .text article { width: 400px; position: absolute; bottom: 0; z-index: 4; display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; bottom: 0; left: 50%; transform: translateX(-50%); } @media screen and (max-width: 799px) { .wrapper .container .text article { width: 100%; } } .wrapper .container .text article p { color: white; font-size: 18px; letter-spacing: 0.6px; margin-bottom: 40px; text-shadow: 6px 6px 10px #32243E; } .wrapper .container .text article button { height: 40px; padding: 0 30px; border-radius: 50px; cursor: pointer; box-shadow: 0px 15px 20px rgba(54, 24, 79, 0.5); z-index: 3; color: #695681; background-color: white; text-transform: uppercase; font-weight: 600; font-size: 12px; transition: all 0.3s ease; } .wrapper .container .text article button:hover { box-shadow: 0px 10px 10px -10px rgba(54, 24, 79, 0.5); transform: translateY(5px); background: #FB8A8A; color: white; } .wrapper .container .p404 { font-size: 200px; font-weight: 700; letter-spacing: 4px; color: white; display: flex !important; justify-content: center; align-items: center; position: absolute; z-index: 2; animation: anime404 0.6s cubic-bezier(0.3, 0.8, 1, 1.05) both; animation-delay: 1.2s; } @media screen and (max-width: 799px) { .wrapper .container .p404 { font-size: 100px; } } @keyframes anime404 { 0% { opacity: 0; transform: scale(10) skew(20deg, 20deg); } } .wrapper .container .p404:nth-of-type(2) { color: #36184F; z-index: 1; animation-delay: 1s; filter: blur(10px); opacity: 0.8; } .wrapper .container .circle { position: absolute; } .wrapper .container .circle:before { content: ''; position: absolute; width: 800px; height: 800px; background-color: rgba(54, 24, 79, 0.2); border-radius: 100%; top: 50%; left: 50%; transform: translate(-50%, -50%); box-shadow: inset 5px 20px 40px rgba(54, 24, 79, 0.25), inset 5px 0px 5px rgba(50, 36, 62, 0.3), inset 5px 5px 20px rgba(50, 36, 62, 0.25), 2px 2px 5px rgba(255, 255, 255, 0.2); animation: circle 0.8s cubic-bezier(1, 0.06, 0.25, 1) backwards; } @keyframes circle { 0% { width: 0; height: 0; } } @media screen and (max-width: 799px) { .wrapper .container .circle:before { width: 400px; height: 400px; } } .wrapper .container .one .content:before { content: ''; position: absolute; width: 600px; height: 600px; background-color: rgba(54, 24, 79, 0.3); border-radius: 100%; box-shadow: inset 5px 20px 40px rgba(54, 24, 79, 0.25), inset 5px 0px 5px rgba(50, 36, 62, 0.3), inset 5px 5px 20px rgba(50, 36, 62, 0.25), 2px 2px 5px rgba(255, 255, 255, 0.2); animation: circle 0.8s 0.4s cubic-bezier(1, 0.06, 0.25, 1) backwards; } @media screen and (max-width: 799px) { .wrapper .container .one .content:before { width: 300px; height: 300px; } } .wrapper .container .one .content .piece { background: linear-gradient(90deg, #8077EA 13.7%, #EB73FF 94.65%); } .wrapper .container .one .content .piece:nth-child(1) { right: 15%; top: 18%; height: 30px; width: 120px; animation-delay: 0.5s; animation-name: pieceRight; } .wrapper .container .one .content .piece:nth-child(2) { left: 15%; top: 45%; width: 150px; height: 50px; animation-delay: 1s; animation-name: pieceLeft; } .wrapper .container .one .content .piece:nth-child(3) { left: 10%; top: 75%; height: 20px; width: 70px; animation-delay: 1.5s; animation-name: pieceLeft; } .wrapper .container .two .content .piece { background: linear-gradient(90deg, #FFEDC0 0%, #FF9D87 100%); } .wrapper .container .two .content .piece:nth-child(1) { left: 0%; top: 25%; height: 40px; width: 120px; animation-delay: 2s; animation-name: pieceLeft; } .wrapper .container .two .content .piece:nth-child(2) { right: 15%; top: 35%; width: 180px; height: 50px; animation-delay: 2.5s; animation-name: pieceRight; } .wrapper .container .two .content .piece:nth-child(3) { right: 10%; top: 80%; height: 20px; width: 160px; animation-delay: 3s; animation-name: pieceRight; } .wrapper .container .three .content .piece { background: #FB8A8A; } .wrapper .container .three .content .piece:nth-child(1) { left: 25%; top: 35%; height: 20px; width: 80px; animation-name: pieceLeft; animation-delay: 3.5s; } .wrapper .container .three .content .piece:nth-child(2) { right: 10%; top: 55%; width: 140px; height: 40px; animation-name: pieceRight; animation-delay: 4s; } .wrapper .container .three .content .piece:nth-child(3) { left: 40%; top: 68%; height: 20px; width: 80px; animation-name: pieceLeft; animation-delay: 4.5s; }"},{"title":"","date":"2021-02-19T15:49:05.129Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"Dynamics/index.html","permalink":"https://coralare.com/Dynamics/index.html","excerpt":"","text":"随便发点东西应该没人看吧(*/ω＼*) 基于BBTalk的动态页面：https://github.com/BBtalkJS/BBtalk bbtalk.init({ appId: \"eEuyo0PkAfntbi5pSRS38tut-MdYXbMMI\", appKey: \"9fXMpFUCSQFklQU6MXFTCumP\", serverURLs: 'https://eEuyo0Pk.api.lncldglobal.com' })"},{"title":"哔哩哔哩追番列表","date":"2020-03-03T04:07:44.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"bangumis/index.html","permalink":"https://coralare.com/bangumis/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-11-07T08:46:50.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"categories/index.html","permalink":"https://coralare.com/categories/index.html","excerpt":"","text":""},{"title":"Steam游戏库","date":"2020-03-14T02:15:15.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"steamgames/index.html","permalink":"https://coralare.com/steamgames/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-11-07T08:46:43.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"tags/index.html","permalink":"https://coralare.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2021-02-19T15:49:05.267Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"unlock-music/index.html","permalink":"https://coralare.com/unlock-music/index.html","excerpt":"","text":""},{"title":"Chemistry Experiments 化学实验","date":"2020-06-13T10:27:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"Gallery/Chemistry-Experiments/index.html","permalink":"https://coralare.com/Gallery/Chemistry-Experiments/index.html","excerpt":"","text":"相册信息在学校做的各种化学实验的照片，一起观察奇妙的化学现象吧！ 设备：CANON EOS 800D"},{"title":"A Trip to Hong Kong","date":"2020-03-29T04:15:22.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"Gallery/HK/index.html","permalink":"https://coralare.com/Gallery/HK/index.html","excerpt":"","text":"相册信息这是我第一次去往大陆以外的地方（第一次用了签证），跟着学校前往了落马洲那边的香港郑荣之中学进行参观交流和学习，并且在那里体验了一下香港的生活。这些图片是我和@yuleng在2019年4月17日到香港的那天晚上外出拍摄的图片 设备：CANON EOS 77D 稳定器：DJI RONIN S"},{"title":"","date":"2021-02-19T15:49:05.134Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"Gallery/Elaina/index.html","permalink":"https://coralare.com/Gallery/Elaina/index.html","excerpt":"","text":"伊蕾娜反正就是屑魔女（大爱❤）その可憐な少女は魔女であり、旅人でした。 ――そう、私です。"},{"title":"","date":"2021-02-19T15:49:05.236Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"css/twikoo-height.css","permalink":"https://coralare.com/css/twikoo-height.css","excerpt":"","text":"textarea.el-textarea__inner{ height: 150px !important; min-height: 150px !important; }"},{"title":"","date":"2021-02-19T15:49:05.116Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"404js/parallax.min.js","permalink":"https://coralare.com/404js/parallax.min.js","excerpt":"","text":"!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).Parallax=t()}}(function(){return function t(e,i,n){function o(r,a){if(!i[r]){if(!e[r]){var l=\"function\"==typeof require&&require;if(!a&&l)return l(r,!0);if(s)return s(r,!0);var h=new Error(\"Cannot find module '\"+r+\"'\");throw h.code=\"MODULE_NOT_FOUND\",h}var u=i[r]={exports:{}};e[r][0].call(u.exports,function(t){var i=e[r][1][t];return o(i||t)},u,u.exports,t,e,i,n)}return i[r].exports}for(var s=\"function\"==typeof require&&require,r=0;r"},{"title":"“这个故事由我开始，也应由我来结束”","date":"2019-07-13T04:00:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"666/index.html","permalink":"https://coralare.com/666/index.html","excerpt":"","text":"恭喜你找到了隐藏页面，本页面为文章原版，尽情阅读吧！ 第一章：玉岩之外的往事 —— 罗涛老师推了推黑框眼镜，一位三十左右的中年男人站在玉岩中学的门口。 “这就是传说中的那所学校么？还真不赖呢！” 罗老师是四川人，当年高考的时候因为一道选择题分数之差，含恨考进师范学院，光荣地成为了一名人民物理教师，毕业后先在四川内地教学，而后转入广州。 “欢迎您，罗涛老师，请随我来。” 一位彬彬有礼的绅士引导着罗涛老师，很快他们来到办公室。 “校长先生，罗涛老师到了。” “请进。” 推开门把手，一位如狮子般威猛的大汉坐在办公室的中央，脸上的皱纹并不能掩饰他目光中寒冷的杀气，杀人的目光仿佛要将来者吞吃。 “坐。”他似乎没有张开口说话。 “听说你是四川内地的物理老师，让我来出几道简单的题目考考你，就当作是你的入职测试了，如何？很好，下面是第一题。” 他的双眼仍斜视着桌面，一动不动。 “宏观上宇宙的构成？” “4.9%的普通物质，包括恒星行星、气体和尘埃，26.8%的暗物质，和68.3%的暗能量。” “很不错。第二题：简单介绍下与门。” 罗老师的嘴角上扬了5.6°，这以后，“5.6°的微笑”成为了罗老师独特的标志。 “利用内部结构，使输入两个高电平1，输出高电平1，不满足有两个高电平1，则输出低电平0。” “你令我很吃惊，那么，接下来……” “别问了。” “什么！” “别问了，我可不想，像我面前的这个人一样。” 罗涛用手用力一推，那具冰冷的躯体砰然倒地，发出沉重的砸地声，他的后脑勺有一个金属物件，那应该就是小型扬声器。 “看来这里的气氛很不友好，告辞。” “请留步，罗涛先生。” 办公室后的墙壁缓慢转动，一名体型微胖的中年男人出现在墙后。 “他曾经是学校最得力的保安，——曾经。唉，可惜他知道了他不该知道的事情。哦，忘了自我介绍，我是玉岩中学校长——我叫孟纯初。几年来，我一直在用这种压抑、恐怖的手法来测试应职老师的文化素质和心理素质。当然最重要的一点是，找到能够参与那个计划的候选人。” “那个计划？” “罗涛先生，我现在以玉岩中学校长的名义，诚挚地邀请你加入玉岩中学自主承办的领军计划，让我们一起，打造一个强悍的高校吧！” “可笑的疯子，再见！” 罗涛走到门前，用力推门把手，突然整个人抽搐了一下，瘫坐在地。 “可恶，怎么会……” “被人体承受的极限电压电击到是种什么感受？现在只有从我身后的通道才能离开这里，来吧，加入玉岩中学，加入我们，你是我有生以来见识过的最优秀的物理教师，我们一定可以完成这个伟大的计划！“ 坐在冰凉的地板上，沉默许久。 “好吧，我加入。” 孟纯初激动地握住罗涛老师的手，说出了那句令他终生难忘的话： “现在，我们是同志了！” 从此，罗涛老师开始了在玉岩中学教书的苦逼之旅，其风格风趣幽默，深受学生喜爱。由于班主任工作出色，被评为“广州市名班主任”。罗涛老师在教学中还创造出几种解物理题的方法： ①秒杀法此法以快而著称，用于选择题。旨在用最短的时间，在大脑中瞬间建模分析计算，直接得出结论，选出选项。使用此法需思维善于跳跃、灵活。其优点是解题速度极快；缺点是做得对才怪。 ②走人法此法十分之巧妙，用于选择题或解答题，旨在在卷子上直接写出得分公式就直接离开试室，走出考场，不必算出结果，使用此法需熟练掌握公式并灵活运用。此法优点是写完就走，不用回头，十分霸气；缺点是物理成绩作废。 ③不看其他选项法此法为“涛氏之法”中最玄妙，最难掌握的一法，用于选择题，旨在不看题干，只看答案，直接选出正确选项，其他的选项不用看，该法配合秒杀法可称霸物理选择题。其优点是掌握以后物理选择题全对；缺点是你根本学不会。 每日涛语：涛曰：“请注意” 涛曰：“这种题看天气预报就会了” 涛曰：“直接写出公式就可以走人了” 涛曰：“自欺欺人” 第二章：领军纪年第2年 —— 才筠与溶玄[作者：是“寸”哦（原稿作者将“寸”写作“才”，下面文章沿用作者的写法），再次说明，筠读作yún写作jūn]新学期开始，班里来了两位新同学。 “各位同学，他们是这个学期转学过来的两位新同学，大家以后要多多关照。”班主任罗涛说。 陆般把目光投向两位新同学，男生的个子比女生高出了一截，男生应该有170，而女生则可能没到160。他俩手紧紧握着，显得有些紧张。 “不是兄妹就是情侣了。”陆般想。 两位同学依次上台自我介绍。 “大家好，我叫才筠。我来自……自……咦？记不起来了。” “我们都记不起来。”台下的同学异口同声地说道。 “噢……我有着一些独特的爱好，像调墨与古风音乐，很难想象一位男生喜欢这些，但这的确是我的个人爱好。”[作者：不很喜欢，炸厕所才是最妙的风格] 台下响起鼓励的掌声。 “旁边这位是我的……嗯，从小玩到大的好朋友。她叫溶玄。”说到这里，才筠羞涩的脸颊不免泛红。 台下已经开始热议。 女生走上台，害羞地说：“我叫溶玄，第一次来到新班级里有些不适应呢，希望大家多多关照哦，我们一定能成为朋友。对了，我喜欢旅游，最想去的地方是美利坚合众国。The United States of America。” 台下一片惊呼，她的口语竟这么流利标准。 “为什么是美国？”罗涛老师带着5.6°微笑问。 “因为……” 溶玄抬起头，本想望望那碧蓝的天空，装作自己在面带微笑地遐想，结果并没有。教室的上端只有洁白的天花板。也罢，将就着看看吧。 “那里可是有我最喜欢的自由女神雕像啊！” 台下又是一片热烈的掌声。 伴随着众人的目光，两人手拉着手走下台。罗涛老师保持着微笑跨上讲台： “谢谢两位同学精彩的自我介绍，相信有你们的加入，六班一定变得更团结，更有活力。才筠和溶玄两位同学纯真的友谊我们有目共睹，希望你们能在高中时期把持情感，携手共进，共同进步。”他停顿了一下，低着头，像是在思韵。 “在这个绽放青春的时代，每个人都应该有自己喜欢的人，都应该被人喜欢。” [作者：感谢35号ZQ（小编：没有征求本人意见，先不打出真实姓名）同学的日志记录，不然我还真记不起罗涛老师讲了啥]第三章：领军纪年第2年 —— 陈瑞端&amp;钟俊华“啊，好痛，我在哪？” “你醒了？”瑞端朦胧的双眼已看不清来者。但依稀地可以听出此人的声音。 “你是……俊华？” “是我。” “怎么回事？我在哪？我只记得我在玉岩篮球场打球时被一个飞来的球砸晕，然后什么也不记得了。” “唉，说来话长。我和你慢慢讲吧。” 陈瑞端与钟俊华是一对非常要好的朋友，两人经常一起打球，一起吃饭，一起打游戏，一起搞……然而，变故发生了。 这原本起源于一场误会，但这却引发了出人意料的后果，也许罗涛至终都不会知道，自己会栽在这两位的手中。 时间回到领军纪年元年，一天的晚自习课。 “钟俊华、陈瑞端，你们两个出来。”推门而入的罗涛大声说道，原本安静的教室马上喧闹起来。 “你看看这个，”罗涛拿出手机，打开一段视频，让俊华凑上前看，“你自己看看，你在干什么？” 俊华瞬间懵了，他自己都不记得他当时在干啥：“我没干什么。” “你手里拿的是什么？” “我没拿什么啊？” “你还跟我争，你自己看视频，我给你看三遍。” 俊华认真看着，画面中的他将双手放在课桌柜里，鬼鬼祟祟地摆弄着什么。目光斜视，紧张的神情中夹杂着一丝喜悦。这一举一动，不是在看小黄书就是在玩手机。 “说吧，你在干什么？是不是在看小黄书？” “我真没有，我当时在翻化学课本写学评。”钟俊华突然想起来，争辩着。 “你看视频。” 就这样争论了半天，罗涛还是被气走了，即使俊华真的没看小黄书。 俊华因为受到误解，肚子里也有一团火。进班时“砰”地一声，将门重重摔上。 很快，罗涛阴沉着脸回来了。 “谁摔的门？”罗涛像一只发怒的狮子。 “我。”俊华平静地说。 “很好，钟俊华，你跟我过来办公室。“ 俊华起身离去，他并不知道，这一走，就是一个月。 当天晚上，一个人被扔出了玉岩外。 罗涛狞笑着，对那个被扔出去的人说： “无心学习的废物，就应该被当做垃圾扔掉啊。” 另一位捞仔陈瑞端的遭遇也大致相同：网瘾突发，溜去电脑室打电脑，误打误撞闯入了神秘的”4室“禁区，也在当天下午被飞来的篮球砸晕，然后被扔出了玉岩。被击中时，瑞端躺在地上，篮球场下午的阳光仍旧火热，橡胶地面像一块烤肉的砧板。但火辣的灼烧与刺痛感仍旧无法挽回这个失足少年的神智，眼前的黑暗即将将瑞端吞噬，他拼尽全身力气，喊出了他昏迷前的最后一句话： “猛龙总冠军！”（俊华说：勇士总冠军） “同学们，俊华和瑞端两位同学因球技过人，已被东莞银行篮球教练看中，他们被招标去外地训练，可能会暂时离开我们，让我们一起……” “……祝他们好运！”罗涛阴沉着脸说。 “我就是这样被扔出来的。”俊华对瑞端说。 “那么我呢？” “不很清楚，不过肯定是触犯了玉岩的某个禁忌，才会被扔到这里。” “这里是哪？” “麒麟山山洞，玉岩的后山。” “我在玉岩呆了那么久，还从来没听说过或看见到过玉岩有什么后山。” 俊华叹了口气，说道： “你当然不知道，玉岩所有的学生，包括我，都不知道玉岩有后山。” “为什么？” “因为现在知道这座山存在的同学，除了你我，其他人都死了。” 瑞端猛地把被子掀开，从床上跳下来。 “你说什么？” “是的没错，他们都死了。“ “可是，怎么会……” 俊华摆摆手，接着往下讲： “他们用了些小手段，将玉岩和外界隔离开了。” “那是什么？你又是如何知道的？” 俊华又叹了口气，他需要喝口水。 第四章：领军纪年第2年 —— 魔术“你跟我来。”俊华带瑞端进入了一个小房间。 房间里很阴暗，但隐隐约约地看得出来桌上有四块凸透镜，一个光具座和一个背景板。 俊华打开手电，房间里顿时光亮了许多。 “接下来，我来表演一个魔术。” 俊华拿起四块凸透镜，将它们安放在光具座上，每个凸透镜减有一定的间隔，且从中间对称摆放，然后他拿起背景板，装在光具座的最后方。 俊华把手指放在第一块与第二块透镜之间，他的手指消失了！而背景板仍可完整地被看见。 “这……”物理课都没认真听过几节的瑞端居然也开始认真思索着。 “当我们看到一个东西时，我们真正看到的是光频率和物体之间的相互作用。在这个魔术中，四块透镜间焦距不同，手指反射出的光线，经过四块透镜改变了折射率，光路变窄，使其发出的光线最终无法被我们的视网膜接收，看起来就像手指隐形了。”思维跳跃的人能力就是强。 “嗯……”瑞端若有所思地点点头。 “明白了这个，你再出去看看。” 瑞端走出山洞，望了望四周，与他料想的一样，根本看不到学校。 “他们应该用了类似的方法改变了光的折射率，使玉岩中学在外界看来是完全隐形的。”俊华顿了顿，继续说道：”我早就留意到了，后来我才知道，那些灯都是投影仪！整个玉岩的天空都是一大块投影布，那些投影仪将外面世界的一花一草、一树一木、太阳月亮、行人车辆都完整地投影在内部的投影布中，让我们这种无知的学生信以为真，为保持我们这些弱小虫子的生命，玉岩应该还配备一套完整的生态循环系统，更新空气，促使有机物分解，虽然我不知道这些装备玉岩是从哪里弄到的，但可以肯定能的是——他们用政府的钱，干出这一些伤天害理的事！” “不仅如此，他们还将那些违纪违规、不善于学习的同学通通扔到麒麟山，不给他们食物，让他们活活饿死，那些同学，包括我们，都无法走出麒麟山，只能在挨饿的痛苦中死去，我俩差点栽在这些野兽手里！” 俊华说道，愤怒地捶了捶洞壁，虽然很痛。 “原来是这样……他们的目的是什么？”瑞端问。 “目的……瑞端，你仔细想想，一个只留优生，不留差生，清除了学生入校之前的记忆，给他们洗脑，告知他们只有高考完后才能离开学校，并强迫学生整天学习的学校的升学高优率能恐怖到什么程度？学生毕业后再清除他们有关高中的一切记忆，这一切都好像从未发生。高优率远高于其他学校，这样学校就能吸引到更多愚昧的家长，用所谓的”孩子美好的未来“去迷惑他们，鼓励他们，将孩子送入玉岩，当然每个学期的学杂费都价格不菲。玉岩也就能赚到更多的利润。所有入学的学生，家长都为他们签了一份生死状，只要触及违令或成绩实在太差，学生都会被处理掉。家长不能报警，否则也会有生命危险。这些丧心病狂的家长和他们对自己孩子成绩和品行的极度自信，才导致一个有一个的悲剧发生。而这，就是玉岩的‘领军计划’。” “原来周末真能回家，这也太可恶了……话说回来，你又是如何知道这些事情的？还有，这一年以来，你是如何生存下来的？”瑞端不解地问。 “是A，他在内部已经知晓了这个秘密，他知道我们还活着，从‘4室’的密道里来到麒麟山，将水、食物等生活物资递给了我。我们才能够活下来，具体以后再说。现在的任务是如何逃出去，向外界求救。既然你醒了，我们休整一下，明天马上行动。” “居然是A这小子，平时看她不正经，学习起来好像也不咋地，成绩却还可以。” 俊华走到洞口，望着头顶投影出来的星辰，感叹道： “我们都是阴沟里的虫子，但总得有人仰望星空。” 第五章：领军纪年第2年 —— 俊华瑞端失踪两天后早在与A交谈时，陆般就感觉到有些不对劲，为什么自己入学以前的事不记得了？为什么高考完后才能离校，这真是教育局规定的？还有最重要的一点：为什么饭堂三楼的饭菜这么难吃？ 随着俊华和瑞端的失踪，陆般开始警觉起来，对学校违令的“禁区”愈发好奇，联想到A与史克经常去的“4室”，陆般决定一定要去到里面一探究竟。 首先得想办法进去，而想进4室得先弄到密码。 “A，最近皇室（战争）有个十二胜公主挑战，打满可拿到新的公主表情，我帮你打，保证打满，怎么样？” “真的吗？太好了，谢谢你。我很喜欢公主的那个新表情。” “不过你得告诉我4室的密码。” “4室密码？想都别想，这是学校最高机密，况且4室是禁区，只有我和史克能进入，公主表情我还是自己打吧。” “加上下一次的全球锦标赛和选卡挑战。” “行，成交！”A爽快地告诉了密码。 接下来就是保安了，4室禁区的保安巡逻异常频繁，很难有机会溜进去。不过俗话说：“百密而一疏”，经过多次踩点，观察，陆还是找到了机会，每周日下午，几个保安都会经不住奶茶的诱惑，在奶茶店点上几杯奶茶坐在一起聊天、打游戏，时长为一个小时左右，而这正是陆的最佳时机。 刚一进门，陆就被这里的环境吓到了：一大堆的文件资料堆在墙角，地上密密麻麻全是网线，有四五台主机在嗡嗡作响，几台终端机还亮着，里面简直就是一个作战中心。 很快路陆般回过神来，他明白自己要干什么。他走到一台终端机前，手指敲击键盘，移动鼠标。 “欢迎来到4室，或者你可以叫它：学生档案中心。”A和史克如鬼影从一旁的侧门出现。陆般吓了一跳，瘫坐在椅子上，心脏在疯狂地搏动。 “你们怎么知道我会来的？” “要密码，常踩点，有事没事盯着4室，不是想要进来玩玩还能是干什么？”史克诡异地笑着对陆说。 “我早就警告过你了，4室是禁区，只有我和史克才能进入，其他擅自靠近禁区的人，哼！保安马上就到，陆，你还有什么想说的吗？” “可恶，”陆般无奈地撞了撞地板，“难道你们不觉得学校很奇怪吗？你们真的对自己过去的记忆丧失没有一点怀疑？玉岩肯定有鬼！还有，俊华和瑞端的失踪，你们真能相信罗涛那所谓’训练‘的说辞？” A和史克相视一笑，看来我们又有新的力量了！ “抱歉，陆般，让你受到了惊吓。但我们必须测试一下你是不是学校的人，我们早就察觉到了学校的不对劲，关于俊华和瑞端的失踪，我们也清楚他们到底去了哪。”A对陆说道。 “这里本是学生档案中心，专门管理学生入学前后档案，于是档案管理过于复杂且需一定的电脑技术，学生处主任刘锋事务繁杂，只能将4室交由他最放心的学生——我们前去管理。可惜啊，他最放心的两位学生居然背叛了他。 “我们原本和你一样，也只是只听从命令的机器而已，直到我们发现了这个。”A走到一台终端前，手指飞速操作，因为他知道他们聚会的时间有限。 “这貌似是一名保安的日志，”A打开了一个很隐秘的文件夹，里面有三十多份.txt文稿。“这些日志原本保存在一个U盘中，我和史克来到4室后不久就发现了它。这30多份日志可不简单，它们包含了玉岩所有的秘密。我们由此有了自主意识，并一直在寻找可信赖的同学加入我们。幸运的是，我们找到了玉岩第一个有自主意识的学生——你。“ “我？” “是的，玉岩的学生都丧失了他们的自主意识，成为了只会学习和听从指示的机器。而你不同，你是完全独立拥有自主意识的第一人，你意识到玉岩的危险，并果断采取行动，我们无从得知你的自主意识哪来的，但可以肯定的是——” 史克握住陆般的手：“我们，是同志了。” 迅速浏览完日志，陆般随着A来到了4室的一面墙处。史克在一台终端机上操作了一下，陆面前的墙缓缓打开了。 “没有错，4室还有一个不为人知的密道，这个密道我们也是从保安的日志中得知的，修建的原因不清楚，但密道的另一端连接着麒麟山的山洞内，俊华和瑞端就在那儿。” “我明白了，话说那个发现玉岩秘密的保安怎么样啦了？” “他被抓了。” “……” “很遗憾，我们在第34篇日志中没能看到完整的信息，应该是他在急忙中拔下了U盘，我们推断，他应该是被发现了，情急之下他只给我们留下有限的34篇日志。”史克说。 “他是个英雄。”A说。 陆般走到窗前，拉开窗帘，夕阳的余晖正洒在这篇是非之地上，微弱的阳光照亮了面对它的4室，也照亮了陆般面面颊上晶莹的泪光。这位素未谋面的保安，为玉岩的学生能够回家带来了一丝希望。 后记：很抱歉没能写完这篇……怎么说呢？还是因为太懒了吧，写到这里已经是 后记：一直想对短暂的六班说的话（By XZW）我不知道，六班的小伙伴们对我的印象如何，上次研学科给他人贴标签那次的活动我没有参与。我并不是特别想让其他人来评价我，但同时，我又十分在乎别人对我的评价。在这短暂一年的共处时光里，我希望我能留下好印象给你们。如果曾经我做错过什么或伤害了某个人，那就在这里说一声抱歉了。 其实我觉得高一六班是一个很团结友善的班级，从第一次军训到现在即将分离，班里没发生过较大的矛盾，学习的气氛、环境都很不错。每天的课堂总能很愉悦地度过。“班级日志“这种严肃、正经的每日记录工作都能被六班的小伙伴们写得很有趣呢！ 我是作为广大附中一名次优等生过来玉岩的。当时的我还不了解玉岩中学，第一志愿也没有填这，因为外地户口，离想去的学校差了几分，来到了玉岩，这也算是一种遗憾吧，毕竟也曾经努力过。说实话吧，来玉岩的时候是抱着几分不情愿，因为个人小小的虚荣心及自负心吧。但是六班给我带来了一种不一样的体验，是我在以前的班级里没有的友善感，可能我更适合这个班集体吧，毕竟竞争总会给人带来伤害。[作者：这里说明一下，之前罗涛老师说我说六班本来就很差劲，没有的事，我从来都没觉得成绩是衡量班级好坏的标准。] 说说同学吧，与六班的某些同学确实让我有些不舍，这里就不说是谁了。六班的同学还是很幽默的，这一年里有很多的新梗创造出来，然后被我们玩坏。六班的同学还很坚强，经历了这么多次祥老师、赵老师、罗老师的残酷批评，我们依然顽强地在课上课下活跃着，大家都能相处得十分融洽，这也许是我钟爱六班同学的一点。 再来谈谈老师，六班的老师都很强呢！他们或多或少都有着个人荣誉，罗老师的“名班主任”和陈兴祥老师的“全国优秀教师”，当然这并不是我评价他们和“强”的标准。六班的老师们知识面都很广很深，像查理就很厉害，上他的英语课能学会很多其他的知识。六班的老师们也很敬业，像陈兴祥老师就为全体高一编了校本教材，还专门为六班的数学成绩的提升想出各种办法；罗涛老师更是不辞辛苦，晚上九点多还不回家休息，亲自跑来六班监督他最看好的，也是最不放心的钟俊烨同学，督促他认真学习，为目标而奋斗，实在令人敬佩！总之，六班的老师们虽然平均年龄大。但有时却很可爱，还是很舍不得这些老师们的。 明天可能就是六班最后一次在班里上课了，后天分别时，也许我们中的许多人都形同陌路，互不相识。时间与距离真的能够冲淡我们之间的友谊与感情。但是没有关系，有了与你们在一起的美好回忆，抚摸着与你们拍的大合影，回想起一起学习、一起生活、一起参加集体活动、一起为燃烧青春而付出的努力和汗水…… 当我们若干年后在不同地方回忆起高一六班这个集体时，它的存在，便有了意义。而这一切，便已足矣。 就写到这里吧，千言万语都表达不了我的感情，只能让你们自己去想了！ “无论命运将我们引向何处，我们决定，选择希望。” 肖正午 2019年7月11日晚 谨以此篇日志，献给广州市玉岩中学2018届高一六班（2018.9.1 2018.8.26~2019.7.12） ZQ同学：（由于WJ同学不让我写了，于是我还是决定写一点） 看完肖正午同学的文章，有好多想法，其实没有想到他居然会写下这么感人的话。记忆中的XZW还是在军训时领唱军歌，上课时搞xíe气。 六班真的很棒，这个集体，每一个人，都有自己很优秀的地方。 昨天晚上想写一篇总结高一的日志，思考着六班教会了我什么，我带给了六班什么，说不清。但我知道，六班给我留下的，会伴随我们一生。 军训时一起淋过的雨，还在呢，在这个世界循环着，也许它会去经历固液气的旅行。六班，成长路上，感谢有你们！ 庄琪 2019年7月11日 （我好爱这个本本，它最后会去到哪里呢） （最后得到这个本本的人可不可以告诉我一下下） （如果它不属于任何人，我可不可以收留它，虽然……） 29号说：终于下定决心写了！[作者：因为相比其他写这个简单而有趣]，就当我夜来非吧。[作者：放假了也]依然头疼不知道写的什么。（双关）第六章：领军纪年 二年过渡期 2019年7月8日「 沉沦和放纵没有带来任何期待 这是个不符合梦想的世界」 在即将进入梦境的瞬间，才筠吸入一阵凉风，惊醒。头昏脑胀地感知四周环境，模糊确定下这是在自家床上，不是在玉岩。既不是入睡前潮湿被铺中的闷热，也不是灰尘飞扬时的浑浊空气，更没有一台空调吐露的气息与家中的相似，又怎么会想到玉岩？才筠不禁深呼吸一口，平复情绪重新入睡。今日才想起自己买了溶玄的海带丝，随手开了一包吃，不知从什么时候开始，海带丝成了玉岩小卖部的违禁物。外卖、染发化、打牌、智能手机、恋爱……这些白纸黑字记录在“违禁”清单，海带丝倒无伤大雅，但她知道，有些东西是不容反抗的违禁物，却从不被承认。从zf主任说出“来了就是玉岩人”的瞬间，她也就意识到这点了。 （那天写了写不下去，先补一下吧）很久之前她就疑惑过，为什么玉岩容不下其他的记忆（那些部分仿佛被挤出脑中楼阁），一离开玉岩，除了周末作业以外的记忆都轻易清除脑中。 数十次去往玉岩的车上，寸筠（小编：续写作者这里这么写的）盯着眼前不断后退的景象，轻声说：“不想去学校。”天空一如既往地灰白着，看不出到底是散射着光，还是吸收着。“玉岩有什么不好……爸爸妈妈给你的从来都是最好的，你说你有什么不满意的？”父亲问，声音中满含着不理解、责备与强硬的劝说。从第一句话落入耳中开始，才筠就不得不把全部精力用于压制大脑的思考，封闭听觉，尽全力堵住喉间——无论是即将发出的无力嘲讽和干呕，还是要道出玉岩的真面貌。但那灰白天空下灰白的楼房，you（小编：作者这里是想写黝）黑的地面，草皮翻起的裸土，干枯的竹叶，浑浊的绿水，全都不受控制地涌入脑海。才筠不得不用更多的力气去反抗。她想干笑与解释，但接踵而来的满堆质问只会将她压得窒息。 “只有痛苦，永远不会让人腻烦。“ 回到家的几天，把玉岩抛在脑后，沉浸在自由的夏日，只有回到这里，回到这里的那一刻，一切都想起来了。 第七章：领军纪年 二年过渡期 2019年7月11日「 地理课摘要：某种东西形成过程」 玉岩建校几年了？才筠记得非典比自己小一年，86（初中）比自己小几年，玉岩也比自己小几年。十几年时间，玉岩用如使观赏湖雨天仿佛割裂成几块的东方神秘力量，成为了黄埔区的一块名片，争取到政府1.8亿的拨款。“我从广大附中来……我相信，玉岩也会越来越好！”即使因为站得遥远而看得一片模糊，才筠也能感受到，zf主任脸上一定是带着笑的。 溶玄是本班四名”老玉岩“之一。作为自由散漫早读一枝花，在认真负责地播放早读听力音频时，却不时会出一些……小小的差错。震耳欲聋的电音以诡异的旋律旋转出，同学们以轻快的声调来调侃溶玄，才筠环视四周——难道只有他听出这是什么音乐吗？ 那或许是一个信号。在溶玄又不小心放出几次音乐后，才筠这么想着（从某种程度上说这系列就是炸厕所曲风 ）。妄想症系列——一重加害……这系列中，是有哪一句歌词唱的“不要__,”是作茧自缚，还是自作多情，还是欺骗自己，才筠已经记不清了。或许是建校不久，玉岩的制度从某种程度上不如其他学校严格，学生还能够有反抗的力量，今年管束渐严。溶玄在玉岩近四年，四年在玉岩十几年历史中已经可以说是很长了。 “你好像跟很多老师都很熟——很多老师都认得你。”才筠这么说 溶玄笑着扯开她搭在自己手腕上的手，“其实我没有的……初中我也不叫溶玄……我换了个身份进的玉岩。” ——但还是被认了出来。 才筠再次拉住溶玄的手臂将她拉进自己，压低声音。“你咽下的话语……都到了什么地方？” “什么？“溶玄听不清，俯下身靠近才筠，另一个英语课代投来了目光，溶玄只好又挣脱她的手，“先早读，以后再说。” 那个“以后”实在什么时候来临，才筠也记不清了，她仍然主动向溶玄搭话，同时问些像玉岩房顶的瓦到底是灰色还是灰黄还是灰红，玉岩操场会不会秃这样无所谓的问题。至于像麒麟山山门后是什么，体育馆木地板下有什么，她始终不敢问。 “我和查理就是一个自由散漫的学生遇上一个自由散漫的老师，但现在我要离开他了，好难过。”是日，溶玄这般与同桌说着。听到这话的才筠往那边看了一眼，溶玄一侧头，没有与她对上目光。是的，高一即将结束。课代表们忙于收发资料费，发资料书。玉岩如何成为强校并不重要，暑假作业不过是它漫长计划之中，微小如芥的一步。 明日就是离校之日，阴云如期笼罩在玉岩在科学城上空，云与雨徒留一片黑白。“春天结束了。”七月一日的夜晚，才筠这么对溶玄说，“已经结束一个月了。”后者结束了这对话。有无数人与她一样期待着夏日吧，但在玉岩麻木的生活才筠专注于期盼，忽略了它的到来。明日就是真正的夏日了，只是summer time这词不再包含着“自由”。 “无论我们走的再高再远，也走不出这末日。” 后记：（By ZZJ）还是没写成想要的题材呢。由于平时写作狭窄，我还是shèn长写以某人为中心的风格（小编：这里@zly）[作者：这里原意是指故事以寸筠的视角zhěn开，大多是“寸筠想起”“寸筠觉得”这样，没办法像xzw同学一样跳出这个角色的视角来写别的地方，比如主角是陆般但是也能写山洞两个人对话那么久。不过故事写出来就不是我的了，pexi（指小编）这样想也没关系的]。这两篇写的梗没什么意思，思路也不很清晰，故事也不知道怎样zhěn开比较。自yuán，就当作正常的班志和一篇关于自由和幻想的故事来随便kān kān吧。 看了一下之前那篇，提到的四个班内的同学。起名字很有意思的啦也很靠灵感。 为自己字丑说声抱歉（反正我也不改的）（“才”真的是“寸”不是“才”！）祝大家字越来越好康。 帕格尼尼练习曲No.24巨好听！+V/Q你就能获得一个每天尖叫流的安利选手（不是）（还有很多表情包库以前的我现在的我相册清空了=)） 我们六班的同学都非常有趣，大家都是shèn于学习的啦，祝大家走得更高更远！ By：张卓嘉 后记：（By ZQ）军训的时候我们班好高冷，教官组织的游戏大家都是冷漠，一直到了我们一起淋雨一起被罚，那个夜晚是我在玉岩的第一次流泪，也是我开始感到六班成为了一个集体，一个一起受罚的群体。军训合唱节，我们收获了六班的第一次荣誉，是平凡之路，我们在跨过山和大海之时一定有对彼此的记忆。校运会开幕式王骏给我们排队型动作，最后我们还是忘记了，但是效果还是很棒。1500米的过程真的好漫长，过程中有你们的加油真的很棒，我也不知道自己为什么会报名长跑。肖正午，尹鹏宇和张岚月借着志愿者的名义陪我跑到了终点，后来我趴下了，是肖正午和郭言扶着我。期末音乐表演大家都解锁新技能，秦梓亮一唱成名，我们小组的“小美好”还记得吗，要记得高一六班的我们，最好的我们。合唱节准备节目，租衣服，化妆扎头发，忘记了学习忘记了一切只想一起给大家呈现最好的六班。看英语配音的那段时间期待着英语课，等待着每一次惊喜。刀老师的“说”和赵奶奶的“自己去想”让我们好快乐。晚自习安静的时候我会忍不住感慨，六班真的太棒了吧，吵闹的时候，我们是给彼此分享快乐的六班。六班的每一个人都很特别，都特别好。我记得第二次选语文课代表的时候我去番中了，后来回来知道大家对我的信任感动到热泪盈眶，当语文课代表的这两个学期其实我不很合格，不说语文学的不好吧，我连平翘舌前后鼻音都分不清，但是我真的好爱六班齐读的早晨。特别喜欢琵琶行，因为每次背琵琶行大家会特别整齐特别大声节奏超级好，以至于我在最后两个星期总是让你们背琵琶行，嘻嘻嘻。谢谢六班的一切。无法用语言祝福你们，你们一定要好好的 在大扫除的时候，找到了这个学期和刀老师“结仇”的那张“别自欺欺人”的纸条，那时候为我去找刀老师的同学真的好感动，哭了两节物理课并决定把那段话剪下来，记仇一辈子。后来慢慢地遗忘了，在大扫除把它丢进垃圾袋的那一刻，我心中的刀老师又回到了心中原来的样子，细心温柔友善的。对于曾经地耿耿于怀，我想对刀老师说，对不起 109的这两个学期是粉粉的，来着各地的六个女孩一起努力过，多少个夜晚分享着彼此的故事。洗手台的， 厕所的大蜘蛛，床上的蜈蚣。庄q去饭（fang）堂（tan），麦xw喝牛（liu）奶（lai），米孜努尔听到猫（毛）叫，阿达莱提说要读（赌）博，朱zm喜欢在宿舍吃泡面，徐xt每天挑灯夜战。 希望八月学妹会喜欢粉色的109并善待它。希望九月109小宝贝的新室友如我们相亲相爱那样互相照顾昨天晚上班群好感人，原来男生也会在离别之际对自己的不舍毫不隐瞒，“我不管 反正这个群不能凉”“行 人齐了”超级感动。郭言为六班付出的这一年辛苦了，谢谢你！ 和张卓嘉小姐姐的故事一定未完待续…… 港湾小学开始玉岩相见，击剑队四年训练曾有你相伴，少年宫美术课你不记得有我了，认识这么多年，高中才开始慢慢熟悉。我们的缘分要慢慢地慢慢地用，久久不忘。 关于林凯茵和麦麦的故事 和lky的友谊从军训一见如故就开始啦，导致好多人以为我们是初中同学。校运会开幕式彩排的时候，秦梓亮的玩笑让我误以为是麦麦做的，麦麦告诉真相以后，lky竟然去揪住qzl的衣领。平时温柔美丽的lky为了我而不顾自己的形象❤从那天开始麦麦加入了我们活动最积极的小团体❤❤❤。 庄琪 罗涛回复：老师忌讳欺骗，学生忌讳误解，那天改作业我是很情绪化了，因为在意，所以我们才会感受到伤害，希望你真的放下，学生也给老师上了一课，未来可期！ 小编后记：我还是决定写点什么（By WPX）虽然我们已经分开一天了，再说现在写可能有点晚，但是我还是想写点东西。 从我第一天进入玉岩中学，这就决定了，我是六班的一份子。 刚开始705考进玉岩，又在开学考考得挺好（也许吧）分进了琢玉班，我就已经是六班人了。记得刚进入学校，在男生宿舍门口的马路上见到了PY。我本来就是跟PY一个学校的，当我得知我跟PY一个班，心里非常高兴，毕竟PY的成绩非常好。 B205，一个里面一半是苏元人的宿舍，让我熟悉起来特别容易（因为PY和Z*Z我都认识）。不管是天天游戏的LOL的lwj还是对鞋有着深刻（？）研究的drcccccccccccc，再或是被我们调侃的添哥，我都非常喜欢和你们在一起。添哥上学期的早起说不定就是我养成天天早起的习惯的原因之一。不过我还是要跟添哥道个歉，很抱歉我们天天“欺负”你，你是我们尊敬的添哥。（下面皮一手） 在男生宿舍中，更是有善于唱歌的wj、xzw、qzl三人（wj超帅！），跟我一样是米粉的斯文哥（斯文哥好可爱哒！）【←本性暴露】，善于运动的gtf、小液滴（在这里就让我这么称呼吧）、cpf（钻石大佬带我上分！）等具有运动细胞的同学们。你们都或多或少地影响我，毕竟我一开始是不喜欢运动的，但是现在体育课我至少会跟你们打球，谢谢你们！ 六班的所有同学，都是我尊敬的。我的同桌lmx真的是位大佬，她虽然成绩特别（手动着重）优异，但是还是会问别人，即使我是一介萌新，可能是她影响了我，至少懂得不会就要问；myq，我们的纪律委员，非常有威严（有时吧），对班级的晚修纪律是做出了比较大的贡献的（虽然有时……）；我们班的班长gy，当了两个学期的班长，每次都传达工作都是能够做好的（虽然每次锣叨会先打电话给我），拍照技术超一流，工作室的超高级摄影师！ 其实，那张“想继续琢玉当兄弟”的心愿是我的，我真的很想跟大家在琢玉继续当兄弟（？），但是，无奈最后出来的结果让我的“妄想”真正变成了妄想。如果下学期还有跟我一个班的同学，我们可以继续当兄弟！ 每一次大家在台上看视频，我都会说：“不准看视频”并且把你们轰下去。其实，每一次辣么多人，有时候我看着都不想管，让你们继续看就好了我还是决定要写点什么，无奈这份责任落在我的身上，我必须管理好，所以还请大家原谅_。 肖正午的那篇小说，我正在转成电子版，我想给大家留下点什么，到时候我会放出下载方式（肖正午的文笔没想到这么好），希望大家多多支持肖正午呀！还有续写同学的部分我也回打上去的（大佬之作呀） 我们班的老师，都是非常好的老师，不像某位xzy同志非常无情地对待她们班的学生。要不是华哥要课前提问，我或许不会去背文言文；要不是祥哥的“边听边想”，我可能在数学课上还在神游；要不是Charlie给我们开拓视野，我可能连the beatles都不知道。。。各位老师交给我的太多太多，我在这里非常感激你们！如果下学期各位老师还能教我，我一定不会辜负你们的期望！ 写到这里我也不知道我到底说了什么，只觉得六班给我的东西太多太多，三言两语根本说不完。在这里还是祝大家前程似锦吧！ 「 永远相信 美好的事情 即将发生」 吴沛熹 2019年7月13日 写于英才计划 2019.8.30 更新罗涛说：这一年，非著名物理学家、哲学家“罗伯. 道特森”发表了很多歪理，其实他分别时有想来一个完美的ending，甚至想再为你们哼唱几句，但却被小罗伯的高烧乱了方寸 ，小遗憾，不过，这些日子在他心中应该永远都不会抹去。刀刀再见你们时，可能只会努力在他黑乎乎的脸上挤出淡淡的略带诡异的笑，不怪他，黑不是他的错，或许他的偶像是古天乐，也许是包拯，毕竟良心与理想，他也有在内心时刻铭记。其实刀刀他害怕照相，毕竟他身边的面孔永远年轻热烈，虽然偶尔他也撒撒娇，卖个萌。刀刀去年爱说“滚！”，刀刀今年欢“说！”有些词语用了一年后刀刀会换掉不在课堂说，毕竟物是人非。有的人，对不起！有的人，谢谢！ 感谢：作者：肖正午、张卓嘉 编导：吴沛熹 录入：吴沛熹 校对：杨斯文 图片：郭言 原版下载地址：DOCX格式 PDF格式 EPUB格式"},{"title":"","date":"2021-02-19T15:49:05.114Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"404js/jquery.min.js","permalink":"https://coralare.com/404js/jquery.min.js","excerpt":"","text":"/*! jQuery v2.1.3 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */ !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.3\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=hb(),z=hb(),A=hb(),B=function(a,b){return a===b&&(l=!0),0},C=1"}],"posts":[{"title":"“陪伴是最长情的告白”","slug":"diary6","date":"2021-06-10T15:59:59.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2021/06/10/diary6/","link":"","permalink":"https://coralare.com/2021/06/10/diary6/","excerpt":"","text":"这应该是我第一次写这种对话式的文章，怎么说呢，本文其实是我要说的一些东西…… 相信经常跟我聊天的群友们知道，我现在（2020.7.15）是一名高三学生，在2021年参加高考，也就是说，现在我其实并没有什么精力放在网站的维护和文章的撰写上 2019年7月1日，本站正式上线，当时还是本主题的早期开发版，功能还挺少的，而且没有多级导航菜单。文章只有一篇hello world，直到我7月5号写了当时我用的挺多的一个软件——cmder，才有了第一篇文章 7月9号，我同学LOL想带我上分，但是发现自己的电脑系统坏了，问我怎么装，我说了以后他并没有明白，就写了一篇Windows安装教程 此后，我一直在更新一些软件分享类的教程，当然也包括hexo的部署、直播服务器srs的搭建、CloudFlare Workers的实战等文章，当然其中包括我高一同学合作完成的小说“这个故事由我开始，也应由我来结束”（主页隐藏） 到了今年的寒假，因为新冠肺炎爆发，我在家里很无聊，开始写起了爬虫，就出现了Hitokoto-Spider和Netease-Comment-Spider这两个项目，其实这是我第一次将python的知识拿来实战，后来就开始不断用python弄各种东西，包括Valine-Magic，还写了几个MCDReforged的插件，深刻地体会到了开发的乐趣 2020/5/11这一天，我回到了学校，开始复学。从这天开始，我露头的机会就少了很多，主要是①从工作室退休了 ②不是经常坐在电脑前，所以大家的留言我会比较晚回复（高PING战士） 不过我还是在坚持更新Valine-Magic，渐渐地从Github中回到了现实生活 2020/7/15这天，我正式考完了高二最后一场考试，升到了高三。我将在2020年8月9日返校开学，到那时，我将会真正投入学习，所以就没什么精力去更新本站和Valine-Magic（可以交Issue和PR），希望各位友链大佬能够给小弟保留一个位置 陪伴是最长情的告白，感谢各位访客的陪伴，到了今天在我写这篇文章的时候，UV是7538，PV是24138。不管你是刚来到本站，还是以前就来过本站，我在这里都感谢你们。我将在2021年6月8日到2021年6月10日参加全国高考，届时等我合上笔盖，从学校回到开发界，我相信我能够闯出属于我的天空！ 想与我联系，可以使用QQ加3559869084或者发邮件到&#x61;&#x64;&#109;&#x69;&#110;&#64;&#98;&#105;&#x6c;&#105;&#x33;&#x33;&#46;&#116;&#x6f;&#x70;，我的索爱W595C虽然已经饱经沧桑，但是他还是能看邮件的…… GamerNoTitle 2020-07-15 18:27:01","categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"}]},{"title":"白嫖？给我也整一个！白嫖网易云游戏平台时长","slug":"NeteaseCloudGameFree","date":"2020-12-06T03:14:53.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/12/06/NeteaseCloudGameFree/","link":"","permalink":"https://coralare.com/2020/12/06/NeteaseCloudGameFree/","excerpt":"","text":"有谁不爱白嫖呢，特别是配置好的东西 网易云游戏平台我在它内测期间用过，那个时候游戏变动太大（指可玩的游戏下周就变得不一样了），然后就放弃了 几个月前不是原神公测了嘛，就发现这个平台有原神（主要是自己手机玩不动），所以就开始该平台的使用 但是！！！它每天只有120~180分钟的游戏时长（不签到120mins，签到不等），而且电脑游戏的时长是累计制的，不签到就等于没有！！！ 于是，我开始了我的白嫖之旅……我写了一个自动签到脚本，用Github Action帮我运行，就可以自动签到了！（耶~） 你可以在Github搜索wyycg-autocheckin找到这个脚本，也可以直接访问https://github.com/GamerNoTitle/wyycg-autocheckin来获取使用 本脚本通过使用Github Action来进行网易云游戏签到操作，让你能够天天白嫖网易云游戏时长和云电脑！ 喜欢就给我点个STAR吧！ 签到时间是早上10点，如果有需要就自己修改.github/workflows/AutoSignin.yml中第12行的时间，时间遵循UTC时间，+8才是我们的时间 请不要使用非master分支脚本，他们通常正在开发新功能，会有BUG出现 关于签到失败返回的结果（这里有实例），如果你有解码的经验，可以前往这里提供帮助，Thanks♪(･ω･)ﾉ 赞助点击下面的Badge其中一个就可以跳转到相应页面，感谢老板的支持！ 目录 使用方法 变量获取 脚本更新 Q&amp;A 使用方法变量添加1、Fork本仓库，按右上角的分支按钮（如图） 2、进入设置，设置变量cookie和teleid teletoken SCKEY（这三个可选） 如果使用多用户，多个cookie请使用#分隔 如何获取变量内容？请点这里 测试脚本请在当天没有签到的情况下测试！！！ 我们先进入Action界面，启用Action 然后我们进入对应的脚本，启用脚本，并进行测试 只要测试通过就是没问题，如果你配置了TELEGRAM还会收到你的BOT给你发送的消息 测试通过后，你就可以放着它不用管了，它会自己运行的~ 变量内容获取cookie获取首先我们进入官网，进行登录，然后用F12打开开发者工具后使用Ctrl+F5进行刷新，会刷出很多结果 我们在里面找到@me这一项，然后在右边找到Authorization将冒号后面的内容复制下来就是我们所需要的Cookie 如果使用多用户，多个cookie请使用#分隔 teleid获取用你的Telegram找到@userinfobot，点个Start，会直接给你回复你的ID，复制下id后面的数字就是teleid了 teletoken获取找@BotFather进行机器人的创建，按照提示创建即可，会给你一个API TOKEN，如果一不小心点过去了可以用命令/mybots管理自己的bot，找到自己想要使用的bot并获取API就可以了 SCKEY获取访问ServerChan官网，用你的Github账户登录，在发送信息可以看到你的SCKEY 脚本更新自动更新点击这里安装插件，可以选择所有仓库，也可以指选择你Fork的仓库（当然至少要选择fork的仓库对吧，要不然怎么更新），然后不管它就好了 详细步骤可以看下面的图片 如果你完成了上面的步骤，就可以不管它了，自动更新会自己进行（除非有Merge Conflict） 手动更新在自己的仓库中，创建一个pull requests，上游（右边的选择本仓库（GamerNoTitle/wyycg-autocheckin）的master分支，左边选择自己的仓库，然后创建PR并Merge即可！ 具体可以看下面的图片 Q&amp;A返回值400并附带一串不知道什么鬼的字符串例子： 12345678感谢使用来自GamerNoTitle的网易云游戏自动签到脚本！今日签到结果如下：成功数量：0&#x2F;1失败数量：1&#x2F;1具体情况如下：第1个账号签到失败，回显状态码为400，具体错误信息如下：GL8B&#x2F;hH+v9cYGsm&#x2F;Ag8PAAwBAr&#x2F;XztPNzsm&#x2F;Ag8PChAEv9e&#x2F;EhACD70QBgQLvREMAf4Wv8m&#x2F;Ag8PChAEAAu&#x2F;17&#x2F;5EtID0tD5EtLWz9b5EtIBA8&#x2F;5EtT&#x2F;1AL5EtLP0M2&#x2F;Gqc&#x3D;GamerNoTitle: https:&#x2F;&#x2F;bili33.top网易云游戏自动签到脚本: https:&#x2F;&#x2F;github.com&#x2F;GamerNoTitle&#x2F;wyycg-autocheckin 首先你需要确认你当天是否已经签到过了才运行的脚本，如果确实先签了到再运行脚本，网易确实会返回400 目前也只发现这种情况会返回400，如果有其他情况你可以在issue跟我提出 错误代码telepot.exception.TelegramErrorChat not found请先用你要接受信息的账户发个/start给你的bot，或者检查用户ID是否正确！ Not found请检查自己的Telebot Token是否正确！ urllib3.exceptionsMaxRetryErrorHTTPSConnectionPool(host=&#39;api.telegram.org&#39;, port=443): Max retries exceeded with url: /botxxxx/sendMessage 出现这个错误，那就是Telegram的问题，Github连接不上Telegram服务器（大半是TG服务器炸了） ReadTimeoutErrorHTTPSConnectionPool(host=&#39;api.telegram.org&#39;, port=443): Read timed out. (read timeout=30) 出现这个错误，那就是Telegram的问题，Github连接不上Telegram服务器（大半是TG服务器炸了）（复制粘贴大法）","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"日常吐槽08 - 换用Blackberry9720三个月后的感受","slug":"diary8","date":"2020-11-15T02:43:09.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/11/15/diary8/","link":"","permalink":"https://coralare.com/2020/11/15/diary8/","excerpt":"","text":"先给你们看看我的Blackberry9720（下图） 因为我的索爱在8月的时候听筒听不见声音了（平时使用其实没多大问题，主要是打电话……），所以我就换上了这台高一同学给的BB9720 让我来总结一下使用体验 日常使用 日常使用其实跟索爱没啥区别，就是键盘是26键，系统也是BBOS7不是塞班 打电话？NP！发短信？NP！索爱能做的它都能做 不过跟索爱也有同样的问题：SSL证书不信任 访问某些网站，证书比较新的那种，就会出现这个问题……（难受+1） 不过其他还是NP的，收邮件这一块我安装了一个LogicMail（主要是因为不能企业激活，毕竟服务商是MTN） 不过有的时候LogicMail会抽风（指Opening Connection这个步骤会直接失败），就需要一波硬重启（因为黑莓的重启有两种，一种是平常长按电源键关机后开机，那种开机很快，大约10~15s就完成了，另一种是拆电池，这样的重启会长达5分钟，主要是需要加载所有的应用程序），但是我不想每次都拔电池，所以我用了一个QuickPull来硬重启 耗能体验总的来说，如果一天重度使用（指经常浏览网页，看视频等），连半天都撑不过去（毕竟是旧手机） 不过按照我的使用习惯，两天一充还是可以的，不过充电速度有点…… 电池只有2000mAh，只能说还行 娱乐体验微信一句话：完 全 不 能 用！！！ 微信好像已经被腾讯放弃了（事实也是如此，QQ同理），一直在这里转圈 看片只能看720P以下的视频，只支持主流的格式（不包括FLV） 一定要下载好，不过体验还行:D 听歌 O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA 也是要下载好，不过可以听FLAC就好评（索爱不行） 文档 就很NICE，索爱不能看文档，BlackBerry除了可以看docx还能看pptx、xlsx、pdf，就很舒服 游戏我就装了个2048（益智游戏） 软件体验有独立的软件商店，可以安装软件，但是我不知道怎么从第三方安装软件 但是有点问题就是，免费软件有广告，会推送到邮件客户端里面（不是LogicMail，是内置的那个邮件客户端） 总结总的来说，BlackBerry9720给我的体验还算不错，反正就剩下一年了，拿来临时用一用还是可以的 题外话界面是英文是因为中文字体看不惯才换的，并不是只有英文 月考考完了，芜湖起飞！","categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"}]},{"title":"Steam资料美化 —— 让你的展柜变得好看！","slug":"Steam-Artwork","date":"2020-09-26T00:52:29.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/09/26/Steam-Artwork/","link":"","permalink":"https://coralare.com/2020/09/26/Steam-Artwork/","excerpt":"","text":"你也想拥有想别人那样Steam资料有自己喜欢的人物嘛？你也想自己动动手，让自己的Steam资料变得好看吗？现在你不需要去某宝/某东，只要你跟着做，你就能够做到！ 观前提示：本教程全程使用Photoshop（包括模板文件），请自备该软件~（另：抠图不是我应该教的） 话不多说，先上一张效果图（你也可以到我的Steam个人资料页面查看） 找图找图当然是最重要的呀，没有图哪里来的背景……如果你的Steam个人资料没有背景，你可以去点数商店换一个自己喜欢的（点数确实挺难赚的就是了，G胖心里偷喜） 接着我们打开自己的Steam库存，选择你想用来做背景的图，点击查看完整大小 你可以直接点击它，你也可以右键复制链接地址，反正我们需要的是链接 接着我们打开Steam.Design，把自己的链接贴进去点”Change BG”，然后点Download Images 下载下来是个压缩包，我们只要里面的Artwork_Middle.png和Artwork_Right_Top.png即可，如果你对头像也有要求可以把Avatar.png也用上，但是本教程不涉及 至于人物图嘛……P站很多自己找吧 裁剪接下来就是要Photoshop的时候了，我会完整告诉你怎么弄，当然你也可以直接下载我提供的模板（懒人必备），可以省去切片的步骤，直接把图片拖进去然后保存即可 我们先新建一个607*942的空白画布，如图 打开来就是一个纯空白的文件，接着把我们下载的两个图片拖进去 然后把两个图片分别拖到左右两边，大的在做，小的在右。如果你操作正确的话中间会留下一列空白（纯色） 接着把自己的人物图放进去（请先自己扣好图），如果人物被挡住了需要把人的那一个图层向上移动（两个背景图层没有顺序要求，但是人物一定要在上面） 重点来了！选择切片工具（如果你没有切片工具，请右键裁切工具选择切片工具） 从透明的那一列开始往下拉到底，将图划分为三个区域（因为透明那一列也是一个区域） 如果你不放心自己是否裁切对了，你可以按住Alt+鼠标滑轮上放大来检视自己的操作，如果不对，就可以将切片线移动到正确位置 最后我们按住Ctrl+Alt+Shift+S，进行文件的保存（品质手动拉到100）文件名随便你，反正我们用不到文件名，裁剪就完成了 上传我们打开Steam艺术作品上传页面（需要梯子或者Steamcommunity302），添加自己的文件，给自己的作品命名 重点来啦！按F12打开开发者工具，选择console，将以下的代码复制进去按回车运行 12345var num= document.getElementsByName(&quot;image_width&quot;)[0].value;document.getElementsByName(&quot;image_height&quot;)[0].value = num-(num-1);document.getElementsByName(&quot;image_width&quot;)[0].value= num*100; 最后会得到一行数字（两个数字的结果不一样，第一个是50600，第二个是10000，两个都要运行） 上传完成后我们点到Steam编辑个人资料，选择艺术作品展柜，并将自己的艺术作品展示出来，保存 这样你就得到了属于你自己的Steam个人资料页面了！ 题外话最近Leancloud国际版又崩了……评论获取不到，烦…… 原神挺好玩的，虽然我每天有一个半小时的限制…… CSGO的排位还没打完哭了……昨晚三连跪了","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"日常吐槽07 - 记录一次成功的举报经历","slug":"diary7","date":"2020-07-27T02:13:32.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/07/27/diary7/","link":"","permalink":"https://coralare.com/2020/07/27/diary7/","excerpt":"","text":"在这里仅记录我成功举报的一次经历，希望大家引以为戒，同时，我不玩PUBG，也不用约我打PUBG 另外，我在发邮件的过程中忘记用其他邮箱了，也就是我用了我的域名邮箱admin@bili33.top，如果现在在看本文的是那位办网站的老兄，请你记住：不管有多少这样的网站，只要我遇到了，通通举报！我不会改变我的做法，我希望弄这些钓鱼网站的人更少，同时给PUBG一个良好的游戏环境！ 前几天我在浏览Steam商城，因为当时没啥好玩的了，想去看看有啥游戏，结果发现了下面这样的信息（我看到的是评测中的信息，忘记截图了，而且那个用户也被我举报并屏蔽且被V社处理了，这里是一张网上的图，我遇到的给的链接是pubgjosn.fun（危险别点）） 点进去用户界面，看到是个把个人信息设置为隐私的账户（此处仍然为网上的图） 我点进去一看，哟，这不是钓鱼网站嘛，长得还挺像PUBG的官网，不过开篇就是给枪皮，这价值我也不知道有多少，反正看这域名就不是官方网站 我试着在这个页面点击除了领取以外的按钮，发现就连阅读个新闻也要登录，这不符合逻辑，看来这个网站没啥，也就UI像了点，其他没啥 弹出来给我的Steam登录界面，地址栏写的是about:blank，也就是所谓的空白页，但是按照Steam的登录页面的逻辑，他应该是会写https://steamcommunity.com/?XXXXX之类的，这肯定也是个钓鱼的登录界面，随便输入个账号，就要手机验证码，骗谁呢~ 接着，我去查了一下whois，发现他的DNS解析在CloudFlare，因为听说CloudFlare有停止解析服务这一说，所以我就去CloudFlare投诉了一波（投诉界面忘记截图了） 第二天早上起来，发现CloudFlare给我发了封邮件 接着，我访问该网站，发现已经被挂上了红色警告 CloudFlare这波干的不错，返回来看CF给我发的邮件，里面还说到了以下几种方法（黄色部分，这里是在mail.ru，也就是我的域名邮箱托管的平台） 然后我又去查了一次whois，发现他是在reg.ru这个网站上注册的域名，接着我又去查这个网站的举报方式，发现了abuse@reg.ru这个举报邮箱 接着再发一封邮件，提出这种情况 不久后便收到了来自该域名注册平台的邮件 举报完成，收工！ 在我即将开始写文的时候，发现我的Steam弹了一条V社的信息 这次举报真的大快人心！ 下次继续！","categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"}]},{"title":"MCDR-Mirror-Server使用手册和例子 | The usage and example of MCDR-Mirror-Server","slug":"MCDR-Mirror-Server-Usage","date":"2020-07-18T04:44:51.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/07/18/MCDR-Mirror-Server-Usage/","link":"","permalink":"https://coralare.com/2020/07/18/MCDR-Mirror-Server-Usage/","excerpt":"","text":"简体中文感谢你选用MCDR-Mirror-Server作为MCDR镜像服插件，本页面是镜像服插件的一个例子，希望你看了这个例子能够更加清楚镜像服插件的工作原理和使用方法(*^▽^*) English users please click me! 使用方法首先，我们需要下载MCDR-Mirror-Server插件，你可以在Github仓库下载，对于中文用户，请下载mirror.py和mirror.json 接着，把mirror.py放入MCDR的Plugins文件夹，把mirror.json放入MCDR的config文件夹，这样，插件的位置就到位了 在MCDR的目录下新建一个文件夹，或者在其他地方新建一个文件夹，用于存放镜像服的文件。 请注意！Windows用户请不要跨盘符建立文件夹，如果你的MCDR文件夹在C盘，那么你就把镜像服文件夹建立在C盘，请不要建立在D、E、F等盘（即禁止跨盘符建立文件夹），这是由于cmd的盘符切换方法导致你在运行MCDR的时候无法切换到其他盘符 将你的镜像服文件丢进你建立的文件夹内，可以带着MCDR进去，也可以不带，程序会自动判断是否带了MCDR 接着打开你的mirror.json文件，我们将要开始配置了 123456789101112&#123; &quot;path&quot;: &quot;./mirror/&quot;, &quot;world&quot;: [&quot;world&quot;], &quot;command&quot;: &quot;python3 MCDReforged.py&quot;, &quot;remote&quot;:&#123; &quot;enable&quot;: false, &quot;address&quot;: &quot;127.0.0.1&quot;, &quot;secret&quot;: &quot;password&quot;, &quot;port&quot;: 25575, &quot;command&quot;: false &#125;&#125; 首先，将path后面的内容改为你的文件夹路径，可以是相对路径也可以是绝对路径 将world后面的内容改为你的世界文件夹的名字，请注意需要按照列表的格式填写，即[&quot;world&quot;,&quot;world1&quot;,&quot;world2&quot;]等，将你所有的世界文件夹填入，如果你是原版服务器的话基本上只填写world是莫得问题的 将command改为你的镜像服启动的命令，例如java -Xms2G -Xmx4G -jar server.jar或者python3 MCDReforged.py等，如果你的镜像服也带了MCDR，你需要注意：Windows使用python的方式不是写作python3而是写作py或者python，linux则特定要写python3 下面是rcon的相关配置，有关rcon的相关信息，你可以看这里 enable是是否开启rcon功能，如果开启了就可以使用rcon的功能，如果不开启就不行，相当于镜像服对镜像服rcon链接的总开关吧 address是镜像服服务器的地址，如果你是同一台机子就填127.0.0.1即可，否则就要填写直连的地址 secret填写镜像服的rcon密码，这个在server.properties里面设置的 port填写镜像服的rcon端口，同样在server.properties设置 command即是否允许利用!!mirror rcon &lt;command&gt;来对镜像服使用命令 填写完了以后，你仍然需要在server.properties里面修改端口，避免端口冲突 然后就可以在主服务器里!!MCDR reload plugin然后使用!!mirror start来尝试开启服务器了 使用例子以我自己来说，我的目录树大概长这样 1234567891011MCDReforged├─config├─lang├─mirror│ ├─server│ │ └─world├─plugins├─resources├─server│ └─world└─utils 我的mirror文件夹就是我的镜像服文件夹，里面放了MCDR作为镜像服的管理工具，原版服务器上了Fabric，使用Linux来开服，所以我的config是下面这样的 123456789101112&#123; &quot;path&quot;: &quot;./mirror/&quot;, &quot;world&quot;: [&quot;world&quot;], &quot;command&quot;: &quot;python3 MCDReforged.py&quot;, &quot;remote&quot;:&#123; &quot;enable&quot;: true, &quot;address&quot;: &quot;127.0.0.1&quot;, &quot;secret&quot;: &quot;password&quot;, &quot;port&quot;: 25575, &quot;command&quot;: true &#125;&#125; 在mirror文件夹里面，我的文件大概如图所示（注：我开服的系统是linux，只是这里用Windows来浏览文件） 我的镜像服server.properties的内容如下 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#Minecraft server properties#Wed Jul 08 12:17:29 CST 2020broadcast-rcon-to-ops=trueview-distance=10max-build-height=256server-ip=rcon.port=25585level-seed=allow-nether=truegamemode=creativeenable-command-block=trueserver-port=25566enable-rcon=trueenable-query=falseop-permission-level=4prevent-proxy-connections=falsegenerator-settings=resource-pack=player-idle-timeout=0level-name=worldrcon.password=passwordmotd=Minecraft Server by GamerNoTitlequery.port=25566force-gamemode=falsedebug=falsehardcore=falsewhite-list=falsebroadcast-console-to-ops=truepvp=truespawn-npcs=truespawn-animals=truegenerate-structures=truesnooper-enabled=truedifficulty=hardfunction-permission-level=2network-compression-threshold=256level-type=defaultmax-tick-time=60000spawn-monsters=trueenforce-whitelist=falsemax-players=20use-native-transport=truespawn-protection=0resource-pack-sha1=online-mode=falseallow-flight=falsemax-world-size=29999984 其实最主要的是下面这几个 1234rcon.port=25585server-port=25566enable-rcon=truercon.password=password 保证端口不冲突即可，其他其实没啥；然后就是设置rcon的密码，然后把密码填进mirror.json，接着在主服务器用!!mirror start开服，就可以了 工作原理工作原理很简单！就是通过MCDR打开了位于你镜像服文件夹的一个服务器，如果是Windows顺带还开多了一个powershell以免stop的时候把主服务器也stop了；关服务器的原理就是通过rcon对镜像服发起了/stop指令，仅此而已；同步就是对镜像服的世界文件夹覆盖 EnglishThanks for choosing MCDR-Mirror-Server as your mirror server plugin. This page is an example of mirror plugin. Hopefully it can make you clear the working principle of the plugin and help you use the plugin more efficiently and more conveniently Due to my lack of English (I’m still a senior high school student in China), some grammars may be wrong. If you don’t mind or help me correct it, I’ll appreciate it. Thanks♪(･ω･)ﾉ UsageFirst, you need to download MCDR-Mirror-Server plugin, you can download it from my Github. For English users, you need to download mirror.py and mirror.json. Now you have downloaded the things you need, just put mirror.py into plugins folder and put mirror.json into config folder. Congratulate! You have installed the plugin successfully! Create a new folder in MCDR’s folder or other place, for the use or put the mirror’s file inside it. For Windows users be careful: You can’t put the folder across the drive. For example, if your main server folder is in C drive, then just create the folder in C drive, don’t put it into D, E, F, etc. Since the switch method of cmd, you cannot switch to another drive while you’re using MCDR And now, but your mirror server into the folder you just created. Whether it included a MCDR is not a question, the plugin will automatically detect it. Next, open the file mirror.json and edit the configuration of it 123456789101112&#123; &quot;path&quot;: &quot;./mirror/&quot;, &quot;world&quot;: [&quot;world&quot;], &quot;command&quot;: &quot;python3 MCDReforged.py&quot;, &quot;remote&quot;:&#123; &quot;enable&quot;: false, &quot;address&quot;: &quot;127.0.0.1&quot;, &quot;secret&quot;: &quot;password&quot;, &quot;port&quot;: 25575, &quot;command&quot;: false &#125;&#125; Firstly, change ./mirror/ into the folder you just created (An absolute path or a relative path is avaliable) Next change the list behind world with the format like [&quot;world&quot;, &quot;world1&quot;, &quot;world2&quot;], type all your world folder in. If your server is vanilla one then just keep it Change the content behind command as your server’s start command. For example, java -Xms2G -Xmx4G -jar server.jar for vanilla or python3 MCDReforged.py for MCDReforged. Tips: For Windows users, the startup command of python is py or python not python3 for linux users. The following settings are the rcon ones, if you want to know what is rcon, you can visit here enable means whether the rcon feature of mirror plugin is enabled or not, true to enable it, or false to disable it. If you disabled it, you cannot use any functions of rcon like remote shutdown and so on. address is the mirror server’s address. For the users who put the two server into the same computer, just keep it as 127.0.0.1 secret is the password of your rcon, you can change it in server.properties file. port is the port of the rcon on mirror server, you can also change it in server.properties file command is the switch on allowing to use !!mirror rcon &lt;command&gt; command to input command to mirror server. when you’re finished, you also need to change the port your mirror server in order to avoid the same port use between the main server and the mirror one. ExampleFor my mirror, my directory tree like this 1234567891011MCDReforged├─config├─lang├─mirror│ ├─server│ │ └─world├─plugins├─resources├─server│ └─world└─utils My mirror server folder inside MCDReforged is the folder called mirror, and I put a MCDR in it in order to manage my mirror server. After all, I use linux to hold the server, so my config grows like this 123456789101112&#123; &quot;path&quot;: &quot;./mirror/&quot;, &quot;world&quot;: [&quot;world&quot;], &quot;command&quot;: &quot;python3 MCDReforged.py&quot;, &quot;remote&quot;:&#123; &quot;enable&quot;: true, &quot;address&quot;: &quot;127.0.0.1&quot;, &quot;secret&quot;: &quot;password&quot;, &quot;port&quot;: 25575, &quot;command&quot;: true &#125;&#125; My file in mirror folder like the picture below (PS: I use linux to hold the server, and I just use Windows to explore my files) and my server.properties of my mirror like this 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#Minecraft server properties#Wed Jul 08 12:17:29 CST 2020broadcast-rcon-to-ops=trueview-distance=10max-build-height=256server-ip=rcon.port=25585level-seed=allow-nether=truegamemode=creativeenable-command-block=trueserver-port=25566enable-rcon=trueenable-query=falseop-permission-level=4prevent-proxy-connections=falsegenerator-settings=resource-pack=player-idle-timeout=0level-name=worldrcon.password=passwordmotd=Minecraft Server by GamerNoTitlequery.port=25566force-gamemode=falsedebug=falsehardcore=falsewhite-list=falsebroadcast-console-to-ops=truepvp=truespawn-npcs=truespawn-animals=truegenerate-structures=truesnooper-enabled=truedifficulty=hardfunction-permission-level=2network-compression-threshold=256level-type=defaultmax-tick-time=60000spawn-monsters=trueenforce-whitelist=falsemax-players=20use-native-transport=truespawn-protection=0resource-pack-sha1=online-mode=falseallow-flight=falsemax-world-size=29999984 The most important things are the following configuration 1234rcon.port=25585server-port=25566enable-rcon=truercon.password=password just keep the port use not the same, and setup your rcon’s password. Type the password and port in the mirror.json and use !!mirrro start in your main server to startup your mirror. That’s it. PrincipleIt’s pretty easy! Just use MCDR to call python to use command to turn on another server. For Windows users, i’ve also create a new powershell thread to hold the mirror one in order to prevent the main server being killed. The shutdown just use rcon feature to send a /stop command to the mirror folder. Sync just copy the main server’s world into the mirror one.","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"MCDR的正确食用方式 - 让你的服务器像TIS一样拥有QB！","slug":"MCDR-Usage","date":"2020-05-30T10:28:32.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/05/30/MCDR-Usage/","link":"","permalink":"https://coralare.com/2020/05/30/MCDR-Usage/","excerpt":"","text":"你是否也想有能够在游戏内快速管理的服务器？ 你是否也想像TIS一样有各种扩展？ 你是否也想有!!qb？ MCDReforged！不要998，不要888，只要……！@#￥%……&amp;*（） 咳咳，走错片场了…… MCDReforged是一个不需要修改MC服务端的情况下，使用自定义的插件系统提供服务器的管理等功能的一个工具，由@Fallen_Breath开发，使用Python作为运行环境（拒绝PY2从我做起） 这里有一个第三方的MCDR官网，你可以参阅一下 本篇我们来讲讲它的用法和我开发的插件的用法 如何使用工作环境Python 的版本需要 Python 3.6+。已在如下环境中测试运行通过: Windows10 x64 Python 3.6 Centos7 x64 Python 3.8 Ubuntu18.04.4 x64 Python 3.6 这是佛冷测试的数据，我自己的Python版本是3.6.9，在Ubuntu 18.04.4 LTS上通过 你首先需要安装Python3，怎么安装请自己搜索，这不是我们这一节要讨论的内容 获取MCDR你需要下载一个MCDR，我们转到MCDR的Release页面，下载最新版的MCDReforged，解压，你能得到以下目录 123456789MCDReforged├─config├─plugins├─resources│ └─lang├─server└─utils ├─parser └─reactor 这里说一下我们将要用到的文件夹： config是用来存放插件的配置文件的 plugins就是插件存放的位置，你可以到MCDR插件库(中文)下载插件 server就是存放服务器文件的位置，我们的服务器文件例如minecraft.jar、world都放在这个里面 其他的文件夹我们不会用到，就不动它 在MCDR的目录下打开命令行窗口，使用 12$ pip install -r requirement.txt # Windows用户$ pip3 install -r requirement.txt # Linux用户 安装MCDR运行所需要的Python模块 配置MCDR配置项配置打开config.yml文件，里面有所有我们需要调整的MCDR参数 有以下配置项 1234567891011language: en_usworking_directory: serverstart_command: java -Xms1G -Xmx2G -jar minecraft_server.jar noguiparser: vanilla_parserencoding:decoding:console_command_prefix: &#x27;!!&#x27;enable_rcon: falsercon_address: 127.0.0.1rcon_port: 25575rcon_password: password 首先，如果你需要中文，就把language调成zh_cn；如果你不需要，可以不动它，直接保留en_us working_dictionary是我们服务端存放的文件夹，当然你可以把server改成你喜欢的名字，然后在MCDR的工作目录里面新建一个与你填入的名字相同的文件夹，把服务端扔里头 start_command就是启动服务器用的命令，也就是你在服务器文件夹里面输入的启动命令，同样如果你写在了start.sh里面，可以直接填sh ./start.sh parser是解码器，这个你可以根据你的服务端来填，具体如下 解析器名称 兼容的服务器类型 vanilla_parser 适用于原版 / Carpet / Fabric 服务端 bukkit_parser 适用于 1.14 以下的 Bukkit / Spiogt 服务端，和任意版本的 Paper 服务端 bukkit_parser_14 适用于 1.14 及以上的 Bukkit / Spiogt 服务端 forge_parser 适用于 Forge 服务端 cat_server_parser 适用于 CatServer 服务端 bungeecord_parser 适用于Bungeecord 服务端。请在启动参数的 -jar 前添加 -Djline.terminal=jline.UnsupportedTerminal 以让其支持 MCDR 的控制，来源 waterfall_parser 适用于 Waterfall 服务端 decoding和encoding是编码方式，一般留空即可 console_command_prefix是MCDR的命令前缀，一般保持!!即可 enable_rcon和下面的rcon设置是Minecraft服务器的Rcon，如果你要打开你需要到server.properties里修改rcon的相关参数 权限配置MCDR也有插件选项，拥有admin权限的玩家可以在游戏内使用MCDR服务器的指令，例如!!MCDR reload plugin，而且有些插件也会对权限进行检查，所以这就有必要配置权限 我们打开permission.yml文件，在对应的用户组输入用户名即可，例如 123456789default_level: userowner:- GamerNoTitle # 这里就是给我owner权限admin:- UBIthepotato # 这里就是给UBIthepotato上admin权限helper:user:guest: 给完权限后，在后台使用!!MCDR reload permission来刷新权限 启动MCDR配置完MCDR后，我们回到MCDR的工作目录，使用命令 12$ python MCDReforged.py # Windows用户$ python3 MCDReforged.py # Linux用户 来启动我们的服务器，当你看到提示Done (12.757s)! For help, type &quot;help&quot;就是启动完了（不同服务端的提示可能不一样，我这里是vanilla 安装插件首先你需要到MCDR插件库(中文)下载插件，文件应该是一个xxx.py文件，有的插件会带有一个xxx.json的配置文件 将xxx.py文件放入plugins文件夹，将xxx.json放入config文件夹即可 如果你的服务器正在运行，可以使用!!MCDR reload plugin来重载插件 题外话MCDR是真的好用，我的MC服务器就用的它 现在想完善一下镜像服插件的功能，想试试在主服务器关闭镜像服，不过得慢慢做了 本月我没咕！没咕！咕咕咕咕咕~","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"Office365开发者订阅保命计划","slug":"Office365-Renew-Project","date":"2020-04-27T06:23:46.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/04/27/Office365-Renew-Project/","link":"","permalink":"https://coralare.com/2020/04/27/Office365-Renew-Project/","excerpt":"","text":"上次有一篇文章教大家怎么白嫖了Office365 E3 Subscription for Developers（现在是E5），近期我重新申请了一次（之前的过期了），在这里教大家怎么增大微软续费的机会 只是增大机会，并不是一定会续费！！！ 我已经续费成功一次了，截图在底部 自建网盘法Office365的E5订阅附带了5T的Onedrive（如果你是1T可以去Onedrive后台进行调整） 这里我推荐使用Oneindex，使用方便 只需要自己找一个服务器搭建，使用自己的账号获取API的ID和KEYS绑定即可，记得多用，怎么部署不多说 E5Sub_bot法如果你有服务器也可以自己搭建，项目地址在这里https://github.com/iyear/E5SubBot 怎么搭建就去看官方文档，这里说一下没有服务器怎么弄 我们先打开Telegram，在搜索栏搜索@E5Sub_bot，打开以后在输入框搜索/bind 接着我们点击应用注册后面的那个链接，你也可以直接点击这里 打开后登陆自己的Office账户，把显示的应用机密保存下来 接着点下面那个蓝色的按钮，返回快速启动 往下拉网页，看到有个APP ID(or Client ID)，我们把下面框框内的UUID找个地方复制粘贴临时保存一下 然后我们回到Telegram，输入刚刚的UUID和Secret秘钥，需要按照提供的格式进行输入 会返回一个带有链接的对话框给我们，我们点击授权用户后面的点击直达 弹出来一个登录界面，登录完成后，复制地址栏里面的网址，粘贴到Telegram的对话框内就可以了 这样我们就绑定成功了，接下来就不管它，它会自己进行API的调用，每小时调用一次，并且会给我们反馈结果 自动续订程序法这是一个由其他大佬开发的网页端的程序，并且所有的操作都是在他的服务器上的，本地服务器不需要跑任何东西。我们打开https://e5.qyi.io/user/login?redirect=%2Fuser%2Fhome 打开可能有点慢，请耐心等待。打开后点击中间的Github图标使用Github进行登录，进入主界面 然后先把这个网页放在一边，打开Azure，在上面搜索应用注册，打开后，我们点击左上角的新注册，名称随便填，下面的受支持的账户类型选择第三个，URI我们填写https://e5.qyi.io/outlook/auth2/receive，一定要填正确，否则是无法使用的！ 进入页面后，我们复制上面显示的应用程序（客户端）ID，以供备用，接着我们点击左边的证书和密码，创建我们这个程序的密码 在右边选择新客户端密码，描述随便填，密码我们选择从不过期，然后新建，把给我们的密码保存下来备用 接着点到API权限，点击添加权限，选择Microsoft Graph，然后选择右边的应用程序权限，勾选Mail.Read、Mail.ReadBasic、Mail.ReadBasic.All、Mail.ReadWrite即可，剩下那个Mail.Send不用选择，勾选后确定，点击添加权限右边的代表xxx授予管理员同意，一定要点，否则无法正常运行 接着返回刚刚的那个网页，ID和机密填进去，然后点保存，接着点授权，一定要点授权，否则不会正常运行！ Github Action法这里我们使用的是一个Github项目AutoApiSecret，进入这个项目我们先把它fork一份到自己的账户下 同样，我们还是要先注册一个应用，获取应用ID和应用机密，怎么注册看自动续订程序法 唯一不同的是，我们需要的权限变为以下权限： Files.Read.All Files.ReadWrite.All Sites.Read.All Sites.ReadWrite.All User.Read.All User.ReadWrite.All Directory.Read.All Directory.ReadWrite.All Mail.Read Mail.ReadWrite MailboxSettings.Read MailboxSettings.ReadWrite 勾选完下面的权限保存，别忘了要点允许！！！ 我们使用rclone来获取我们的refresh_token，你可以点击这里下载rclone 在命令行里，输入 1rclone authorize &quot;onedrive&quot; &quot;之前保存的应用id&quot; &quot;之前保存的应用秘钥&quot; 来打开登录窗口，在窗口内登录后，在命令行里面找到refresh_token:并把后面的内容直到,&quot;expiry&quot;的部分复制下来备用 接着我们回到我们的仓库，打开里面的1.txt文件，把刚刚获取的refresh_token贴进去 打开仓库设置，点击Secret，我们添加两个东西 第一个是CONFIG_ID，里面的内容写为id=r&#39;你的应用id&#39;，第二个是CONFIG_KEY，里面的内容写作secret=r&#39;你的应用机密&#39; 接着打开仓库里面的1.txt，把你的refresh_token贴进去 打开右上角自己头像下的Settings，选到Developer Settings，再点到Personal access tokens，在这里我们新建一个token，名字随便填，但是权限我们需要勾一下内容 admin:repo_hook repo workflow 然后保存即可，回到我们的仓库，点击顶上的Action，如果你没有开过Action，那么这里会需要让你打开同意条例来打开Action，打开后，我们给自己的这个仓库点个Star，来手动触发我们的Action 在Action界面我们可以看到我们的Workflow是否运行正常，如果运行后打绿色的勾就说明成功了，这个时候就不需要再管它了，直接把这个仓库放着就好了，每一小时就会自动调用一次API，达到微软要求的开发（伪）目的 题外话我今天重新开了一个E5的订阅，反正看看能撑多久","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"Valine-Customize魔改教程","slug":"Valine-Customize","date":"2020-04-19T11:50:19.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/04/19/Valine-Customize/","link":"","permalink":"https://coralare.com/2020/04/19/Valine-Customize/","excerpt":"","text":"本篇为我的修改思路，如果你想直接使用我修改过后的版本，可以直接将https://github.com/GamerNoTitle/Valine-Magic更新日志中的最新版js链接引入 在看本篇之前，请确保： 你有一定的代码基础 你能够看懂Python代码和JavaScript 你精通Valine的使用 Valine在2020/4/21更新了v1.4.5，支持了自定义表情包，故Valine-Magic将不再提供修改的js，改为提供Valine的表情列表 我们本篇要做的事情有两个 ①加入自定义表情 ②判断邮箱为QQ邮箱则显示QQ头像 ③为修改UI文字提供思路 话不多说 让我们开始吧 加入自定义表情首先，我们需要获得valine的js文件，这里直接访问Valine的CDN获取https://cdn.jsdelivr.net/npm/valine/dist/Valine.min.js 打开后是一个页面，我们直接全选复制，粘贴到一个新的js文件中 温馨提示：因为js中的字符数稍微（手动着重）有点多，所以说如果没有较为强劲的电脑可能无法很快做到文本格式化 首先我们需要修改的是Valine的表情CDN，如果不修改的话，你的表情链接前面会自动加上https://img.t.sinajs.cn/t4/appstyle/expression/ext/normal字段导致表情无法被读取 我们直接以//img.t.sinajs.cn作为关键词检索CDN，很快就得到了CDN的位置 我们将这里的CDN的内容直接删掉，留空 接着我们搜索valine自带的表情标签，而第一个的表情标签是smile，我这里就直接搜索smile，这样可以直接定位到表情列表的头部 接下来，我们需要上传自己的表情，并且按照这个格式制作一个表情列表 我个人的做法是：将表情包上传到Github仓库，通过jsdelivr来使用；通过Python脚本遍历当前目录下的所有文件，自动生成表情列表 上传就不必说了，直接用Git上传即可 生成列表生成脚本我是自己弄了一小段 1234567891011121314151617import ospath = &#x27;D:\\xxx\\BQB&#x27; # 路径已屏蔽QAQdef findAllFile(base): for root, ds, fs in os.walk(base): for f in fs: yield fdef main(): base = &#x27;./&#x27; linklist=[] num=1 for i in findAllFile(base): linklist.append(&#x27;custom&#123;&#125;: &quot;https://cdn.jsdelivr.net/gh/GamerNoTitle/Picture-repo-v1@master/img/BQB/&#123;&#125;&quot;,&#x27;.format(num,i)) num=num+1 print(str(linklist).replace(&#x27;,\\&#x27;, \\&#x27;&#x27;,&#x27;, &#x27;))if __name__ == &#x27;__main__&#x27;: main() 这里通过os.walk遍历当前目录下的文件，并且将获取到的文件名通过字符串拼接的方式拼在一起，然后存入列表linklist，接着打印的时候将固定的字符串格式,&#39;, &#39;给删除掉（因为是list对象，所以打印出来的时候有固定格式），接着就会给我生成表情列表啦！ 接着将获取到的列表覆盖入Valine的表情列表，保存 在自己的网站引入Valine的CDN的时候引入自己的js文件即可 接着我们就会看到表情列表里面的自定义表情啦！ 判断为QQ邮箱将头像设定为QQ头像参考：https://blog.csdn.net/cungudafa/article/details/104638730 这里我们还是打开刚刚的js文件，直接搜索E.cdn+(0,s.default)(t.get(&quot;mail&quot;))+E.params，会给我们定位到一个位置 我们找到下图中我鼠标所在的位置，回车换行 换行以后，加入以下内容 123456789var qq_img = E.cdn+(0,s.default)(t.get(&quot;mail&quot;))+E.params;if (t.get(&quot;mail&quot;).indexOf(&quot;@qq.com&quot;) &gt;= 0) &#123; var prefix = t.get(&quot;mail&quot;).replace(/@.*/, &quot;&quot;);//前缀 var pattern = /^\\d+$/g; //正则表达式 var result = prefix.match(pattern);//match 是匹配的意思 if (result !== null) &#123; qq_img = &quot;//q1.qlogo.cn/g?b=qq&amp;nk=&quot; + prefix + &quot;&amp;s=100&quot;; &#125;&#125; 然后回到我们刚刚搜索的地方，从&#39;&lt;img处开始，到后面的第一个&gt;&#39;修改为以下内容 1&#x27;&lt;img class=&quot;vimg&quot; src=&quot;&#x27;+(qq_img)+&#x27;&quot;&gt;&#x27; 保存即可，然后引入刚刚我们修改的JS，在评论时邮箱填入QQ邮箱，看看是不是有QQ头像了？ 修改UI文字我们修改UI文字其实非常简单，要修改的东西也是在这个js文件里面 我们随便搜索一个按钮显示的文字，我们就会发现，附近都是我们要修改的文字 我们只需要对这些文字进行修改即可，修改成啥样嘛？就看你自己啦！ 题外话啦啦啦！终于引入B站表情包啦！ 新建了一个Github项目在这https://github.com/GamerNoTitle/Valine-Magic 以后新的表情包就丢在这里啦！更新日志也写在这里，你可以通过Issue或者PR提交新的表情包 有会修改ValineUI的大佬请联系我！我想做分类标签！！！ Valine在2020/4/21更新了v1.4.5，支持了自定义表情包，故Valine-Magic将不再提供修改的js，改为提供Valine的表情列表","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"Valine-Magic - Valine表情仓库","slug":"Valine-Magic","date":"2020-04-19T11:01:30.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/04/19/Valine-Magic/","link":"","permalink":"https://coralare.com/2020/04/19/Valine-Magic/","excerpt":"","text":"Valine在2020/4/21更新了v1.4.5，支持了自定义表情包，故Valine-Magic将不再提供修改的js，改为提供Valine的表情列表，在使用列表之前，请将你的ValineCDN修改为https://valinecdn.bili33.top/Star 访问量（自2020.10.25 11:00:00） 点击对应的表情名可以直接到达表情列表，请注意：你在使用本仓库内的表情时请将Valine的CDN设置为下面表格中的任意一个 已经适配MiniValine#8，有问题请使用issue反馈 在线详细情况可以点击issue#6进行查看 更新日志 你可以提交表情包，请阅读提交的正确方式 CDN服务器（点击可看在线状态） CDN链接 优势 劣势 Github https://valinecdn.bili33.top/ 链接短，快 有CloudFlare的301跳转作为统计，有可能会崩服 Github https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/ 非常快 有可能会崩服 Coding https://mirrorcdn.bili33.top/ 链接短，较快 有CloudFlare的301跳转作为统计，Coding服务器总是崩 Coding https://gamernotitle.coding.net/p/ValineCDN/d/ValineCDN/git/raw/master/ 较快 Coding服务器总是崩 Valine复制的列表可以直接复制到例如butterfly主题的valine.json内，或者是各种用于放Valine表情配置的地方 请注意：如果你想添加多个分类，请记得在每个分类的最后一个表情后面加个,否则Valine无法识别。假设下面这个表情为该系列最后一个表情： 1&quot;hotkey1&quot;: &quot;bilibiliHotKey/1.jpg&quot; 你想在这个表情下面添加其他表情的时候，那么请在这个表情的后面加个,就像下面这样 1&quot;hotkey1&quot;: &quot;bilibiliHotKey/1.jpg&quot;, 如果你有新的表情包想要加入，你可以提出issue，或者直接发到admin@bili33.top，并注上你的ID和表情包名字（中文英文都需要） 仓库内的那个PY脚本是我提前编写好用来写表情列表的脚本，如果你有需要可以随意取用 这里有跟本项目同类型的表情仓库，如果在本仓库未找到你想要的表情包可以到这里找 表情速查 MiniValine直接复制每个分类中的MiniValine所提供的链接（其中https://valinecdn.bili33.top/可以替换为任意CDN链接（见上表）），然后放在emotionUrl里面即可，请注意遵循列表写法，如： 12345678910111213&lt;body&gt; &lt;div class=&quot;mvcomment&quot;&gt;&lt;/div&gt; &lt;script&gt; new MiniValine(&#123; el: &#x27;.mvcomment&#x27;, appId: &#x27;appId&#x27;, appKey: &#x27;appKey&#x27;, placeholder: &#x27;Write a Comment O(∩_∩)O~~&#x27;, emotionUrl: [&#x27;https://valinecdn.bili33.top/alu&#x27;,&#x27;https://valinecdn.bili33.top/bilibiliHotKey&#x27;] &#125;) &lt;/script&gt;&lt;/body&gt; 表情分类 哔哩哔哩热词系列 哔哩哔哩小电视系列 哔哩哔哩2233娘系列 阿鲁alu系列 メンヘラちゃん(Menhera-chan)系列表情包 HONKAI崩坏3 日常篇 HONKAI崩坏3 观星篇 HONKAI崩坏3 蜡笔日常篇 HONKAI崩坏3 纯色日常篇 HONKAI崩坏3 史丹 HONKAI崩坏3 爱酱 HONKAI崩坏3 目标！幽兰黛尔 HONKAI崩坏3 芽衣的剑道修行 HONKAI崩坏3 2019新年 つり目獣耳スタンプ(Sticker of the slant eyes &amp; cat girl) Arcaea 動く！まふまふスタンプ（ねこ）Mafumafu Animation sticker (cat) 微博原生表情包 百度贴吧原生表情包 Snow Miku雪初音表情包（LINE） うさみみ少女（SWEETIE BUNNY） 小坏坏表情包 Yurui-Neko Cute-Emoji Set667 Marup Convenience Store Notes2 Coolapk酷安 aodamiao嗷大喵 lengtu冷兔 QQ官方表情 钉钉官方表情 小黑盒表情包（包括盒娘和方块） 魔女之旅Majotabi（官方） 免责声明本仓库内所有图片均来源于网络，仅供学习交流使用。若用户违反相关法律法规造成损失，将由用户自行承担，本仓库所有者和PR提交者不承担一切责任！ License","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"Github的基本用法 —— 给小白的新手教程","slug":"Github-Basic","date":"2020-04-14T07:21:39.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/04/14/Github-Basic/","link":"","permalink":"https://coralare.com/2020/04/14/Github-Basic/","excerpt":"","text":"本文是写给初到Github的新手们的，其中大量为基础内容，如果你不是Github新手玩家你可以关闭本页面！ 开头语初来乍到的萌新们，刚到Github，你们是不是一脸懵逼？我是谁？我在哪？我要干哈？Github是全球最大的 同性交友平台 代码托管平台，在这里你可以看到各种大佬，例如国内最大的MC红石服务器TIS的插件开发组@TISUnion，或者是我们再熟悉不过了的微软Microsoft；当然不只是代码，Github里面也有各种文化仓库，这里举个很好玩的仓库作为例子——表情包仓库ChineseBQB，可谓是表情包的聚集地；Github上甚至还有你想不到的项目（是什么项目我就不说了，自己点我查看） 接下来，我就来跟你讲讲Github怎么使用。话不多说，让我们开始吧 主页管理当你注册完Github并登录后，Github会将你带到首页，这里有点类似很多服务器的仪表盘吧（如图） 其中，左边一块是跟个人有关的，包括活动仓库和所在团队，活动仓库是你发过issue、PR(pull request)，点过Watch、Star、Fork的仓库，触发以上操作（上面的操作后面会说）都会将你操作的仓库添加到左边的活动仓库列表，便于你进行寻找；所在团队则是当你创建/加入一个团队并被分配到Team（队，有点类似于部门）后显示 中间那一栏是与你有关的Github的活动，Github会在上面优先列出你近期的活动（近期具体是多少天以内就不知道了，没算过），下面则会列出所有与你有关的活动，顺序为从新到旧。你可以看到你Follow的人的动态，也可以看到与你有关的动态（如别人Follow你，Star/Fork你的仓库等等） 右边一栏则是被称为Github Explore（Github探索）的东西，Github会根据你在Github的仓库访问情况推荐你可能感兴趣的仓库，右边一栏会列出3个，点击右边那一栏的Explore More→则会打开一个新的页面，里面罗列出Github今日给你推荐的项目仓库 最上面一行是导航栏，导航栏在Github的任何页面都会展示。点击Pull Requests就会列出你与你有关的所有PR，同理，点击issue也是一样。Marketplace会打开Github的插件库，里面有各种插件供你选择，有免费的当然也有付费的；Explore则是会打开跟右边Explore More一样的界面；点击右上角的个人头像可以有更多的选项，点击会出来各种管理，这个我们到个人管理再讲。 （什么？你问我的导航栏为什么是彩色的？看来你是没用过Stylus呢，装完Stylus后安装这个样式就可以让Github变成彩色的了） 个人管理当你点击导航栏里面的头像，Github会给你弹出下面这个列表 ①表示你登录的用户，这里我是用自己的用户登录的，所以写的是GamerNoTitle ②是你的个人信息，点击后会进入个人信息页面 ③是你的仓库，点击后会进入自己的仓库列表 ④是项目列表，不过我自己没怎么用，而且本篇教程我也不打算讲Project ⑤是你Star过的项目，点击后会对你Star的项目进行列出的操作 ⑥是用来发布代码片段的Gist，没啥用（因为你在GFW的保护下） ⑦、⑧是与Github有关的，能够帮助你使用Github并且获取Github的新功能 ⑨是设置，设置我们晚点讲 ⑩是登出，当然就是退出啦 我们进入Profile查看一下，这里会列出你的各种信息，包括你自己设定的Slogan、你的学校、你的地理位置、你的邮箱（可以设置多个，但只有一个对外展示，未登陆者不会显示）、你的网站 右边上面是你PIN（钉~）的仓库，如果你想让别人一到你的个人页面就能看到你的Breaking Repositories的话你可以把你的仓库PIN到上面来；下面的小方格则是一年内你的Contribution（贡献），Commit数量越多，绿色越深；再往下就是你的活动了 在PINNED的上面，从左到右的按钮依次是：仪表盘、仓库、项目、包、Star、追随者、你追随的人。Star可以在个人菜单（上面那张标了序号的图）里面点Your Star进入，同样，仓库和项目也可以 更详细的个人资料设置，可以在设置里面进行更改，其中可更改的包括你的用户名、邮箱等 仓库管理仓库创建当你决定在Github托管你自己的代码的时候，你就可以开始创建仓库了。不过在此之前，请确保你会使用Git，Git的简单用法下面会略微涉及，但本篇绝对不会教你《Git从入门到精通》，Git的用法请自行百度。 我们点击导航栏里面的+号，选择New repository，Github会带我们到新建仓库的页面。在Repository name中填入你想要的仓库名字，仓库名可以用英文和任意符号，甚至是中文（不推荐），但是在网址中无法被识别的字符会统一被替换成-，不管你有多少个连在一起（包括中文），例如我这里有个仓库名字是!@#$%^&amp;*()，那么Github会让你创建你的仓库名为!@#$%^&amp;*()，但是网址中只会变成https://github.com/:user/-，没错，Github直接用一个-代替了你的!@#$%^&amp;*()，所以仓库命名我这里提出以下几点建议： 仓库名字尽量为英文 仓库名中尽量不要含有特殊字符，如果需要空格的话将空格替换为- 仓库名能够让别人一眼看出这个仓库是用来做什么的 遵循上面的这些建议，我相信你的仓库命名应该不会乱的 在下面有Description，填写了以后会在别人搜索或者是访问你的仓库的时候展示（如图） 再往下就是仓库的公开性，Public是公开，任何人都能访问你的仓库（只读）；Private是私人仓库只有你和被你邀请的人才能够访问 再下去就是用一个README初始化你的仓库，如果勾选了Github会新建一个README来初始化你的仓库，但是README一般都是按下面的格式写的 1# :Title 没错，就只有这一行，所以我一般不勾选 仓库初始化这里我先新建一个名为Tutorial的仓库，公开仓库并且不勾选README初始化 如上图，我已经新建了一个船新的仓库我们现在要手动初始化一次 我这里新建一个文件夹，在这里打开命令行，先用Git初始化这个文件夹，并在里面放入一个README.md文件 使用Git命令来推送我们的更改 12345$ git init # 初始化文件夹（在文件夹内创建一个.git文件夹用于存储git信息）$ git add . # 添加所有更改，当然你也可以添加特定的更改，把.换成文件路径即可$ git commit -m &quot;init&quot; # 提交更改，并留下信息为&quot;init&quot;$ git remote add origin git@github.com:GamerNoTitle/Tutorial.git # 添加仓库地址到名为origin的git目标$ git push -u origin master # Git推送到仓库，仅第一次加入git远程目标时需要，后续直接git push 我这里使用的是SSH推送方式，你也可以使用HTTPS的方式，不过缺点就在于每次都要输入Github的账号信息。 添加SSH秘钥那么如何使用SSH方式呢？我们先打开命令行，使用ssh-keygen来创建我们的SSH秘钥，如果要求你输入的话可以直接留空回车（高级用户请自便） 12345678910111213141516171819202122$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/bili33/.ssh/id_rsa):Created directory &#x27;/home/bili33/.ssh&#x27;.Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /home/bili33/.ssh/id_rsa.Your public key has been saved in /home/bili33/.ssh/id_rsa.pub.The key fingerprint is:SHA256:jdynahazKmHSKBGge2KnSDNlUFM7+AVADYeW4NY7CjY GamerNoTitle@ADMIN-PCThe key&#x27;s randomart image is:+---[RSA 2048]----+|oo+*B+ ||+ o++.o ||.+.= o . ||o.o o o. + ||+E.* . S o . ||BoX = o o ||.+ o . +. || . +. || ..+. |+----[SHA256]-----+ 然后Windows会在C:\\Users\\:user\\.ssh下创建两个文件，linux则会在/.ssh创建两个文件，两个系统创建的文件是一样的，都是id_rsa和id_rsa.pub。 我们需要用记事本或者任意文本编辑器打开id_rsa.pub，将里面的内容复制，然后点开Github设置，点击左边的SSH and GPG Keys，点击右上角的NEW SSH KEY 将你的id_rsa.pub的内容粘贴到下面的大框框里面，上面填上一个便于你自己辨识的名字，然后保存 这样一来，你当前的设备就有对Github仓库的访问权限。除非你重新生成了SSH秘钥，否则无需对秘钥进行更改。 仓库初始化完成看下面，我已经将我的README.md推送到Github仓库了 仓库设置 我们点击上面的Settings，Github会把我们带到仓库的设置界面 在Options里面，有仓库的基本设定：仓库名、仓库封面图、仓库功能、Github Pages服务，还有Github所谓的危险区（对仓库的所有权或者状态进行管理的分区 左边则还有各种设置项，可以用Manage access来授予别人访问权限，当然也可以为仓库添加特定的SSH key等等 仓库发行当我们编译完自己的程序，想要发布可执行程序的时候，就需要Release功能（当然不止于这种情况，也有想要薅一把Github的羊毛把Github当做图床加上Jsdelivr作为CDN的用法） 我们点击顶端的Release按钮，如果你之前没有Release的话界面应该是像上面这样的，我们就要点create a release来创建我们的发行 如果你有发布过release，那你的界面应该是这样的，我们就要点右上角Draft a New Release来发布 在这个界面，在左边最小的那个框里面填写版本号，版本号应该像是v1.0.0、a1.0这样的，取得复杂了就很麻烦（当然只是自己用的话请随便），在长条框里面填写自己的标题，下面的大框框填写自己这个版本的详细内容，填写完后点击最下面的publish release即可。 等到我想到还有什么是要跟小白说的我会再发的，现在暂时想到这么多，当然你也可以留言 题外话我还真的没想到有人玩Hexo不会用Github，然后就写了这一篇文章…… 最近做了使用MCDR的服务器能够使用的两个插件SimpleOP和MCDR-WikiSearcher，前者是根据佛冷的修改的，后者是因为TIS发布的那个用不了，然后就自己整了一个，也就整了3小时，其实不难","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"CSGO服务器架设指南","slug":"CSGO-Server","date":"2020-04-05T04:48:50.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/04/05/CSGO-Server/","link":"","permalink":"https://coralare.com/2020/04/05/CSGO-Server/","excerpt":"","text":"“GOGOGO”最近我身边的小伙伴们都拉我打CSGO，还想打内战……然后就让我架设一个社区服务器。讲真，架设社区服务器的坑挺多的，我会在文中尽量把我架设服务器的过程给叙述完整，帮助你们，同样也帮助我在我忘记的时候回想起来 废话不多说，让我们开始吧（干货警告） 你需要准备：一台有公网IP的服务器 一个Steam账号（无任何的VAC记录，没有社区违规记录） 我这里使用的是阿里云的轻量应用服务器（Ubuntu 18.04 LTS），如果你也想使用阿里云，但是没有阿里云账号，可以到下边的这个链接进行注册（顺带帮我填一下邀请码秋梨膏） https://www.aliyun.com/minisite/goods?userCode=05u8nbft 然后可以到阿里云云翼计划购买轻量应用服务器（下面的云服务器ECS），亲测一个服务器10个人带的动没啥问题 Linux搭建方法Steamcmd下载首先，你需要下载Steamcmd，这是一个Steam的官方软件，关于它的详细信息，你可以在这里找到（V社官方WIKI，无需梯子） 自动安装如果你的服务器是64位的Linux系统，你需要运行以下命令安装32位的运行库 1234$ sudo add-apt-repository multiverse$ sudo dpkg --add-architecture i386$ sudo apt update$ sudo apt install lib32gcc1 steamcmd 然后就可以直接使用 1$ apt install steamcmd # Ubuntu用户 或者 1$ yum install steamcmd # CentOS用户 来安装Steamcmd，如果你更新了yum库或者apt库仍然提示未找到steamcmd包，那么你可以使用手动安装的方法 手动安装手动安装就是自己从V社的官方服务器中获取可执行文件，当然在这之前，你还是需要安装32位的运行环境 Ubuntu 1$ sudo apt-get install lib32gcc1 CentOS X86 1$ yum install glibc libstdc++ CentOS X64 1$ yum install glibc.i686 libstdc++.i686 安装完运行库后，我们需要下载steam官方的软件包 1$ curl -sqL &quot;https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz&quot; | tar zxvf - 使用上面这一条命令下载软件包，解压后应该有个steamcmd.sh和一个文件夹。我们直接运行steamcmd.sh 1$ bash steamcmd.sh 然后它会进入更新状态，就像是你平常打开Steam的那个小白窗 等它最后显示为Steam&gt;并且是输入状态的时候，它就完成了更新。至此，你就完成了Steamcmd的安装 按照steam官方的意思，他们不推荐使用root账户来运行steamcmd（我也不知道为什么），然而我实际上用root账户开下来也没有什么不妥的地方，所以是否使用root账户取决于你们自己吧 CSGO服务器安装在这之前，请确保你的服务器装得下CSGO的所有文件，服务端的大小跟客户端没差多少，请确定你的服务器有那么多的空间！！！ 我们在Steamcmd里面输入login anonymous来进行匿名登录 1$ Steam&gt;login anonymous 当然你也可以使用你自己的账号登录 1$ Steam&gt;login :Steam_Account :Password :Steam_Guard 其中，:Steam_Account是你的Steam登录名，:Password是你的密码，:Steam_Guard是你的Steam令牌，如果你是使用邮箱令牌的，那你可以不加上令牌，先发出登录请求，等Steam执行了登录以后会让你输入你的邮箱验证码的 登录完成后，我们的Steamcmd就正式接入了Steam网络了。我们需要安装CSGO服务器 1$ Steam&gt;app_update 740 validate 用上面的命令来安装CSGO服务器，740是CSGO服务器这款应用在Steam的注册ID，validate是文件验证，初次安装需要进行文件验证，以后升级可以直接使用 1$ Steam&gt;app_update 740 来进行升级。如果你的服务器不够空间，会给你报错，你可以先退出Steamcmd，在linux的命令行中使用 1$ df -h 来查看你的空间是否足够，一般来说需要查看最右边Mounted on的/这一个目录的剩余，Avail就是这个目录剩余的空间。 当你输入命令安装CSGO服务器后，Steamcmd会进入安装状态等到最后提示Successfully installed即为安装完成，你的CSGO已经被安装在了./steamapps/common/Counter-Strike Global Offensive Beta - Dedicated Server里面了 如果你觉得它太长了，你可以使用 1$ Steam&gt;force_install_dir :dir 来安装到你觉得合适的地方，请将:dir换成你要的目录，并且在app_update前执行！ 配置服务器安装完了以后，我们就要进行服务器的配置。CSGO服务器默认的配置很令人头疼的：竞技模式、TK开启、TK惩罚等等等等，各种不方便的东西都有。我们需要修改服务器的配置 CSGO也给我们提供了很方便的方法修改服务器，我们可以使用一个文件进行修改。 我们在CSGO服务器目录下的./csgo/cfg文件夹中新建一个文件叫做server.cfg，然后在这里面修改我们需要的配置。我先贴出我的配置rcon_password &quot;&quot; // OP 密码// &quot;&quot; 表示没有hostname &quot;服务器&quot;// 服务器名称sv_region 255 // 服务器所在区域注册参数// 255=全球// 0=美国东部// 1=美国西部// 2=南美洲// 3=欧洲// 4=亚洲// 5=澳洲// 6=中东// 7=非洲sv_rcon_minfailures 3// 允许输入OP密码 错误次数下限 // 达到下限则封禁对方的IPsv_rcon_banpenalty 5// 封禁的时限 单位 分钟// 0=永久sv_maxupdaterate 100// 服务器每秒更新最大频率// 根据实际网络状况调节// sv_maxrate / 300 = 要设的值 // 默认=30// 局域网=101sv_minupdaterate 40// 服务器每秒更新最小频率sv_unlag 1// 玩家延时补偿// 0=关闭// 1=开启(默认)sv_maxunlag 0.5 // 延时补偿最大值默认 0.5 // 0.5=500毫秒(默认)sv_voiceenable 1 // 服务器是否允许麦克风语音通讯 // 0=禁止// 1=允许(默认)sv_unlagsamples 1 // 延时补偿数据包平均采样数量 // 默认=1sv_unlagpush 0 // 服务器推进延时补偿// 0=关闭(默认)// 1=开启mp_autokick 0 // 自动踢除不动的玩家// 0=关闭(比赛默认)// 1=开启mp_autocrosshair 0 // 自动瞄准// 0=关闭(默认)// 1=开启mp_autoteambalance 0// 自动平衡双方人数// 0=关闭(比赛默认)// 1=开启mp_buytime 0.25 // 每回合购买武器装备时间单位分钟 // 比赛默认=0.25mp_consistency 1 // 防止某些模型被更改// 0=关闭// 1=开启(默认)mp_c4timer 35 // C4爆炸倒计时单位秒// 比赛默认=35mp_decals 300 // 墙壁上的血花弹孔贴图细节数据传送(200-300)mp_falldamage 1 // 高处落下伤害// 0=关闭// 1=开启(默认)mp_fadetoblack 0 // 死后黑屏// 0=关闭(默认)// 1=开启mp_flashlight 1 // 手电筒// 0=禁止// 1=允许(默认)mp_forcechasecam 2 // 死后跟随// 0=所有玩家// 1=仅队友// 2=仅队友，主视角(比赛默认)mp_forcecamera 2 // 死后视角选择// 0=全部视角// 1=仅队友，全部视角// 2=仅队友，主视角(比赛默认)mp_footsteps 1 // 脚步声// 0=关闭// 1=开启(默认)mp_fraglimit 0 //杀人数上限(1~n)，超过上限就换地图 // 0=关闭(默认)mp_freezetime 8 // 每回合开始冻结时间单位秒mp_friendlyfire 1 // 友军伤害// 0=关闭(默认)// 1=开启mp_friendly_grenade_damage 1// 友军手雷伤害// 0=关闭// 1=开启mp_hostagepenalty 0 // 惩罚人质杀手// 0=不惩罚(默认)// 1~N=人质被杀数量，超过则踢出该玩家mp_limitteams 0 // 两队人数差异上限// 超过此上限，新玩家只能当观察员 // 比赛默认=10sv_logbans 1// 服务器日志里记录Ban掉玩家的内容 // 0=不记录// 1=记录mp_logecho 0 // 将服务器日志反馈到控制台 // 0=关闭// 1=开启mp_logdetail 3 // 服务器日志里记录攻击信息 // 0=不记录任何信息// 1=记录敌人攻击// 2=记录队友攻击// 3=记录所有攻击mp_logfile 1 // 服务器记录日志为文件 // 0=不记录// 1=记录mp_logmessages 1 // 服务器日志里记录谈话内容 // 0=不记录// 1=记录mp_maxrounds 30 // 回合上限，达到此上限，自动重新载入新地图// 0=无回合上限(默认)mp_playerid 0 // 当准星指向敌人或队友时，显示他们的名字// 0=显示所有人(比赛默认)// 1=仅显示队友// 2=不显示mp_roundtime 2// 每回合时限单位分钟mp_timelimit 0// 地图最大时限，达此时限，自动重新载入新地图// 0=无时限mp_tkpunish 0// 惩罚队友杀手// 0=关闭(默认)// 1=开启mp_startmoney 800 // 第一回合开始金钱(800~16000) // 加时赛=10000mp_winlimit 0// 一方最大胜利回合数，达到此数量，自动重新载入新地图// 0=无限制(默认)sv_aim 0// 自动瞄准// 0=关闭(默认)// 1=开启sv_airaccelerate 10 // 玩家在空中移动的速度// 默认=10sv_airmove 1 // 在空中移动&amp;转向// 0=禁止// 1=允许(默认)sv_allowdownload 1// 客户端下载服务器资源 // 0=禁止// 1=允许(默认)sv_allowupload 1// 客户端上传自己的喷图 // 0=禁止// 1=允许(默认)sv_alltalk 1 // 警匪通话// 0=禁止(默认)// 1=允许sv_proxies 1 // HLTV代理// 0=禁止// 1=允许(默认)sv_cheats 0 // 作弊模式// 0=关闭(默认)// 1=开启sv_clienttrace 1.0 // 客户端模型的范围框的尺寸// 默认 1.0sv_clipmode 0// 锁定客户端快速模式// 0=关闭(默认)// 1=开启sv_friction 4// 地面摩擦力默认 4// 数值越低，摩擦越小sv_gravity 800 // 重力默认 800sv_maxrate 20000 // 服务器最大传输速率&lt;0-25000&gt; // (服务器上传带宽 x 125) /服务器设定的最大人数 = 要设的值// 0=无限制// 局域网=25000sv_maxspeed 320 // 客户端最大移动速度sv_minrate 0// 服务器最小传输速率&lt;0-25000&gt; // 0=无限制sv_send_logos 1 // 客户端相互之间传送喷图// 0=禁止// 1=允许(同时确保sv_allowdownload键值为1)sv_sendvelocity 0// 服务器混合物理运算，适用于较好配置的服务器 // 0=关闭// 1=开启sv_send_resources 1// 自动向客户端传送地图关联的*.res文件里包括的资源文件 // 0=关闭// 1=开启(同时确保sv_allowdownload为1)sv_stepsize 18// 玩家的步伐距离// 默认 18sv_stopspeed 75// 玩家停止移动时的速度默认 75sv_timeout 65// 客户端连接服务器超时的时限，达到时限则断开连接sv_voicecodec voice_speex // 语音通话解码// voice_miles是HL引擎长期以来用的语音解码(默认)，占用带宽较大，为32kbps// voice_speex是Valve新加入的解码，优于voice_miles，占用带宽较少，为2.4kbps至15.2kbpssv_voicequality 5// 客户端语音通话质量(确保sv_voicecodec voice_speex)// 1=非常差...........占用带宽 2.4 kbps // 2=差...............占用带宽 6.0 kbps // 3=中等.............占用带宽 8.0 kbps // 4=好...............占用带宽 11.2 kbps // 5=非常清晰.........占用带宽 15.2 kbpsallow_spectators 1// 观察员模式// 0=禁止// 1=允许decalfrequency 30// 玩家喷图的时间间隔单位秒edgefriction 2// 玩家与玩家、墙壁、物体之间的摩擦// 默认 2host_framerate 0// 与Demo录制有关// 0&lt;N&lt;1 为慢录// n=0 为正常(默认)// n&gt;1 为快录log on// 开始记录日志pausable 1// 客户端暂停游戏// 0=禁止// 1=允许// Steam社区服务器验证sv_setsteamaccount xxx// 模式参数game_mode 1game_type 0mapcyclefile mapcycle.txt// 地图循环列表所在的.txt文件// *.txt = cstrike\\*.txt文件// Use this file to configure your DEDICATED server. // This config file is executed on server start.// load ban filesexec listip.cfgexec banned.cfg 其中很多内容我都注释好了，其实这个配置文件也是我从网上找来然后进行修改得出的。其中有几个比较重要的参数： rcon_password管理员密码，在控制台可以输入密码使用管理员权限，就不需要在后台使用指令 hostname服务器名称，记得一定要修改，之前翻社区服务器的时候发现很多没修改的都是写着Counter-Strike Global Offensive的 sv_password玩家加入需要的密码，填入了就会加密你的服务器，只有输入正确的密码才能够进入 sv_setsteamaccount社区服注册秘钥，这个一会会说 调整完了你的配置文件，将文件命名为server.cfg，然后放入上面所说的那个./csgo/cfg文件夹中即可 接着我们就可以着手开启服务器了 开启服务器关于服务器的开启，根据Steam的官方文档，我们需要安装一个叫做screen的包，使用 1$ yum install screen 或者 1$ apt-get install screen 来安装，然后我们就进入到CSGO服务器文件夹的根目录，也就是./steamapps/common/Counter-Strike Global Offensive Beta - Dedicated Server里面，使用 1$ screen ./srcds_run 就可以开启服务器了，当然后面可以跟一些参数，例如我想关闭VAC验证（避免VAC无法验证您的回话出现而无法加入服务器），那我就在后面加上-insecure即可；或者说我想更改模式，我就可以使用+game_mode 1 +game_type 0来进入竞技模式。 等到最后一行提示GC Connection established for server version xxxx, instance idx 1的时候就是开完了（xxxx是版本号） 根据&#x43;&#x53;&#x44;&#78;&#64;&#83;&#x75;&#x6d;&#x6d;&#101;&#114;&#46;&#x4c;&#73;&#x43;&#x59;的反馈，启动时可能会出现Failed to open dedicated.so (libstdc++.so.6: cannot open shared object file: No such file or directory)的情况，这种情况下我们需要使用 1$ apt-get install libstdc++.so.6 或者 1$ yum install libstdc++.so.6 来安装这个依赖库 关于模式，这里有一份较详细的表格（来源：Steam Developers官网） Game Mode game_type game_mode Casual (default) 0 0 Competitive / Scrimmage 0 1 Wingman 0 2 Arms Race 1 0 Demolition 1 1 Deathmatch 1 2 Custom 3 any (?) Guardian 4 0 Co-op Strike 4 1 Danger Zone 6 0 注册服务器当你直接开启服务器后，用connect ip:27015进行连接会提示：仅限局域网连接，这就是没有注册服务器到社区服务器造成的结果。这就需要用到我刚刚所说的sv_setsteamaccount这个配置。 我们访问Steam 社区 :: Steam 游戏服务器帐户管理这个链接，在这里登陆你的Steam账号（一定要没有VAC记录和社区违规记录！！！否则会无法注册） 官方Steam账号要求 您的 Steam 帐户目前不能处于社区封禁或锁定状态。 您的 Steam 帐户不能受限。 您的 Steam 帐户必须拥有一个[合格的注册手机](https://support.steampowered.com/kb_article.php?ref=8625-WRAH-9030&amp;l=simplified chinese)。 您的 Steam 帐户必须拥有所创建游戏服务器对应的游戏。 您的 Steam 帐户可以创建 1000 个游戏服务器帐户。 然后我们在下面的APPID里面填入730，备忘录按照自己喜好填，主要是用来区分不同的秘钥使用 然后将获得的秘钥放入sv_setsteamaccount内即可，接着启动服务器，连接服务器，发现是不是可以连接了？ Windows搭建方法其实Windows除了Steamcmd的安装跟linux不一样，其他都是一样的。Windows版的Steamcmd可以在这里下载https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip 下载完后解压，通过命令行运行steamcmd，其余的方法都跟linux一样，可以从CSGO服务器安装开始看 题外话我打CSGO是真的菜，讲真……而且CSGO开箱真的开不起，我还是做一名咸鱼玩家吧 不过话说回来我CSGO有狗牌（忠诚徽章）耶，应该是我唯一能炫耀的东西惹…… 辣鸡腾讯，QQ里面拦截我的网站，申诉还说我有恶意信息……一会加客服QQ问","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"hexo-theme-butterfly主题美化小笔记","slug":"butterfly-customize","date":"2020-03-19T09:51:19.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/03/19/butterfly-customize/","link":"","permalink":"https://coralare.com/2020/03/19/butterfly-customize/","excerpt":"","text":"在正式讲博客的美化之前，我想先感谢@jerryc能够带来这么棒的主题~如果你同样想使用butterfly主题，你可以去查看安装文档 如果你想让我在butterfly中添加新功能，你可以直接在本文章下方留言，我会尽量满足 另： 话不多说，让我们开始吧！ 注：写这篇文章的时候我的主题版本是2.1.0 友链界面加入更多的自定义文字&#66;&#x75;&#x74;&#116;&#x65;&#114;&#x66;&#108;&#121;&#x40;&#50;&#x2e;&#x32;&#46;&#48;以后此方法不再适用！详情请看https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/2.2.0 关于友链界面，我加入了很多内容，如A Few Requirements和下面的PS就是我加入的。 之前闲着没事翻了一下主题的layout文件夹，里面的文件都已经命好名了，所以说一看我就知道哪个文件对应哪个部分，而我需要修改的就是flink.pug这个文件 原来它长这样： 123456789101112131415161718192021222324252627.flink each i in site.data.link h1&#x3D; i.class_name .post-cards ul.md-links each item in i.link_list li.md-links-item a(href&#x3D;item.link title&#x3D;item.name target&#x3D;&quot;_blank&quot;) if theme.lazyload.enable img.lazyload(data-src&#x3D;item.avatar onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;&#96; + url_for(theme.lodding_bg.flink) + &#96;&#39;&#96; alt&#x3D;item.name ) else img(src&#x3D;item.avatar onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;&#96; + url_for(theme.lodding_bg.flink) + &#96;&#39;&#96; alt&#x3D;item.name ) .md-links-title&#x3D; item.name .md-links-des&#x3D; item.descr hr div h2&#x3D; theme.Flink.info_headline ul li&#x3D; theme.Flink.name li&#x3D; theme.Flink.address li&#x3D; theme.Flink.avatar li&#x3D; theme.Flink.info hr .comment_int p.comment-word&#x3D; theme.Flink.comment 尽管我不是很懂pug这个东西，但是我还是能看懂代码的内容，其中hr就是一条分割线，所以说区块就用分割线来分开就好了。 最开始使用这个主题的时候（当时版本应该是1.2.0，还没有按钮分级），在做友链界面的时候，我这边就有人对我的数字提出了疑问，然后我就加入了下面那行PS：本文所有的数字表示方式来自Mili - world.execute(me); 在flink.pug中加入： 1p(style&#x3D;&quot;font-size:9px;font-weight:bold&quot;)&#x3D; theme.Flink.PS 然后在butterfly的配置文件中加入一行 1PS: PS：本文所有的数字表示方式来自Mili - world.execute(me); # PS内容，在flink自加的 就可以在友链界面加入自定义的内容了 至于A Few Requirements区块在更新2.1.0后用同样的方式加入的 在flink.pug加入： 1234567891011hrdiv h2&#x3D; theme.Flink.require_headline ul li&#x3D; theme.Flink.requirement1 li&#x3D; theme.Flink.requirement2 li&#x3D; theme.Flink.requirement3 li&#x3D; theme.Flink.requirement4 li&#x3D; theme.Flink.requirement5 li&#x3D; theme.Flink.requirement6 有多少的requirement就加入多少行，然后在配置文件butterfly.yml用同样的方式加入 1234567require_headline: A Few Requirementsrequirement1: GamerNoTitle表示不接受商业性网站、下载站、视频站等requirement2: HTTP和HTTPS均可，不强制性要求小绿锁，但是只有一个IP或者带端口的不接受哦requirement3: 网站要有维护，定期或不定期均可，线下朋友请忽略这一条requirement4: 可以先在自己的网站加上我的友链，我处理的速度也会快一些呢~requirement5: 大佬可以无视上面的要求，并加入“大佬之家”行列requirement6: 如果你想联系我，在About页面中有我的相关联系方式 就可以了~ 友链链接区块加入一行小字Butterfly忘了哪个版本（我发现的时候是2.3.5）后不再需要此方法！ 效果就像图片里面的那样 其实这个也很简单，跟上面一样还是要动flink.pug文件，在最顶上那一块代码中加入一行，将所需的字典名字命名为class_descr，加入后的代码如下 123456789101112131415.flink each i in site.data.link h1&#x3D; i.class_name h4&#x3D; i.class_descr &#x2F;&#x2F;- 给每个class加入class_descr参数 .post-cards ul.md-links each item in i.link_list li.md-links-item a(href&#x3D;item.link title&#x3D;item.name target&#x3D;&quot;_blank&quot;) if theme.lazyload.enable img.lazyload(data-src&#x3D;item.avatar onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;&#96; + url_for(theme.lodding_bg.flink) + &#96;&#39;&#96; alt&#x3D;item.name ) else img(src&#x3D;item.avatar onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;&#96; + url_for(theme.lodding_bg.flink) + &#96;&#39;&#96; alt&#x3D;item.name ) .md-links-title&#x3D; item.name .md-links-des&#x3D; item.descr 然后在link.yml的每一个class中就可以加入descr了，这里以一个区块做例子 12345678910class2: class_name: DOS 私人服务 class_descr: 我个人在使用的不同网络服务，在这里列出(＾Ｕ＾)ノ~ＹＯ # 这里填入描述 link_list: 1: name: CloudFlare link: https://www.cloudflare.com/ avatar: https://dash.cloudflare.com/favicon.ico descr: 免费的域名托管平台 在class_name下面加入一行参数叫class_descr并设定为想要的内容即可，当然你也可以加在link_list的下面，但是请注意缩进要跟class_name和link_list平齐 加入基于Gitalk的动态栏小部件这个部件最开始是在@火喵的博客看到的，然后就发了邮件问了一下是怎么实现的 感谢@火喵提供的思路~！ 然后我参照了Gitalk的文档，用一个非常简单的什么都没有的html文件来装我这个Gitalk，正因为只有Gitalk，所以整个html文档就很简单 123456789101112131415161718192021&lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/GamerNoTitle/Picture-repo-v1@gitalk-css/css/gitalk-dorcandy.css&quot;&gt; &lt;!-- 导入自己修改过后的css文件，参照了火喵的 --&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/gh/GamerNoTitle/Picture-repo-v1@gitalk/js/gitalk.min.js&quot;&gt;&lt;/script&gt; &lt;!-- 导入自己修改后的js文件，主要修改了显示的字 --&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;&lt;script&gt; var gitalk = new Gitalk(&#123; id: &#x27;Dynamics&#x27;, clientID: &#x27;xxxxxxxxxxxxxxxxxxxx&#x27;, clientSecret: &#x27;xxxxxxxxxxxxxxxxxxxxxxxxx&#x27;, repo: &#x27;GamerNoTitle.Github.io&#x27;, owner: &#x27;GamerNoTitle&#x27;, admin: [&#x27;GamerNoTitle&#x27;], title: &#x27;Dynamics&#x27;, pagerDirection: &#x27;last&#x27;, perPage: 5, &#125;) gitalk.render(&#x27;gitalk-container&#x27;)&lt;/script&gt;&lt;/body&gt; 其中，pagerDirection本来是排序的顺序，但是按照Gitalk的issue#210中官方所述，不登录的话排序顺序只能是从旧到新，所以我也没办法，我采取的操作是一个issue中只容纳5条动态，历史动态就放到另外的issue中 将这个html文件命名一下为gitalk.html，然后放在主题目录的source文件夹下，然后进入.\\layout\\includes\\widget文件夹，将card_announcement.pug（公告卡片）复制一份作为模板并且重命名为card_dynamics.pug，然后打开修改里面的内容。原来里面的内容如下 123456.card-widget.card-announcement .card-content .item-headline i.fa.fa-bullhorn.card-announcement-animation(aria-hidden&#x3D;&quot;true&quot;) span&#x3D; _p(&#39;aside.card_announcement&#39;) .announcement_content&#x3D; theme.announcement.content 在这里面，span应该是显示的字（如图红框处） 但是我加入的字不在语言配置文件中有，所以直接修改成 1span&#x3D; &#39;Dynamics&#39; 就可以了，接着是要修改图标，作为动态，一个小喇叭的图标显得不是很好看。所以我就访问了Fontawesome@v4.7.0，选择了现在的这个图标 将图标的信息修改为 1i.fa.fa-quote-right(aria-hidden&#x3D;&quot;true&quot;) 图标后面的那串动画就不要了，动画多了也不是很好看 最后需要引入Gitalk.html文件，在下面加入一行 1include gitalk.html 这样当部署完后，网站就会自动引用根目录下的gitalk.html文件。当然你要是直接访问我的gitalk.html文件也是能打开的 接着我们需要在网站的渲染中加入这个小部件 打开此目录下的index.pug，然后将这个引入加在认为合适的地方，我直接加载了公告的下面 12if theme.aside.card_dynamics include .&#x2F;card_dynamics.pug 最后到butterfly.yml文件中，加入小部件的开关 12345678910aside: position: right # left or right card_author: true card_announcement: true card_recent_post: true card_categories: true card_tags: false card_archives: true card_webinfo: true card_dynamics: true # 动态开关 部署自己的网页，就能够出现这种效果啦！ 当然你要是在上面不要if判断，直接加入，那你就不需要在配置文件中加入开关了 2020.4.4更新 主题版本butterfly@2.2.5 为网站加上全局黑白效果为什么加这个效果呢？我一开始加是2020.4.4为了纪念为抗争新冠肺炎而牺牲的各位烈士们，所以加了全局的黑白效果。先放两张图给你们看看加入后的效果 就是像这样的全局黑白效果，加起来其实也不难，一开始@yuleng给我分享了全局黑白的html代码，告诉我要加就加载header或者是body里面（下面先放html代码） 12345678910111213&lt;!-- 黑白色 --&gt;&lt;style&gt;html&#123;filter: grayscale( 100%);-webkit-filter: grayscale( 100%);-moz-filter: grayscale( 100%);-ms-filter: grayscale( 100%);-o-filter: grayscale( 100%);filter: url( &quot;data:image/svg+xml;utf8,&lt;svg xmlns=\\&#x27;http://www.w3.org/2000/svg\\&#x27;&gt;&lt;filter id=\\&#x27;grayscale\\&#x27;&gt;&lt;feColorMatrix type=\\&#x27;matrix\\&#x27; values=\\&#x27;0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\&#x27;/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale&quot;);filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);-webkit-filter: grayscale( 1);&#125;&lt;/style&gt; 但是我们的butterfly后端是使用的pug文件作为网站样式的编写方式，所以我们要先把它转成pug形式的，转出来就是像下面这样 123456789101112131415html body &#x2F;&#x2F; 黑白色 style. html&#123; filter: grayscale( 100%); -webkit-filter: grayscale( 100%); -moz-filter: grayscale( 100%); -ms-filter: grayscale( 100%); -o-filter: grayscale( 100%); filter: url( &quot;data:image&#x2F;svg+xml;utf8,&lt;svg xmlns&#x3D;\\&#39;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg\\&#39;&gt;&lt;filter id&#x3D;\\&#39;grayscale\\&#39;&gt;&lt;feColorMatrix type&#x3D;\\&#39;matrix\\&#39; values&#x3D;\\&#39;0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\&#39;&#x2F;&gt;&lt;&#x2F;filter&gt;&lt;&#x2F;svg&gt;#grayscale&quot;); filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale&#x3D;1); -webkit-filter: grayscale( 1); &#125; 然后我把这一串代码存到一个名为blackandwhite.pug的文件，将它放在主题目录下的layout/includes/addons里面，然后就要在layout.pug里面引入文件。在原文件的include ./head.pug下面加入一行来引入我们的文件 12if theme.blackandwhite include .&#x2F;addons&#x2F;blackandwhite.pug 加个if判断是为了下次要使用的时候还能够用，不用再次修改。 接着我们到butterfly.yml文件内加多一行 1blackandwhite: true 这样就开启了我们的黑白效果 为了方便大家，我将文件放出来blackandwhite.pug，大家只需要将文件放在对应的位置，加上对应的配置项即可！ 2020.4.7更新 主题版本butterfly@2.2.5 为文章加上投票评分功能按照群友的要求，我又来更新啦，这次我们给文章加上投票评分功能，具体的效果像下面那样（Donate按键是主题自带的，不是我加入的） 那么废话不多说，让我们直接开始！（如果你想直接使用我做好的只需要替换id的预设文件，那你可以点击这里直接跳到文档，而不必看我是如何做的）注册一个你自己的账号，注册过程相信我不用说你也会。注册完以后，会把我们导到安装界面，我们选择最右边的Rating widget，获取我们自己的引入代码，等待下一步使用，我这里获取到的引入代码如下（为保证信息准确性，我将自己的id替换成了xxxxx） 首先你得去widgetpack注册一个你自己的账号，注册过程相信我不用说你也会。注册完以后，会把我们导到安装界面，我们选择最右边的Rating widget，获取我们自己的引入代码，等待下一步使用，我这里获取到的引入代码如下（为保证信息准确性，我将自己的id替换成了xxxxx） 123456789101112131415&lt;div id=&quot;wpac-rating&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt;wpac_init = window.wpac_init || [];wpac_init.push(&#123;widget: &#x27;Rating&#x27;, id: xxxxx&#125;);(function() &#123; if (&#x27;WIDGETPACK_LOADED&#x27; in window) return; WIDGETPACK_LOADED = true; var mc = document.createElement(&#x27;script&#x27;); mc.type = &#x27;text/javascript&#x27;; mc.async = true; mc.src = &#x27;https://embed.widgetpack.com/widget.js&#x27;; var s = document.getElementsByTagName(&#x27;script&#x27;)[0]; s.parentNode.insertBefore(mc, s.nextSibling);&#125;)();&lt;/script&gt;&lt;a href=&quot;https://widgetpack.com&quot; class=&quot;wpac-cr&quot;&gt;Star Rating WIDGET PACK&lt;/a&gt; 接着，我们要在对应的地方引用它，但是butterfly是使用pug和stylus的组合来进行渲染的，所以我们要先把上面的这一串代码转成pug形式的 12345678910111213141516html body #wpac-rating script(type&#x3D;&quot;text&#x2F;javascript&quot;). wpac_init &#x3D; window.wpac_init || []; wpac_init.push(&#123;widget: &#39;Rating&#39;, id: xxxxx&#125;); (function() &#123; if (&#39;WIDGETPACK_LOADED&#39; in window) return; WIDGETPACK_LOADED &#x3D; true; var mc &#x3D; document.createElement(&#39;script&#39;); mc.type &#x3D; &#39;text&#x2F;javascript&#39;; mc.async &#x3D; true; mc.src &#x3D; &#39;https:&#x2F;&#x2F;embed.widgetpack.com&#x2F;widget.js&#39;; var s &#x3D; document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(mc, s.nextSibling); &#125;)(); a.wpac-cr(href&#x3D;&quot;https:&#x2F;&#x2F;widgetpack.com&quot;) Star Rating WIDGET PACK 然后将其保存成rating.pug，放到./layout/includes/addons里面去。不过在这代码里面，投票UI不是居中的就让我很不上，而且最后一行有一串a标签，然而我并不是很喜欢它，我将代码改成了下面这个样子(这里把id改成了变量，可以在butterfly.yml里面修改) 12345678910111213141516171819202122html body #wpac-rating(align&#x3D;&quot;center&quot;) script(type&#x3D;&quot;text&#x2F;javascript&quot;). wpac_init &#x3D; window.wpac_init || []; wpac_init.push(&#123;widget: &#39;Rating&#39;, id: !&#123;theme.rating.id&#125;&#125;); &#x2F;&#x2F;- 这里将xxxxx改成自己的id (function() &#123; if (&#39;WIDGETPACK_LOADED&#39; in window) return; WIDGETPACK_LOADED &#x3D; true; var mc &#x3D; document.createElement(&#39;script&#39;); mc.type &#x3D; &#39;text&#x2F;javascript&#39;; mc.async &#x3D; true; mc.src &#x3D; &#39;https:&#x2F;&#x2F;embed.widgetpack.com&#x2F;widget.js&#39;; var s &#x3D; document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(mc, s.nextSibling); &#125;)(); &#x2F;&#x2F;- 下面的那行小字 如果你不需要可以把17~21行注释掉 #copy(align&#x3D;&quot;center&quot;) | Rating addon based on a(herf&#x3D;&quot;https:&#x2F;&#x2F;widgetpack.com&#x2F;&quot;) widgetpack | , by a(href&#x3D;&quot;https:&#x2F;&#x2F;bili33.top&quot;) GamerNoTitle 保存完成后，我们进入./layout/post.pug里面对我们的文件进行引入，在合适的位置添加引入代码，我这里是在打上的下面进行了添加 12345if theme.reward.enable !&#x3D;partial(&#39;includes&#x2F;post&#x2F;reward&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)&#x2F;&#x2F;- 上面是打赏功能，下面是添加的投票功能if theme.rating.enable include includes&#x2F;addons&#x2F;rating.pug 接着，我们到butterfly.yml里面加入新的配置项 123rating: enable: true id: 00000 这样就加入了一个开关（不过是全局的），可以控制rating功能是否开启（讲真我觉得这个功能我自己用的很少，我自己应该会关掉） 接着我们就可以部署自己的应用啦，看看是不是可以开始投票了呢？ 关于投票的设定，默认是需要社交账号登录的，但是看着这几个图标，又有几个是在国内能够使用的呢？ 我们需要更改这个设定，让其不需要社交账号登录也能够进行投票 点开左上角的三条横线，选择Rating，然后点击里面的Setting，在这里面就有我们需要的设置 我们可以看到左边的框选择的是Social，我们可以选择IP address或者Cookies的任意一个，这取决于你要怎么计算你的文章投票，如果选择IP的话，那么同公网IP下的一个人进行了投票，剩下的人就不能够投票了（会怎么点都没反应）；选择Cookie的话，可能会存在刷票的问题（因为cookie是可以清理的，但是谁这么无聊呢？） 至于右边，可以选择星星的颜色，我这里选择的是淡蓝色；你还可以设置星星上限，默认是5星满分，你可以把它改成你想要的数字，而另一个输入框是设定星星的大小，取决于你自己的审美吧 评分预设文档使用首先你需要点击这里下载预设文件 在这文档里面，你需要修改的是id。如何获取id，你可以查看下面这张图片 把文件放入./layout/includes/addons（若不存在则自己建立文件夹） 打开自己的butterfly.yml文件，在任意一行加入以下内容： 1234# 投票评分功能rating: enable: true id: 00000 # 请改成你自己的ID 然后去到./layout/post.pug里面，在你想要加入投票功能的位置加入以下代码（推荐加载打赏即reward后面） 12if theme.rating.enable include includes&#x2F;addons&#x2F;rating.pug 然后对网站进行部署即可！ 2020.4.5更新 主题版本butterfly@2.2.5 为网站加入实时对话功能&#66;&#x75;&#116;&#x74;&#x65;&#114;&#x66;&#108;&#121;&#x40;&#x33;&#46;&#48;&#x2e;&#x30;&#x2d;&#x72;&#99;&#x31;以后自带此功能 与其说是实时对话，怎么感觉像客服系统？（某群友想弄然后我先给搞出来了，接着他自己在我发文前弄好了）这次使用的是Daovoice，照例我们先上一张效果图（如果想直接使用预设文档的话你可以点这里）（注：本站未开启此功能） 是不是很像客服系统？然而你就是可以把它玩成聊天软件，话不多说，让我们开始吧！ 首先我们需要在Daovoice上面注册一个账号，添加我们自己的应用。添加完了以后，daocloud会给我们一些代码，需要我们加入到head中，并使用script调用才能出现右下角的那个按钮 新办法这里感谢@GarveyZhong提供的新方法思路 预设文档点这里 我们先把daovoice给我们的两串代码整合一下 1234567&lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#x27;https:&#x27; == document.location.protocol ? &#x27;https:&#x27; : &#x27;http:&#x27;) + &quot;//widget.daovoice.io/widget/xxxxxxxx.js&quot;,&quot;daovoice&quot;)daovoice(&#x27;init&#x27;, &#123; app_id: &quot;xxxxxxxx&quot;&#125;);daovoice(&#x27;update&#x27;);&lt;/script&gt; 接着把它转成pug形式（这里已经将appid作为一个变量，感谢@青苏告诉我pug变量的正确写法） 12345678html body script. (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]&#x3D;r;i[r]&#x3D;i[r]||function()&#123;(i[r].q&#x3D;i[r].q||[]).push(arguments)&#125;,i[r].l&#x3D;1*new Date();a&#x3D;s.createElement(o),m&#x3D;s.getElementsByTagName(o)[0];a.async&#x3D;1;a.src&#x3D;g;a.charset&#x3D;&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#39;https:&#39; &#x3D;&#x3D; document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) + &quot;&#x2F;&#x2F;widget.daovoice.io&#x2F;widget&#x2F;!&#123;theme.daovoice.appid&#125;.js&quot;,&quot;daovoice&quot;) daovoice(&#39;init&#39;, &#123; app_id: &quot;!&#123;theme.daovoice.appid&#125;&quot;, &#125;); daovoice(&#39;update&#39;); 然后将这串代码保存到./layout/includes/addons/daovoice.pug中 然后我们打开./layout/index.pug文件，在里面加入以下内容 12if theme.daovoice.enable include includes&#x2F;addons&#x2F;daovoice.pug 然后我们再打开butterfly.yml，在里面加入以下内容 1234# Daovoice实时客服功能daovoice: enable: true appid: xxxxxxxx 接着保存，部署，发现右下角的按钮出来了吧~ 实时对话预设文档使用先点击这个链接下载预设文档→daovoice.pug 将文件放入./layout/includes/addons文件夹内，接着打开./layout/index.pug，在里面加入以下内容 12if theme.daovoice.enable include includes&#x2F;addons&#x2F;daovoice.pug 然后打开butterfly.yml，加入以下内容 1234# Daovoice实时客服功能daovoice: enable: true appid: xxxxxxxx 接着部署即可！ 旧办法Daocloud提供给我的代码是下面这样的，正常来说除了那个js的名字不一样其他都是一样的（这里的js名字为了保证隐私安全我用了xxxxxxxx代替） 1&lt;script&gt;(function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#x27;https:&#x27; == document.location.protocol ? &#x27;https:&#x27; : &#x27;http:&#x27;) + &quot;//widget.daovoice.io/widget/xxxxxxxx.js&quot;,&quot;daovoice&quot;)&lt;/script&gt; 按照思路，首先我们需要把daovoice提供的代码都转换成pug形式，转换后就像下面这样 1234html body script. (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]&#x3D;r;i[r]&#x3D;i[r]||function()&#123;(i[r].q&#x3D;i[r].q||[]).push(arguments)&#125;,i[r].l&#x3D;1*new Date();a&#x3D;s.createElement(o),m&#x3D;s.getElementsByTagName(o)[0];a.async&#x3D;1;a.src&#x3D;g;a.charset&#x3D;&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#39;https:&#39; &#x3D;&#x3D; document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) + &quot;&#x2F;&#x2F;widget.daovoice.io&#x2F;widget&#x2F;xxxxxxxx.js&quot;,&quot;daovoice&quot;) 接着我们把这串代码放到daovoice-head.pug文件中，并把这个文件放到./layout/includes/addons里面（没有这个文件夹可以自己建立，也可以把我下面教程中的路径替换成你自己的），接着，我们打开./layout/includes/head.pug里面，加入以下代码 12if theme.daovoice.enable &#x2F;&#x2F;- 如果你不想在butterfly.yml中加入开关，想直接引入的话可以不用这一行 include .&#x2F;addons&#x2F;daovoice-head.pug 这样，head的引入就完成了 剩下的工作就是用一个script调用这个功能。根据daovoice提供给我们的代码（然而并没有把&lt;script&gt;&lt;/script&gt;加进去，差评哼） 1234daovoice(&#x27;init&#x27;, &#123; app_id: &quot;xxxxxxxx&quot;&#125;);daovoice(&#x27;update&#x27;); 我们需要给它的头和尾加入手动加入&lt;script&gt;&lt;/script&gt;才能正确调用，所以加了以后就是 123456&lt;script&gt;daovoice(&#x27;init&#x27;, &#123; app_id: &quot;xxxxxxxx&quot;&#125;);daovoice(&#x27;update&#x27;);&lt;/script&gt; 接着仍然要把它转成pug文件，转出来以后就是这样 1234567html body script. daovoice(&#39;init&#39;, &#123; app_id: &quot;xxxxxxxx&quot;, &#125;); daovoice(&#39;update&#39;); 然后我们把这串代码保存到一个名为daocloud-anonymous.pug的文件，放到./layout/includes/addons里面，接着我们打开./layout/index.pug文件，在里面加入以下内容 12if theme.daovoice.enable &#x2F;&#x2F;- 这里同样，不需要的话可以删掉 include includes&#x2F;addons&#x2F;daovoice-anonymous.pug 然后保存，到butterfly.yml里面在任意一个位置加入以下内容 12daovoice: enable: true 加入完成后保存，开始部署本地调试，看看右下角是不是多了一个小按钮啦？（按钮的样式需要在Daovoice后台更改） 旧办法实时对话预设文档使用首先，你还是需要一个Daovoice账号，注册完了以后，点击下面的链接下载所需要的两个文件 Daovoice的Head预设文件 | Daovoice的调用Script 然后打开下载的daovoice-head.pug，在里面的第四行，把链接中的8个x改成你自己的应用id 1234html body script. (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]&#x3D;r;i[r]&#x3D;i[r]||function()&#123;(i[r].q&#x3D;i[r].q||[]).push(arguments)&#125;,i[r].l&#x3D;1*new Date();a&#x3D;s.createElement(o),m&#x3D;s.getElementsByTagName(o)[0];a.async&#x3D;1;a.src&#x3D;g;a.charset&#x3D;&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#39;https:&#39; &#x3D;&#x3D; document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) + &quot;&#x2F;&#x2F;widget.daovoice.io&#x2F;widget&#x2F;xxxxxxxx.js&quot;,&quot;daovoice&quot;) 打开下载的daovoice-anonymous.pug文件，同样将里面的app_id改为自己的应用id 1234567html body script. daovoice(&#39;init&#39;, &#123; app_id: &quot;xxxxxxxx&quot;, &#125;); daovoice(&#39;update&#39;); 保存，把这两个文件放进./layout/includes/addons里面 接着打开./layout/includes/head.pug文件，在里面加入引入代码如下图 12if theme.daovoice.enable include .&#x2F;addons&#x2F;daovoice-head.pug 保存，打开./layout/index.pug，在里面加入引入代码如下图 12if theme.daovoice.enable include includes&#x2F;addons&#x2F;daovoice-anonymous.pug 保存，打开butterfly.yml，在任意一行加入以下内容 123# Daovoice实时客服功能daovoice: enable: true 然后保存即可！ 加入音乐小部件Butterfly@dev-pjax分支不推荐 这里有两种做法，Aplayer方法和网易云自带播放器的方法，请根据自己的需要进行修改，预览图在每个方法的开头就有 Aplayer法 Aplayer是一个音乐播放器，官方文档在这里，这里我着重讲怎么添加，而不是aplayer的用法（已经配置好的文件在下面，可以直接下载使用） 首先，按照我的个人习惯，在layout/includes/addons文件夹里面复制粘贴一个layout/includes/widget/card_announcement.pug的副本，修改一下里面的内容，把公告的内容删掉，改成了下面这个样子 12345.card-widget.card-aplayer .card-content .item-headline i.fa.fa-music(aria-hidden&#x3D;&quot;true&quot;) span&#x3D; _p(&#39;Music&#39;) 接着，就要开始调用Aplayer了，按照官方的做法，我们要调用一个js和一个css文件，这里我保存了一份副本，并且修改了一下css，把进度条和循环按钮隐藏了，上传到github，通过jsdelivr调用 因为我们是内嵌一个html网页，所以我们这里要先用html写法写完，然后转成pug 12345htmlbody link(rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GamerNoTitle&#x2F;Picture-repo-v1@master&#x2F;css&#x2F;APlayer.min.css&quot;) &#x2F;&#x2F;- 引用修改的CSS #aplayer &#x2F;&#x2F;- 相当于&lt;div&gt; script(src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GamerNoTitle&#x2F;Picture-repo-v1@master&#x2F;js&#x2F;APlayer.min.js&quot;) &#x2F;&#x2F;- 引用js文件 然后我们要给aplayer一些我们要放的音乐的信息，这里的写法是用&lt;script&gt;&lt;/script&gt;来赋值，至于怎么写请看官方文档，写好后记得转换成pug，下面我放出我的例子 12345678910111213script. const ap &#x3D; new APlayer(&#123; container: document.getElementById(&#39;aplayer&#39;), audio: [&#123; name: &#39;world.execute (me) ;&#39;, artist: &#39;Mili&#39;, url: &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GamerNoTitle&#x2F;Picture-repo-v1@world.execute(me)&#x2F;audio&#x2F;Mili%20-%20world.execute%20(me)%20;.mp3&#39;, cover: &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GamerNoTitle&#x2F;Picture-repo-v1@world.execute(me)&#x2F;img&#x2F;Album&#x2F;Miracle Milk.jpg&#39;, theme: &quot;#8e8cd8&quot;, lrc: &quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GamerNoTitle&#x2F;Picture-repo-v1@Github-Basic&#x2F;lrc&#x2F;world.execute (me) %3B.txt&quot; &#125;] &#125;); 通过const给Aplayer一些信息，让它能够播放我们的音乐 接着打开layout/includes/widget/index.pug在你认为合适的地方添加（注意缩进） 12if theme.aside.card_aplayer include ..&#x2F;addons&#x2F;card_aplayer.pug 然后我们打开butterfly.yml，在aside的侧边栏显示设置里面添加 123card_webinfo: true# 上面是原来就有的card_aplayer: true # 添加个开关，可以控制打开关闭 然后就可以啦！ 预设文档使用首先先下载预设文档，放到主题目录下的layout/includes/addons文件夹内（如果不存在请自己创建） 打开文件，修改里面的变量，关于变量请查看官方文档 修改完后保存，打开layout/includes/widget/index.pug，在你认为合适的位置加上以下内容（注意缩进） 12if theme.aside.card_aplayer include ..&#x2F;addons&#x2F;card_aplayer.pug 打开butterfly.yml，在aside的侧边栏设置加入以下内容 123card_webinfo: true# 上面是原来就有的card_aplayer: true # 添加个开关，可以控制打开关闭 然后保存即可！ 网易云音乐官方部件法 我们先打开网易云的一首歌，点击生成外联播放器，要求是这首歌不需要VIP进行下载，否则会二话不说给你弹出下面这个窗 正常情况下，会给你打开外联播放器的生成页面，在下面选择合适的参数，其中宽度我稍微试了一下，推荐为230，太小会观感体验不好，太大会直接超出框，设定好宽度我们就复制代码（宽度也可以直接在width=后面进行修改哦） ↑我这里选择的音乐 然后我们复制一份butterfly/layout/includes/widget文件夹里面的card_announcement.pug文件（主要是因为公告是最好进行修改的东西了） ，改名为card_music.pug，把里面改成以下内容 123456.card-widget.music .card-content .item-headline i.fa.fa-music(aria-hidden&#x3D;&quot;true&quot;) span&#x3D; _p(&#39;Music&#39;) | 然后在|那一行，把你刚刚获得的网易云链接放进去（保留前面的|） 然后保存，接着我们打开同目录下的index.pug 在里面你认为合适的位置加上以下内容 12if theme.aside.card_music include .&#x2F;card_music.pug 如果你不需要开关可以不加if判断 接着打开butterfly.yml文件，在aside设置中加上一行 1card_music: true 如果想关掉的时候设置成false即可 这样我们就成功把网易云的音乐加入自己的侧边小部件了！ 不定期更新","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"Valine-Admin博客评论邮件提醒系统部署","slug":"Valine-Admin","date":"2020-03-14T13:47:10.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/03/14/Valine-Admin/","link":"","permalink":"https://coralare.com/2020/03/14/Valine-Admin/","excerpt":"","text":"PS本篇内容为博主以前已经完成的事件的记录，并非完成后立即写的文章 前提本篇内容以已经成功部署Valine作为评论系统为前提，如果还未部署，请参考官方文档 本网站一直在使用Valine作为评论系统，之前一直在想：wordpress里面的评论有邮件提醒功能，Valine能不能实现这种功能呢？于是我就到Google去搜索，然后发现了Valine-Admin这个项目 首先我们打开我们的Leancloud，进入我们的应用（我这里使用的是国际版，至于为什么选用国际版，有那么一丁点的原因的） 如图，点击云引擎-设置，然后将Valine-Admin的HTTPS仓库链接贴进去，链接如下：https://github.com/DesertsP/Valine-Admin.git 请注意，不要使用SSH链接，会因为没有权限而部署失败！ 部署完后，我们需要按照教程配置我们的环境变量 下面是必填项（从官方教程搬过来的表格）： 变量 示例 说明 SITE_NAME Deserts [必填]博客名称 SITE_URL https://panjunwen.com [必填]首页地址 SMTP_SERVICE QQ [新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 更多 SMTP_USER xxxxxx@qq.com [必填]SMTP登录用户 SMTP_PASS ccxxxxxxxxch [必填]SMTP登录密码（QQ邮箱需要获取独立密码） SENDER_NAME Deserts [必填]发件人 SENDER_EMAIL xxxxxx@qq.com [必填]发件邮箱 ADMIN_URL https://xxx.leanapp.cn/ [建议]Web主机二级域名，用于自动唤醒 BLOGGER_EMAIL xxxxx@gmail.com [可选]博主通知收件地址，默认使用SENDER_EMAIL AKISMET_KEY xxxxxxxxxxxx [可选]Akismet Key 用于垃圾评论检测，设为MANUAL_REVIEW开启人工审核，留空不使用反垃圾 变量设置完成后，需要到下面Web主机域名框填写自己的后台管理面板的域名 填写完后我们输入自己填写的域名就可以进入后台界面了，第一次进入会要求创建账户 如果直接是登录界面请先删除_User表中的所有数据！！！ 登录界面应该长这样 云引擎的其他相关配置我在这里不多说，可以去看官方教程，另外，关于博主的通知邮件，我在Rainbow模板上修改了一点，效果是这样的 1&lt;div style=&quot;border-radius: 10px 10px 10px 10px;font-size:13px; color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;&gt;&lt;div style=&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;&gt;&lt;p style=&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;&gt;您的&lt;a style=&quot;text-decoration:none;color: #ffffff;&quot; href=&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125;&lt;/a&gt;上有新的留言：&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;margin:40px auto;width:90%&quot;&gt;&lt;p&gt;$&#123;NICK&#125; 给您的留言如下：&lt;/p&gt;&lt;div style=&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;$&#123;COMMENT&#125;&lt;/div&gt;&lt;p&gt;您可以点击&lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;$&#123;POST_URL&#125;#comments&quot;&gt;查看回复的完整內容&lt;/a&gt;，欢迎再次光临&lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125;&lt;/a&gt;。&lt;/p&gt;&lt;style type=&quot;text/css&quot;&gt;a:link&#123;text-decoration:none&#125;a:visited&#123;text-decoration:none&#125;a:hover&#123;text-decoration:none&#125;a:active&#123;text-decoration:none&#125;&lt;/style&gt;&lt;/div&gt;&lt;/div&gt; 而给用户的模板，使用的是官方的Rainbow模板 1&lt;div style=&quot;border-radius: 10px 10px 10px 10px;font-size:13px; color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;&gt;&lt;div style=&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;&gt;&lt;p style=&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;&gt;您在&lt;a style=&quot;text-decoration:none;color: #ffffff;&quot; href=&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125;&lt;/a&gt;上的留言有新回复啦！&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;margin:40px auto;width:90%&quot;&gt;&lt;p&gt;$&#123;PARENT_NICK&#125; 同学，您曾在文章上发表评论：&lt;/p&gt;&lt;div style=&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;$&#123;PARENT_COMMENT&#125;&lt;/div&gt;&lt;p&gt;$&#123;NICK&#125; 给您的回复如下：&lt;/p&gt;&lt;div style=&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;$&#123;COMMENT&#125;&lt;/div&gt;&lt;p&gt;您可以点击&lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;$&#123;POST_URL&#125;#comments&quot;&gt;查看回复的完整內容&lt;/a&gt;，欢迎再次光临&lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125;&lt;/a&gt;。&lt;/p&gt;&lt;style type=&quot;text/css&quot;&gt;a:link&#123;text-decoration:none&#125;a:visited&#123;text-decoration:none&#125;a:hover&#123;text-decoration:none&#125;a:active&#123;text-decoration:none&#125;&lt;/style&gt;&lt;/div&gt;&lt;/div&gt; 邮件提醒的坑如果要使用邮件通知，不需要在你的网站配置中把Notify这一项设定为true，否则只会按照设置中重置密码的模板发送而不会使用在变量中设置的模板，并且云引擎也不会发送邮件；顺带可以把verify调整为false来避免出现Valine的反人类评论验证 根据教程配置完相关的变量和管理面板后，邮件就会自动发送了！ 更改了邮件模板，博主模板更换为以下内容（请注意替换里面的名字），来自@Dreamy.TZK 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150&lt;head&gt; &lt;base target=&quot;_blank&quot; /&gt; &lt;style type=&quot;text/css&quot;&gt; ::-webkit-scrollbar &#123; display: none; &#125; &lt;/style&gt; &lt;style id=&quot;cloudAttachStyle&quot; type=&quot;text/css&quot;&gt; #divNeteaseBigAttach, #divNeteaseBigAttach_bak &#123; display: none; &#125; &lt;/style&gt; &lt;style id=&quot;blockquoteStyle&quot; type=&quot;text/css&quot;&gt; blockquote &#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body tabindex=&quot;0&quot; role=&quot;listitem&quot;&gt; &lt;div id=&quot;content&quot;&gt; &lt;div style=&quot;background: white; width: 95%; max-width: 800px; margin: auto auto; border-radius: 5px; border:orange 1px solid; overflow: hidden; -webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12); box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);&quot;&gt; &lt;header style=&quot;overflow: hidden;&quot;&gt; &lt;img style=&quot;width:100%;z-index: 666;&quot; src=&quot;https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg&quot; /&gt; &lt;/header&gt; &lt;div style=&quot;padding: 5px 20px;&quot;&gt; &lt;p style=&quot;position: relative; color: white; float: left; z-index: 999; background: orange; padding: 5px 30px; margin: -25px auto 0 ; box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.30)&quot;&gt; Dear&amp;nbsp;GamerNoTitle &lt;/p&gt; &lt;br /&gt; &lt;center&gt; &lt;h3&gt; 来自&lt;span style=&quot;text-decoration: none;color: orange &quot;&gt;$&#123;NICK&#125;&lt;/span&gt;发表评论 &lt;/h3&gt; &lt;/center&gt; &lt;br /&gt; &amp;nbsp; &amp;nbsp; &lt;p&gt; Ta在&lt;a style=&quot;text-decoration: none;color: orange &quot; target=&quot;_blank&quot; href=&quot;https://bili33.top&quot;&gt;$&#123;SITE_NAME&#125;&lt;/a&gt;上发表的评论： &lt;/p&gt; &amp;nbsp; &amp;nbsp; &lt;center style=&quot;border-bottom:#ddd 1px solid;border-left:#ddd 1px solid;padding-bottom:20px;background-color:#eee;margin:15px 0px;padding-left:20px;padding-right:20px;border-top:#ddd 1px solid;border-right:#ddd 1px solid;padding-top:20px&quot;&gt; $&#123;COMMENT&#125; &lt;/center&gt; &amp;nbsp; &amp;nbsp; &lt;br /&gt; &lt;div style=&quot;text-align: center;margin-top: 40px;&quot;&gt; &lt;img src=&quot;https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png&quot; alt=&quot;hr&quot; style=&quot;width:100%; margin:5px auto 5px auto; display: block;&quot; /&gt; &lt;a style=&quot;text-transform: uppercase; text-decoration: none; font-size: 14px; border: 2px solid #6c7575; color: #2f3333; padding: 10px; display: inline-block; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; margin: 10px auto 0; &quot; target=&quot;_blank&quot; href=&quot;https://bili33.top&quot;&gt;$&#123;SITE_NAME&#125;｜传送！Biu~&lt;/a&gt; &lt;/div&gt; &amp;nbsp; &amp;nbsp; &lt;p style=&quot;font-size: 12px;text-align: center;color: #999;&quot;&gt; 欢迎常来做客哦！&lt;br /&gt; © 2020 &lt;a style=&quot;text-decoration:none; color:orange&quot; href=&quot;https://bili33.top&quot;&gt; $&#123;SITE_NAME&#125; &lt;/a&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; var _c = document.getElementById(&quot;content&quot;); _c.innerHTML = (_c.innerHTML || &quot;&quot;) .replace(/(href|formAction|onclick|javascript)/gi, &quot;__$1&quot;) .replace(/&lt;\\/?marquee&gt;/gi, &quot;&quot;); &lt;/script&gt; &lt;style type=&quot;text/css&quot;&gt; body &#123; font-size: 14px; font-family: arial, verdana, sans-serif; line-height: 1.666; padding: 0; margin: 0; overflow: auto; white-space: normal; word-wrap: break-word; min-height: 100px; &#125; td, input, button, select, body &#123; font-family: Helvetica, &quot;Microsoft Yahei&quot;, verdana; &#125; pre &#123; white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; width: 95%; &#125; th, td &#123; font-family: arial, verdana, sans-serif; line-height: 1.666; &#125; img &#123; border: 0; &#125; header, footer, section, aside, article, nav, hgroup, figure, figcaption &#123; display: block; &#125; blockquote &#123; margin-right: 0px; &#125; &lt;/style&gt; &lt;style id=&quot;ntes_link_color&quot; type=&quot;text/css&quot;&gt; a, td a &#123; color: #236da1; &#125; &lt;/style&gt;&lt;/body&gt; 给用户的模板替换为 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171&lt;head&gt; &lt;base target=&quot;_blank&quot; /&gt; &lt;style type=&quot;text/css&quot;&gt; ::-webkit-scrollbar &#123; display: none; &#125; &lt;/style&gt; &lt;style id=&quot;cloudAttachStyle&quot; type=&quot;text/css&quot;&gt; #divNeteaseBigAttach, #divNeteaseBigAttach_bak &#123; display: none; &#125; &lt;/style&gt; &lt;style id=&quot;blockquoteStyle&quot; type=&quot;text/css&quot;&gt; blockquote &#123; display: none; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body tabindex=&quot;0&quot; role=&quot;listitem&quot;&gt; &lt;div id=&quot;content&quot;&gt; &lt;div style=&quot;background: white; width: 95%; max-width: 800px; margin: auto auto; border-radius: 5px; border:orange 1px solid; overflow: hidden; -webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12); box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);&quot;&gt; &lt;header style=&quot;overflow: hidden;&quot;&gt; &lt;img style=&quot;width:100%;z-index: 666;&quot; src=&quot;https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg&quot; /&gt; &lt;/header&gt; &lt;div style=&quot;padding: 5px 20px;&quot;&gt; &lt;p style=&quot;position: relative; color: white; float: left; z-index: 999; background: orange; padding: 5px 30px; margin: -25px auto 0 ; box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.30)&quot;&gt; Dear&amp;nbsp;$&#123;PARENT_NICK&#125; &lt;/p&gt; &lt;br /&gt; &lt;center&gt; &lt;h3&gt; 来自&lt;span style=&quot;text-decoration: none;color: orange &quot;&gt;$&#123;NICK&#125;&lt;/span&gt;的回复 &lt;/h3&gt; &lt;/center&gt; &lt;br /&gt; &amp;nbsp; &amp;nbsp; &lt;p&gt; $&#123;PARENT_NICK&#125;，您在&lt;a style=&quot;text-decoration: none;color: orange &quot; target=&quot;_blank&quot; href=&quot;$&#123;POST_URL&#125;#comments&quot;&gt;&amp;nbsp;$&#123;SITE_NAME&#125;&amp;nbsp;&lt;/a&gt;上曾发表的评论： &lt;/p&gt; &amp;nbsp; &amp;nbsp; &lt;center&gt; $&#123;PARENT_COMMENT&#125; &lt;/center&gt; &amp;nbsp; &amp;nbsp; &lt;p style=&quot; padding-bottom: 20px; &quot;&gt; &lt;span style=&quot;color: orange;&quot;&gt;$&#123;NICK&#125;&lt;/span&gt; 给您回复啦~~~： &lt;/p&gt; &lt;p&gt; &lt;center style=&quot;border-bottom:#ddd 1px solid;border-left:#ddd 1px solid;padding-bottom:20px;background-color:#eee;margin:15px 0px;padding-left:20px;padding-right:20px;border-top:#ddd 1px solid;border-right:#ddd 1px solid;padding-top:20px&quot;&gt; $&#123;COMMENT&#125; &lt;/center&gt; &lt;/p&gt; &lt;br /&gt; &lt;div style=&quot;text-align: center;margin-top: 40px;&quot;&gt; &lt;img src=&quot;https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png&quot; alt=&quot;hr&quot; style=&quot;width:100%; margin:5px auto 5px auto; display: block;&quot; /&gt; &lt;a style=&quot;text-transform: uppercase; text-decoration: none; font-size: 14px; border: 2px solid #6c7575; color: #2f3333; padding: 10px; display: inline-block; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; margin: 10px auto 0; &quot; target=&quot;_blank&quot; href=&quot;$&#123;POST_URL&#125;#comments&quot;&gt;$&#123;SITE_NAME&#125;｜传送！Biu~&lt;/a&gt; &lt;/div&gt; &amp;nbsp; &amp;nbsp; &lt;p style=&quot;font-size: 12px;text-align: center;color: #999;&quot; id=&quot;hitokoto&quot;&gt; 欢迎常来做客哦！&lt;/p&gt; &lt;p style=&quot;font-size: 12px;text-align: center;color: #999;&quot;&gt;© 2020 &lt;a style=&quot;text-decoration:none; color:orange&quot; href=&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125; &lt;/p&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; var _c = document.getElementById(&quot;content&quot;); _c.innerHTML = (_c.innerHTML || &quot;&quot;) .replace(/(href|formAction|onclick|javascript)/gi, &quot;__$1&quot;) .replace(/&lt;\\/?marquee&gt;/gi, &quot;&quot;); var xhr = new XMLHttpRequest(); xhr.open(&#x27;get&#x27;, &#x27;https://v1.hitokoto.cn/?c=e&amp;c=j&amp;c=k&#x27;); xhr.onreadystatechange = function () &#123; if (xhr.readyState === 4) &#123; var data = JSON.parse(xhr.responseText); var hitokoto = document.getElementById(&#x27;hitokoto&#x27;); hitokoto.innerText = data.hitokoto; &#125; &#125; xhr.send(); &lt;/script&gt; &lt;style type=&quot;text/css&quot;&gt; body &#123; font-size: 14px; font-family: arial, verdana, sans-serif; line-height: 1.666; padding: 0; margin: 0; overflow: auto; white-space: normal; word-wrap: break-word; min-height: 100px; &#125; td, input, button, select, body &#123; font-family: Helvetica, &quot;Microsoft Yahei&quot;, verdana; &#125; pre &#123; white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; width: 95%; &#125; th, td &#123; font-family: arial, verdana, sans-serif; line-height: 1.666; &#125; img &#123; border: 0; &#125; header, footer, section, aside, article, nav, hgroup, figure, figcaption &#123; display: block; &#125; blockquote &#123; margin-right: 0px; &#125; &lt;/style&gt; &lt;style id=&quot;ntes_link_color&quot; type=&quot;text/css&quot;&gt; a, td a &#123; color: #236da1; &#125; &lt;/style&gt; &lt;/body&gt; 因为原来的模板的变量写法不一样，而且变量也多了，我这里已经改成DesertP版本的了，不过博主的邮件模板里面注意修改没有使用变量的地方如GamerNoTitle哦 题外话最近着手于美化一下博客，想在右边加上一个像火喵那样的基于Gitalk的动态面板，顺带改一下友链界面 昨天已经上了强制HTTPS访问啦！就上不了CloudFlare的CDN了，不过没有减速CDN也会快的吧","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"日常吐槽05 - 【阿里云限时活动】免费领取6个月ESC服务器，到期前一个月还能免费续费多半年","slug":"diary5","date":"2020-03-08T12:23:09.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/03/08/diary5/","link":"","permalink":"https://coralare.com/2020/03/08/diary5/","excerpt":"","text":"活动网址：https://developer.aliyun.com/adc/student/ 近期，阿里云开启了白给活动，叫做阿里云高校学生“在家实践”计划，官方描述是这样的： 然后往下拉，可以看到这个活动分成5个部分： ①注册/登录 ②学生认证 ③完成测试 ④领取ECS学习资源 ⑤开始课程学习 其实这五部分就前面三个部分是需要我们进行的。注册和登录就不用多说了；学生认证：如果你是在校大学生，那么这个认证对你来说很轻松；如果你不是在校大学生，没关系！按照阿里云官方的说法，24岁以下都算学生。 事实证明还是要完成学生认证…… 然后麻烦的东西是测试，这个测试共有10道题目，每道题10分，具体说明如下： 学生成长计划领取资格考试 - 云计算及云服务器入门共10道题 限时10分钟知识点考察范围：云计算概念、云服务器ECS基础知识。学习《云计算的前世今生》（链接: https://developer.aliyun.com/course/1236）、《7天玩转云服务器》 (链接: https://developer.aliyun.com/course/70) 课程将有助于提升考试通过率。 答题开始即开始计时，中途不可暂停，如超时则自动提交1、考试共 (10) 道题，总分100分，及格分数60分2、考试需在（10分钟）内交卷，过程中无法暂停，请提前安排好时间；如未及时交卷，则本次考试作废3、推荐使用 Chrome 浏览器（版本：73及以上的正式版本），或Firefox浏览器（版本：66及以上的正式版本) 反正我做下来也挺简单的，拿了个80分，不会的可以去百度一下，10分钟10道题时间绝对够 然后回到页面，你就有资格领取服务器啦！建议早上八点蹲点领取哦~ 如果你是教师，你还可以通过教师认证，拿多一台服务器，岂不美哉？ 阿里云活动规则如下： 一、活动对象：国内全日制在校学生 二、符合以下条件用户可参与： 阿里云注册且个人实名认证用户完成学生认证完成学习课程并通过测试三、活动规则1. 全日制在校大学生，需同时完成阿里云个人实名认证、学生认证，且两者信息一致，认证通过后，完成学生计划的学习课程，并通过测试，同一用户可免费领取1台云服务器ECS（仅限当前未保有 ECS用户 ）和学习课程资源。2. 学生计划提供的云服务器ECS产品数额有限，每天8点开放固定领取名额 ，先到先得，领完即止。用户领取时应确认地域等相关选择信息，开通后不允许更改配置。3. 学生计划用户免费领取的云服务器ECS，有效期自领取日起6个月内有效。用户学生认证在有效期内且有效时长大于等于6个月的用户，云服务器ECS到期释放前30天内，可登录个人中心，参加阶段性学习考试，测试通过，可免费续期1次，时长为6个月，续费实例规格需跟领取时一致才可享受。使用过程中如需对领取产品进行升级，请按照标准费用进行升级。4. 如学生用户账号下存在正在使用的ECS产品或已通过云翼计划购买或未支付订单，会导致系统对用户领取资格的审核无法通过；在此情况下，用户ECS产品到期释放后、作废相应的未支付订单后，方可正常参与相应产品的领取。 5. 参与阿里云高校在家实践计划的学生用户，同一用户最多可保有2台云服务器ECS，指包括满足学生计划条件用户，领取的1台云服务器ECS（同一用户限领1台），和通过教师计划，满足实名认证和学生认证条件用户，获得教师提供兑换码，验证成功，领取的1台云服务器ECS（同一用户限领1台）。6. 参与阿里云高校在家实践计划的学生用户，通过教师提供兑换码，领取的云服务器ECS，仅用于教师指定课程学习使用，课程结束后，请及时保存相关数据并进行ECS资源释放。如需继续使用，请自行进行续费操作。7. 用户参与阿里云高校在家实践计划（含学生计划）所获得的相应权益，仅限本人使用，不得转让、出售或以其他方式换取利益。8. 为保证活动的公平公正，阿里云有权对恶意刷抢（如通过程序等技术手段）活动资源，长期资源闲置 ，利用资源从事违法违规行为的用户收回免费领取ECS使用资格。9. 如用户在活动中存在隐瞒、虚构、作弊、欺诈或通过其他非正常手段规避活动规则、获取不当利益的行为，例如：作弊领取、恶意套现、网络攻击、虚假交易等，阿里云有权收回相关权益、取消用户的活动参与资格，撤销违规交易，必要时追究违规用户的法律责任。10. 活动名称仅为方便用户理解参考使用，不具有效力，实际活动内容以具体活动规则为准。四、名词及解释1. “阿里云官网”，是指包含域名为www.aliyun.com的网站以及阿里云客户端，如APP，但阿里云国际站，包括alibabacloud.com以及所有下属页面和jp.aliyun.com以及所有下属页面除外。2. “同一用户”，是指根据不同阿里云账号在注册、登录、使用中的关联信息，阿里云判断其实际为同一用户。关联信息包括但不限于同一证件号、同一手机号、同一支付账号、同一设备、同一地址等。3. “同人账号”，是指同一用户拥有多个阿里云账号的，各个账号之间互为同人账号。4. “指定云产品”，是指某场具体活动列举的云产品（如上文所提ECS）。5. 除非有相反证据证明外，用户参与活动所获得的全部权益和相应责任，均归属于参与活动的该阿里云账号所对应的实名认证主体。6. 阿里云可以根据活动的实际情况对活动规则进行变动或调整，相关变动或调整将公布在活动页面上，并于公布时即时生效；但不影响用户在活动规则调整前已经获得的权益。 不说了，我要去白嫖了！","categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"}]},{"title":"Windows10美化笔记","slug":"Windows10-Beautify","date":"2020-03-06T02:42:33.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/03/06/Windows10-Beautify/","link":"","permalink":"https://coralare.com/2020/03/06/Windows10-Beautify/","excerpt":"","text":"这几天在折腾Win10的美化，本来是想在某美化网站上下载主题包来美化的（这里有两个美化主题包需要自取 主题① | 主题②），但是实在是太麻烦了（具体怎么麻烦我把教程放出来你们感受一下），于是我决定自己来…… 最后效果如图↓ 第一步：寻找壁纸壁纸这个问题，当然是要去P站啦（当然是Pixiv啦，在想什么啦） 因为是美化向，所以壁纸的风格建议是不要太辣眼睛。这里的辣眼睛是指颜色不要太多，色差不要太大，我这里找的图是一张颜色集中在蓝色的图片，地址在这里https://www.pixiv.net/artworks/79898339（图片太大，一张图15.2MB，就不放原图了） 像下面这两张图这样的，第一张太亮，第二章色彩太繁杂的我是真的不推荐，当然你喜欢那我也没什么说的嘛 原图地址：https://www.pixiv.net/artworks/79925515 原图地址：https://www.pixiv.net/artworks/79923171 如果有人执意使用过量的图片的话，我这里有个建议，可以到PS里面把图片的亮度拉低一点，这样子不会看起来那么亮眼。 第二步：安装插件这里我安装的插件有以下几个： 1、小黄条TODO 2、雨滴桌面 3、TranslucentTB 丨 汉化版 丨 Github（汉化）（微软商店有，可以自己去微软商店里面搜索） 第一个是一个ToDo的列表，就是我左上角的那个Todo列表，有点类似便签，免费版绝对够个人使用，付费也就是多了云端存储而已 第二个相信不用多说，桌面小挂件，雨滴桌面非常好用 第三个是任务栏透明，可以调整各种参数，例如窗口最大化后任务栏的外观等等，微软商店有，如果上面的链接打不开就去微软商店里面搜索 第三步：放置图标如果真的要美化，相信微软自带的自动排列图标只是一个累赘，所以我们要把它关掉，然后把图标放在自己喜欢的位置。我的建议是把图标放在壁纸偏暗的地方或者是色块比较均匀的地方，没有太多的颜色变化的地方。放好了以后，各种应用的图标摆在一起，风格也不统一，我们就需要使用图标包来替换。 这里我使用的是Pure轻雨图标包，在酷安上有手机版，电脑的这一套是我从网上找的，但是我没法发出来（蓝奏云的限制太烦了），所以还是请你们自己去网上找吧，当然你也可以使用其他的图标包。右击桌面上的快捷方式，选到属性，然后选更改图标，选到自己的图标点确定即可 把自己的应用图标更改好，放在自己喜欢的位置，就完成了图标的管理工作 第四步：配置雨滴雨滴的小挂件就是它的亮点，我们需要配置一下自己的小挂件。我这里分享一些小挂件，需要的同学可以自己拿 传送门 一开始雨滴的那些黑色的挂件太丑了，我们可以右键它选择关闭皮肤来删除掉它 皮肤共有两种安装方式：如果你拿到的是后缀名为.rmskin的，恭喜你，这是安装最简单的皮肤，直接双击安装即可！但是如果你拿到的是一个文件夹，别担心。你可以访问目录 C:\\Users\\%USERNAME%\\Documents\\Rainmeter\\Skins，将自己的皮肤拖入；或者直接右击托盘里面的雨滴，选到皮肤，打开皮肤目录，也可以打开这个文件夹。拖入后右击托盘中的雨滴，点击管理，然后点击左下角的刷新全部就可以载入皮肤了！ 然后就右击托盘里面的雨滴图标，选择皮肤，再选择自己的皮肤包里面的所需挂件，点击就可以加入到桌面上了 将挂件拖动到合适的位置，你就完成自己的美化啦！ 我的皮肤配置：Live 4 Music\\In Out Live 4 Music\\DIgital Circles Live 4 Music\\Cpu Ram Simple Clean\\音乐频谱 系统信息Bars_II_by_Rasylver\\Bars II\\WIFI 系统信息Bars_II_by_Rasylver\\Bars II\\RAM 系统信息Bars_II_by_Rasylver\\Bars II\\CPU 这些皮肤在我发的文件里面都有，链接在上面，需要的可以自己取用。 题外话：二月就过去了，学校还没开学，上网课感觉不是很在状态…… 下周土命2就开新赛季了，本赛季等级120，下赛季冲个35就好了 想玩VR……","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"Netease-Comment-Spider 网易云音乐热评爬虫使用手册","slug":"Netease-Comment-Spider","date":"2020-02-17T09:35:16.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/02/17/Netease-Comment-Spider/","link":"","permalink":"https://coralare.com/2020/02/17/Netease-Comment-Spider/","excerpt":"","text":"今天有人申请适配网易云音乐热评的api，反正也没啥事干，就做一个吧！ 如果你想看使用手册，那么请你直接往下拉跳过制作过程 观前提示：可以点击左下角点开导航栏阅读，项目地址：https://github.com/GamerNoTitle/Netease-Comment-Spider 制作过程本程序是调用的https://www.mouse123.cn/api/163/api.php这个api，会返回很多数据，下面是一个返回的例子 1&#123;&quot;song_id&quot;:&quot;118&quot;,&quot;title&quot;:&quot;Wolves&quot;,&quot;images&quot;:&quot;https:\\/\\/p1.music.126.net\\/-nQ2E-8ZjuwGtMipBTYzBw==\\/17902248323721194.jpg&quot;,&quot;author&quot;:&quot;Selena Gomez&quot;,&quot;album&quot;:&quot;Wolves&quot;,&quot;description&quot;:&quot;\\u6b4c\\u624b\\uff1aSelena Gomez\\u3002\\u6240\\u5c5e\\u4e13\\u8f91\\uff1aWolves\\u3002&quot;,&quot;pub_date&quot;:&quot;2017-10-24 16:00:00&quot;,&quot;comment_id&quot;:&quot;1510&quot;,&quot;comment_user_id&quot;:&quot;333845131&quot;,&quot;comment_nickname&quot;:&quot;Stroyberry&quot;,&quot;comment_avatar_url&quot;:&quot;https:\\/\\/p2.music.126.net\\/D7Z2xViXVpB7xH3m5NxDIw==\\/109951164448917887.jpg&quot;,&quot;comment_content&quot;:&quot;\\ud83d\\udc95\\u5bf9\\u65b0\\u6b4c\\u6709\\u8bf4\\u4e0d\\u51fa\\u7684\\u611f\\u89c9\\uff0csel\\u7684\\u58f0\\u97f3\\u8f7b\\u5feb\\u5374\\u53c8\\u5f88\\u968f\\u6027\\uff0c\\u50cf\\u662f\\u8ffd\\u72fc\\u5374\\u53c8\\u9a7e\\u9a6d\\u7740\\uff0c\\u5b8c\\u7f8e\\u7684future bass\\u8ba9\\u4f60\\u65e0\\u6cd5\\u81ea\\u62d4\\u554a\\uff01sel\\u548c\\u68c9\\u82b1\\u7cd6\\u8fd9\\u6837\\u795e\\u7ea7\\u7684\\u78b0\\u649e\\ud83d\\udca5\\u8ba9\\u4eba\\u7a92\\u606f\\uff01\\u5feb\\u5e26\\u4e0a\\u8033\\u673a\\ud83c\\udfa7\\uff01\\u95ed\\u4e0a\\u773c\\u775b\\uff01\\u4e00\\u8d77\\u7a7f\\u68ad\\u4e8e\\u4e1b\\u6797\\u4e4b\\u4e2d\\ud83d\\ude0f&quot;,&quot;comment_pub_date&quot;:&quot;2017-10-26 22:23:26&quot;&#125; 这个返回的数据看上去很复杂，但是分析一下，返回的还是json格式，那么这个东西的解析就跟一言的那个项目是一样的，根据上面的信息，我把config.json的可选配置分成了以下几个 1234567891011121314&#123; &quot;path&quot;: &quot;Netease.csv&quot;, &quot;times&quot;: 100, &quot;delay&quot;: 0, &quot;timeout&quot;: 60, &quot;song_id&quot;: false, &quot;images&quot;: false, &quot;album&quot;: false, &quot;description&quot;: false, &quot;pub_date&quot;: false, &quot;comment_user_id&quot;: false, &quot;comment_avatar_url&quot;: false, &quot;comment_pub_date&quot;: false&#125; path为文件输出的路径，文件以csv格式输出，请务必带文件后缀！ times为抓取次数，支持大于0的整数，直接输入数字即可！ delay表示抓取一次得到结果以后等待的时长，为了不给api提供商造成太大的服务器负担，我强烈建议设置此项，填入大于等于0的整数即可，单位是秒 timeout表示连接超时时长，支持大于5的整数 song_id为歌曲的id，如果开启将把歌曲id写入csv文档，只支持true或false images表示是否抓取图片，这是专辑封面，将保存到&quot;.\\albums&quot;文件夹并命名为对应的评论ID，只支持true或false album表示歌曲来源专辑，如果开启将把专辑名写入csv文件，只支持true或false description表示歌曲的描述，如果开启将把描述写入csv文件，只支持true或false pub_date表示歌曲发行的时间，如果开启将把时间写入csv文档，格式为YYYY-MM-DD HH:MM:SS，只支持true或false comment_user_id表示评论的用户的id，如果开启将把id写入csv文档，只支持true或false comment_avatar_url表示评论用户的头像，如果开启将把头像存瑞.\\avatars文件夹并命名为对应的评论ID，只支持true或false comment_pub_date表示评论发布的时间，如果开启将把时间写入csv文档，格式为YYYY-MM-DD HH:MM:SS，只支持true或false 搞定可选配置以后，把一言的那个项目拿过来当模板，然后把变量名称往里面套，很快就做好了一个程序。但是这个api返回的数据还是有些不一样的，其中就返回了专辑封面的URL、评论用户的头像URL，这两个URL可以让我们获取到相应的图片 另外，这个api返回的编码格式是Unicode，与一言直接返回中文不一样，我本来想做一个Unicode直接转成gbk保存的功能，但是最后只能以UTF8保存（有能做出相应功能的大佬欢迎提交PR） 我使用了requests直接获取图片的二进制码，然后将其写入一个文件来达到保存功能，具体实现方式如下： 12345678910if(conf[&#x27;images&#x27;]): print(&quot;正在保存专辑封面……&quot;) image = r.get(data[&#x27;images&#x27;]).content with open(&#x27;./images/&#x27; + data[&#x27;comment_id&#x27;] + &#x27;.jpg&#x27;, &#x27;wb&#x27;) as f: f.write(image)if(conf[&#x27;comment_avatar_url&#x27;]): print(&quot;正在保存评论用户头像……&quot;) image = r.get(data[&#x27;comment_avatar_url&#x27;]).content with open(&#x27;./avatars/&#x27; + data[&#x27;comment_id&#x27;] + &#x27;.jpg&#x27;, &#x27;wb&#x27;) as f: f.write(image) 这样就可以保存图片了，但是对应的文件夹不能够删除，否则会出现找不到文件的BUG~ 使用手册基本功能基本功能就有从api获取对应的信息，并将其存入csv文件，固定有的信息是comment_id、comment_username、title、author、comment_content这几个信息，另外可选的在config.json中进行修改 输出的csv文件目前是以UTF8的编码保存的，如果想要在Excel中查看，你需要使用vscode之类的文本编辑器更改保存的编码方式为gbk才能够在Excel中查看，否则会乱码 可选配置克隆了代码以后，在目录下有一个config.json文件，在config.json文件可以对选项进行启用 1234567891011121314&#123; &quot;path&quot;: &quot;Netease.csv&quot;, &quot;times&quot;: 100, &quot;delay&quot;: 0, &quot;timeout&quot;: 60, &quot;song_id&quot;: false, &quot;images&quot;: false, &quot;album&quot;: false, &quot;description&quot;: false, &quot;pub_date&quot;: false, &quot;comment_user_id&quot;: false, &quot;comment_avatar_url&quot;: false, &quot;comment_pub_date&quot;: false&#125; path为文件输出的路径，文件以csv格式输出，请务必带文件后缀！ times为抓取次数，支持大于0的整数，直接输入数字即可！ delay表示抓取一次得到结果以后等待的时长，为了不给api提供商造成太大的服务器负担，我强烈建议设置此项，填入大于等于0的整数即可，单位是秒 timeout表示连接超时时长，支持大于5的整数 song_id为歌曲的id，如果开启将把歌曲id写入csv文档，只支持true或false images表示是否抓取图片，这是专辑封面，将保存到&quot;.\\albums&quot;文件夹并命名为对应的评论ID，只支持true或false album表示歌曲来源专辑，如果开启将把专辑名写入csv文件，只支持true或false description表示歌曲的描述，如果开启将把描述写入csv文件，只支持true或false pub_date表示歌曲发行的时间，如果开启将把时间写入csv文档，格式为YYYY-MM-DD HH:MM:SS，只支持true或false comment_user_id表示评论的用户的id，如果开启将把id写入csv文档，只支持true或false comment_avatar_url表示评论用户的头像，如果开启将把头像存瑞.\\avatars文件夹并命名为对应的评论ID，只支持true或false comment_pub_date表示评论发布的时间，如果开启将把时间写入csv文档，格式为YYYY-MM-DD HH:MM:SS，只支持true或false 上面这些参数根据自己的需要进行设置即可！需要注意的是如果开启了images和comment_avatar_url选项那么不能够删除avatars和images文件夹，否则会报错！！！ Q &amp; AQ: [Errno 2] No such file or directory如果你在使用本程序的时候出现了以下错误： 12345Traceback (most recent call last): File &quot;main.py&quot;, line 107, in &lt;module&gt; with open(&#x27;images/&#x27; + data[&#x27;comment_id&#x27;] + &#x27;.jpg&#x27;, &#x27;wb&#x27;) as f:FileNotFoundError: [Errno 2] No such file or directory: &#x27;images/xxx.jpg&#x27; # 此处xxx应为某一个数字 A: 请你检查是否删除了avatars文件夹或images文件夹！ Q: KeyboardInterrupt如果你在使用本程序的时候出现了以下错误： 1234567891011121314151617181920212223242526Traceback (most recent call last): File &quot;main.py&quot;, line 50, in &lt;module&gt; res = r.get(&quot;https://www.mouse123.cn/api/163/api.php&quot;,timeout=timeout) # 调用api File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\api.py&quot;, line 75, in get return request(&#x27;get&#x27;, url, params=params, **kwargs) File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\api.py&quot;, line 60, in request return session.request(method=method, url=url, **kwargs) File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\sessions.py&quot;, line 533, in request resp = self.send(prep, **send_kwargs) File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\sessions.py&quot;, line 646, in send r = adapter.send(request, **kwargs) File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\adapters.py&quot;, line 439, in send resp = conn.urlopen( File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py&quot;, line 665, in urlopen httplib_response = self._make_request( File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py&quot;, line 376, in _make_request self._validate_conn(conn) File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py&quot;, line 994, in _validate_conn conn.connect() File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connection.py&quot;, line 300, in connect conn = self._new_conn() File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connection.py&quot;, line 156, in _new_conn conn = connection.create_connection( File &quot;C:\\Users\\bili33\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\util\\connection.py&quot;, line 74, in create_connection sock.connect(sa)KeyboardInterrupt A: 请你检查在程序运行的过程中是否有键盘的操作，例如Ctrl+C之类的操作！ Q: requests.exceptions.SSLError123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354Traceback (most recent call last): File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\contrib\\pyopenssl.py&quot;, line 453, in wrap_socket cnx.do_handshake() File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\OpenSSL\\SSL.py&quot;, line 1915, in do_handshake self._raise_ssl_error(self._ssl, result) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\OpenSSL\\SSL.py&quot;, line 1639, in _raise_ssl_error raise SysCallError(errno, errorcode.get(errno))OpenSSL.SSL.SysCallError: (10060, &#x27;WSAETIMEDOUT&#x27;)During handling of the above exception, another exception occurred:Traceback (most recent call last): File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\connectionpool.py&quot;, line 600, in urlopen chunked=chunked) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\connectionpool.py&quot;, line 343, in _make_request self._validate_conn(conn) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\connectionpool.py&quot;, line 839, in _validate_conn conn.connect() File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\connection.py&quot;, line 344, in connect ssl_context=context) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\util\\ssl_.py&quot;, line 344, in ssl_wrap_socket return context.wrap_socket(sock, server_hostname=server_hostname) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\contrib\\pyopenssl.py&quot;, line 459, in wrap_socket raise ssl.SSLError(&#x27;bad handshake: %r&#x27; % e)ssl.SSLError: (&quot;bad handshake: SysCallError(10060, &#x27;WSAETIMEDOUT&#x27;)&quot;,)During handling of the above exception, another exception occurred:Traceback (most recent call last): File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\requests\\adapters.py&quot;, line 449, in send timeout=timeout File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\connectionpool.py&quot;, line 638, in urlopen _stacktrace=sys.exc_info()[2]) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\urllib3\\util\\retry.py&quot;, line 398, in increment raise MaxRetryError(_pool, url, error or ResponseError(cause))urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host=&#x27;p2.music.126.net&#x27;, port=443): Max retries exceeded with url: /gxo54B2ypqq0Y6tmahBnIw==/109951163596240238.jpg (Caused by SSLError(SSLError(&quot;bad handshake: SysCallError(10060, &#x27;WSAETIMEDOUT&#x27;)&quot;)))During handling of the above exception, another exception occurred:Traceback (most recent call last): File &quot;main.py&quot;, line 77, in &lt;module&gt; image = r.get(data[&#x27;images&#x27;]).content File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\requests\\api.py&quot;, line 75, in get return request(&#x27;get&#x27;, url, params=params, **kwargs) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\requests\\api.py&quot;, line 60, in request return session.request(method=method, url=url, **kwargs) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\requests\\sessions.py&quot;, line 533, in request resp = self.send(prep, **send_kwargs) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\requests\\sessions.py&quot;, line 646, in send r = adapter.send(request, **kwargs) File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\requests\\adapters.py&quot;, line 514, in send raise SSLError(e, request=request)requests.exceptions.SSLError: HTTPSConnectionPool(host=&#x27;p2.music.126.net&#x27;, port=443): Max retries exceeded with url: /gxo54B2ypqq0Y6tmahBnIw==/109951163596240238.jpg (Caused by SSLError(SSLError(&quot;bad handshake: SysCallError(10060, &#x27;WSAETIMEDOUT&#x27;)&quot;))) 这种情况是握手失败导致的，请检查网络连接！ 欢迎提交PR！","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"Hitokoto-Spider 一言库爬虫开发日记","slug":"Hitokoto-Spider","date":"2020-02-11T06:17:37.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/02/11/Hitokoto-Spider/","link":"","permalink":"https://coralare.com/2020/02/11/Hitokoto-Spider/","excerpt":"","text":"最近在家里虽然有上课（学校开学了），但是中午两个半小时的休息时间以及晚上的自由时间是真的闲，在想要干什么……然后我在我的学弟的电脑桌面上发现了八爪鱼，想起了他用八爪鱼抓一言库的时候，我就在想：为什么我不自己做一个抓一言的爬虫呢？说干就干，于是我就开始坐了起来…… 下面，是我的个人开发日记，包含回忆，有些细节可能记得不是很清楚 项目地址：https://github.com/GamerNoTitle/Hitokoto-Spider 2020年2月10日 星期一 天气：不很好今天是学校开学第一天，钉钉的会议功能真的菜，视频延迟3秒钟，互动板延迟3分钟……而且这个会议可以回看不能下载？？？拿fiddler抓包去…… （12:00）开始做爬虫了，先到一言去看看API是怎么用的先。在官网，可以看到下面这个表格（为了方便，我直接把源码拿过来了） 时间 影响Api 调整 2018年6月之前 旧版API（http://api.hitokoto.cn和https://sslapi.hitokoto.cn） 旧版API将在6月份之前以切换解析的方式合并到v1API中。也就意味着调整之后请求此API无异于请求v1API。调整后此接口的稳定性将不再受到维护。 2018年7月之前 v1API（https://v1.hitokoto.cn） v1API将发布最终版本。v1接口将会在未来存在较长时间（即使v2发布，请放心使用）。 v2 发布（时间未知） v2API（域名未知） 上线v2API。 这个是一言的几个api的地址，我选择的就是用的https://v1.hitokoto.cn 拿到了api，我要看看访问出来的效果是怎么样的，于是我又访问了这个地址，获得了一大串文本 123456789101112&#123; &quot;id&quot;: 79, //一言的ID &quot;hitokoto&quot;: &quot;所以，他们的祭典还没结束。&quot;, //一言内容 &quot;type&quot;: &quot;a&quot;, //类型，具体可在官网查阅，这里a是Anime即动漫 &quot;from&quot;: &quot;我的青春恋爱物语果然有问题&quot;, //一言出处 &quot;from_who&quot;: null, //谁说的话 &quot;creator&quot;: &quot;阿布碳。&quot;, //提交此条目的用户 &quot;creator_uid&quot;: 0, //用户的uid，可以不看 &quot;reviewer&quot;: 0, &quot;uuid&quot;: &quot;f6aa4116-5a0f-4ab0-807a-bf3838a5fd23&quot;, //用户的uuid，可以不看 &quot;created_at&quot;: &quot;1468605909&quot; //何时创建，这里是以时间戳的方式展示&#125; 我看着：这玩意怎么格式这么像json呢？？？ 直到我往下拉，发现： 这塔喵不就是json嘛……（上面的注释是我加入的） 搞清楚了返回出来的结果的组成后，我们就可以开始撸代码了！ 打开VSCode，新建一个文件夹，在这个文件夹里面进行修改 首先确定我需要用什么来模拟http请求，因为我自己用过@Dawnnnnnn/bilibili-live-tools这个项目，而且在用这个项目的时候，特别是在学校的服务器上面挂，那个Windows Server 2016 DataCenter装个requests运行库都难，所以我特别记得requests这个库可以模拟http请求，先装上再说！ 于是我在powershell内打了 1$ pip install requests 来安装我的requests运行库，接着，在我的python文件内打入 1import requests as r 因为本人比较懒，所以喜欢把运行库简写，加入了as r我就可以不用打那么多字母了，真的方便 接着，要先搞清楚requests库的用法，于是乎我又去查了一下，查到这几个函数 123456requests.get(‘https://github.com/timeline.json’) # GET请求requests.post(“http://httpbin.org/post”) # POST请求requests.put(“http://httpbin.org/put”) # PUT请求requests.delete(“http://httpbin.org/delete”) # DELETE请求requests.head(“http://httpbin.org/get”) # HEAD请求requests.options(“http://httpbin.org/get” ) # OPTIONS请求 那么我要获得结果，采用了GET请求，然后在我的项目中打入了 1res = r.get(&#x27;https://international.v1.hitokoto.cn/&#x27;) 这样就可以把获得的结果赋给res，然后通过调用res的值来获得我们想要的结果，接着运行一次我们的文件 123import requests as rres = r.get(&#x27;https://v1.hitokoto.cn/&#x27;)print(res) 然后返回的值为：&lt;Response [200]&gt; 这不是状态码嘛？？？我不要这玩意儿啊，我要结果。。。 然后我就commit了一下，盖上我的垃圾Lenovo，然后去睡觉了…… 2020年2月11日 星期二 天气：还是不很好今天继续开发，昨天拿到的结果是个状态码，然后我又有思路了！ 我就在print中动一下手脚，给被打印的res加上一个参数，然后代码就变成了 123import requests as rres = r.get(&#x27;https://v1.hitokoto.cn/&#x27;)print(res.text) 接着就给我输出了我想要的东西嘿嘿 这个项目本来想跟学弟@Soulxyz一起做的，然后我就先把这个雏形push到了仓库里面，他也fork了，然后回来给我的是一个叫做csvdomo.py（点击可下载）的文件（我寻思你是不是想打csvdemo？？？） 我打开了，然后发现：你这不是并发获取10次都是一个结果吗？？？你这不重新获取不是每次都一样的吗？？？ 于是我决定放弃他这里，我自己来弄这个项目……后来他告诉我，用一言的国际节点可以有更高的QPS，然后我就转用国际节点了…… 接着下一步是要重复抓取，对于这一部分，我想到的是让用户输入要抓取的次数，类型为int，命名为num，然后采用for循环重复抓取，就写了下面的这一段 1234print(&quot;请输入抓取的数量，如果要抓取全部请到https://hitokoto.cn/status查看现在的一言总数并填入：&quot;)num=input()for i in range(num): res = r.get(&#x27;https://v1.hitokoto.cn/&#x27;) 这样子来实现重复抓取的功能，至于为什么如果要抓取全部还要输入，因为那个数字我是真的拿不到啊…… 终于实现了抓取的功能，接下来要实现写入文件的功能 我的想法是写入csv文件，因为我自己在华南理工学习的时候就用过相关的函数，所以我就去搜索了一下，结果发现python原生支持csv，不需要用到pandas，所以我就调用了自带的csv库 （要上课了，先撤了） （16:30）我回来了！现在就是要搞定写入csv库的问题，我在网上找到了相关的方法： 先打开一个文件，然后把这个文件设定为file变量，然后def两个函数，一个创建，一个写入，就像下面这个亚子： 123456789101112import csvdef create_csv(path): with open(path,&quot;w+&quot;,newline=&quot;&quot;,encoding=&quot;utf8&quot;) as file: # 打开文件，也相当于一个回车，避免覆盖文档 csv_file = csv.writer(file) head = [&quot;id&quot;,&quot;sort&quot;,&quot;hitokoto&quot;] # 创建csv表头 csv_file.writerow(head)def append_csv(path): with open(path,&quot;a+&quot;,newline=&#x27;&#x27;,encoding=&quot;utf8&quot;) as file: csv_file = csv.writer(file) data = [inputs] csv_file.writerows(data) 这样我就定义了两个函数，然后在下面直接用这个函数就好了 再加上上面写过让用户填入输出路径和爬取次数的相关代码，直接把变量拿过来用就好了 1234print(&quot;请输入文件输出名（请自行输入后缀，文件以csv的方式保存）：&quot;)path=input() # 输出文件print(&quot;请输入抓取的数量，如果要抓取全部请到https://hitokoto.cn/status查看现在的一言总数并填入：&quot;)num=int(input()) # 抓取数量 将path用于文件的路径，将num用于下面的抓取次数，完美！ 然后在下面，将抓取到的数据排版一下 1234567891011data=res.json()if data[&quot;type&quot;]== &quot;a&quot;: sorts=(&quot;Anime&quot;) # 自动把分类码还原为分类if data[&quot;type&quot;]== &quot;b&quot;: sorts=(&quot;Comic&quot;)if data[&quot;type&quot;]== &quot;c&quot;: sorts=(&quot;Game&quot;)if data[&quot;type&quot;]== &quot;d&quot;: sorts=(&quot;Novel&quot;)if data[&quot;type&quot;]== &quot;e&quot;: sorts=(&quot;Myself&quot;)if data[&quot;type&quot;]== &quot;f&quot;: sorts=(&quot;Internet&quot;)if data[&quot;type&quot;]== &quot;g&quot;: sorts=(&quot;Other&quot;)inputs=[data[&quot;id&quot;],sorts,data[&quot;hitokoto&quot;]]# print(res.text) # 输出一言，如需要把最前面的#去掉即可append_csv(path) 这样就完成了写入操作！写入csv的操作搞定了以后，最后剩下除掉重复的结果，不然会有很多同样的话，这是最麻烦的部分…… 开始我的想法是：每次获取到一个结果以后，将id存入存入一个存储变量叫做ids，开始先初始化 1ids=[] 这样将ids初始化为一个空列表，然后往这个空列表里面加入id，每次遍历一次ids里面的id是否与获取到的id相同，如果相同则说明获取到了重复的话，将这个结果舍弃，然后重新获取 将我的重复剔除的功能写出来，就像这样（从之前的commit弄出来的） 123456789101112131415161718192021222324ids=[&#x27;0&#x27;]i=1for i in range(num): res = r.get(&#x27;https://international.v1.hitokoto.cn/&#x27;,timeout=60) # 得到服务器回应，此时回应的内容为json文件（res.text）和状态码 data=res.json() # 将获取到的结果转为json字符串 t=1 for t in range(i): if data[&quot;id&quot;]==ids[t]: # ID已经存在，即已经抓到过，这地方可能会报BUG，目前没修（数组越限BUG） break else: t=t+1 # 自增 if t==i: ids.append(data[&quot;id&quot;]) if data[&quot;type&quot;]== &quot;a&quot;: sorts=(&quot;Anime&quot;) # 自动把分类码还原为分类 if data[&quot;type&quot;]== &quot;b&quot;: sorts=(&quot;Comic&quot;) if data[&quot;type&quot;]== &quot;c&quot;: sorts=(&quot;Game&quot;) if data[&quot;type&quot;]== &quot;d&quot;: sorts=(&quot;Novel&quot;) if data[&quot;type&quot;]== &quot;e&quot;: sorts=(&quot;Myself&quot;) if data[&quot;type&quot;]== &quot;f&quot;: sorts=(&quot;Internet&quot;) if data[&quot;type&quot;]== &quot;g&quot;: sorts=(&quot;Other&quot;) temp=[data[&quot;id&quot;],sorts,data[&quot;hitokoto&quot;]] print(res.text) append_csv(path) 接着就会发现，运行着运行着，告诉我数组越限了？！！！ 这个问题就真的很烦，因为C++是允许数组越限的，但是python不允许，会直接冷不丁给你报错，所以每次遇到这个问题我都不是很想去理它，但是不理它我的程序就运行不下去了啊！！！所以我先把检测重复这一段注释掉了，合上垃圾Lenovo，睡觉！ 2020年2月12日 星期三 天气：下雨了啊！今天早上上课上到11点20分，开始写代码，用一中午想把这个重复检测的功能写完…… 想到昨天的数组越限就头疼，我打算放弃这个方法，不存列表了！ 我记得当时在华工有用过像array[t]这样的东西，于是我想起了一个利器——array数组！ 新的思路是这样的：将得到的数据存入数组名为temp，开始先初始化这个变量： 12from array import arraytemp = array[&#x27;i&#x27;,[0]] 至于我为什么在里面写一个0，是因为我发现我不这么做的话他会给我报错…… 这样就初始化了一个名为temp类型为int的数组，里面含有一个元素0。然后在下面每次获取完id以后就将其存入temp变量 1temp.append(data[&quot;id&quot;]) 通过这样，每次再遍历temp里面的东西，只要重复，就说明抓过，没重复就说明没抓过，就可以达到去掉重复的效果！ 123456789101112131415161718192021222324252627282930313233343536373839404142434445for i in range(num): time.sleep(delay) print(&quot;正在获取新的一言……&quot;) res = r.get(&#x27;https://international.v1.hitokoto.cn/&#x27;,timeout=60) # 得到服务器回应，此时回应的内容为json文件（res.text）和状态码 data=res.json() # 将获取到的结果转为json字符串 temp_minus=temp.count-1 if temp_minus!=0: t=1 print(&quot;正在检测是否抓取过结果……&quot;) for t in range(temp.count): if(int(data[&quot;id&quot;])==temp[t]): print(&quot;发现已经抓取到的结果，正在丢弃……&quot;) i=i-1 break elif(t==temp.count-1): print(&quot;未抓取过的结果，正在存入文件……&quot;) if data[&quot;type&quot;]== &quot;a&quot;: sorts=(&quot;Anime&quot;) # 自动把分类码还原为分类 if data[&quot;type&quot;]== &quot;b&quot;: sorts=(&quot;Comic&quot;) if data[&quot;type&quot;]== &quot;c&quot;: sorts=(&quot;Game&quot;) if data[&quot;type&quot;]== &quot;d&quot;: sorts=(&quot;Novel&quot;) if data[&quot;type&quot;]== &quot;e&quot;: sorts=(&quot;Myself&quot;) if data[&quot;type&quot;]== &quot;f&quot;: sorts=(&quot;Internet&quot;) if data[&quot;type&quot;]== &quot;g&quot;: sorts=(&quot;Other&quot;) inputs=[data[&quot;id&quot;],sorts,data[&quot;hitokoto&quot;]] # print(res.text) # 输出一言，如需要把最前面的#去掉即可 append_csv(path) temp.append(data[&quot;id&quot;]) end_Pro=datetime.datetime.now() print(&quot;已完成数量：&quot;+str(i+1)+&#x27;，已经用时：&#x27;+str(end_Pro-start_Pro)) break else: if data[&quot;type&quot;]== &quot;a&quot;: sorts=(&quot;Anime&quot;) # 自动把分类码还原为分类 if data[&quot;type&quot;]== &quot;b&quot;: sorts=(&quot;Comic&quot;) if data[&quot;type&quot;]== &quot;c&quot;: sorts=(&quot;Game&quot;) if data[&quot;type&quot;]== &quot;d&quot;: sorts=(&quot;Novel&quot;) if data[&quot;type&quot;]== &quot;e&quot;: sorts=(&quot;Myself&quot;) if data[&quot;type&quot;]== &quot;f&quot;: sorts=(&quot;Internet&quot;) if data[&quot;type&quot;]== &quot;g&quot;: sorts=(&quot;Other&quot;) inputs=[data[&quot;id&quot;],sorts,data[&quot;hitokoto&quot;]] # print(res.text) # 输出一言，如需要把最前面的#去掉即可 append_csv(path) temp.append(data[&quot;id&quot;]) end_Pro=datetime.datetime.now() print(&quot;已完成数量：&quot;+str(i+1)+&#x27;，已经用时：&#x27;+str(end_Pro-start_Pro)) 最后写出来的效果是这样子的，然后问题又出来了，我的temp.count似乎不能被它正确识别出来，于是我打开了一个新的文档，测试一下这个玩意输出长什么样子： emmmm，这是啥？？？ 然后我又去求助万能的百度，网友们告诉我可以用len(temp)来获得数组的元素个数，然后我就把这玩意改了，终于可以运行了！！！接着问题又来了。。。 这是？？？这怎么不连续啊，这数字？？？我想到可能是抓到重复的时候算抓了，就导致了i+1（不过这次测试挺非的，这么多次一样。。。非到极致也是一种欧！） 后来我试试加一个i=i-1在相应位置，结果还是不行，我就想到可能是局部变量改不动？？？ 我就自己定义一个变量，用while循环呗……然后我就改用while循环 这下终于可以了，抓到的结果没有抓到重复的（因为中途连接超时导致程序停止运行了，所以只抓了2159条，本来是想把整个一言库抓完的，点我下载2159条数据，请用UTF8解码后保存为gbk才能在Excel上查看哦） 终于搞定啦！！！这个项目终于能够按照期望运行了！ 接下来要解决的问题： json配置文件支持 GUI支持 题外话：这是我第一次做爬虫，把学到的python技术用出来。项目已经上传到https://github.com/GamerNoTitle/Hitokoto-Spider 有人愿意与我一起做项目我也非常开心，希望大家能够活用此项目，不要再用什么八爪鱼抓一言了，那种要VIP的软件对我们这种程序员来说一点也不友好，还不如自己来…… 2020年2月16日 星期日 天气：还是下雨天……今天晚上，我对爬虫进行了优化，之前我上面就说过要提供json配置文件的支持，今天的目标就是这个！走起！ 首先，要新建一个json文件，里面包含的参数如下： 12345678910&#123; &quot;path&quot;: &quot;Hitokoto.csv&quot;, //文件输出路径 &quot;times&quot;: 3, // 抓取次数 &quot;delay&quot;: 0, // 抓取延迟，针对一言的QPS设置 &quot;timeout&quot;: 60, // 连接超时时间（单位：秒） &quot;from&quot;: false, // 来自什么作品 &quot;from_who&quot;: false, // 来自谁 &quot;creator&quot;: false, // 哪位用户提交的 &quot;created_at&quot;: false // 何时提交&#125; 其中，文件输出路径是str变量，抓取次数、抓取延迟、抓取超时都是int变量，from、from_who、creator、created_at都是bool型变量，这就表示它只支持true和false 搞定config文件的内容后，反过来对代码进行添加，定义一个读取json文件的函数，命名为read_config() 1234def read_config(): with open(&quot;config.json&quot;) as json_file: config = js.load(json_file) return config 这样，我使用conf = read_config()就可以获得文件中的所有内容，文件读出来的结果应该是这样的（如图） 把程序再美化一下，运行后发现，出了BUG KeyError？？？WTF？？？你不是能正常读入的呢嘛？这又是个什么鬼错误…… 上网搜索说是读不到相关的东西，不在字典中，我就想在上面提前置顶from_who的值，但是一言返回的结果里面的东西我也修改不了啊……所以还是要解决KeyError的问题 上网一搜，全部都是用dict导致的问题。我寻思：我怎么也没有操作字典吧。。。 算了，先上传吧，明天再修复from_who的BUG…… 我的友人表示想建立一个一言的镜像站，所以要求我把其他的参数给加上，我先加吧…… 尴尬……又出现了KeyError的问题，这次是creator_uid和reviewer，算了明天弄吧……睡觉！ 2020年2月17日 星期一 天气：晴天今天早上起来，换了台电脑，还是有keyerror的错误，然后去问了一下大学导师，他告诉我是data里面没有这个key的项的问题，然后我又倒回去看发现，上面提到的三个数值有些结果是没有使用双引号括起来的，基本都写的null或者是0，这样就导致data里面没有这个key，进而导致keyerror 所以我是打算用try和except这两个东西进行解决。 在代码里稍作修改，加入try和except 123if(conf[&quot;from_who&quot;] == True): try: inputs.append(data[&quot;from_who&quot;]) except KeyError: inputs.append(&quot;null&quot;) 在会报KeyError错误的地方都进行这样的修改，然后进行调试 终于可以啦！！！推送代码，项目完成！ 接下来就是要加入GUI支持了，但是我其实不是很会做GUI，所以说别抱太大希望，很有可能鸽掉……","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"Onedrive分享型网盘搭建 - FODI","slug":"FODI","date":"2020-02-09T01:58:43.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/02/09/FODI/","link":"","permalink":"https://coralare.com/2020/02/09/FODI/","excerpt":"","text":"本人有两个onedrive账号，一个自用，另外一个是前几天蹭的edu账号，之前一直想用onedrive来分享文件（毕竟容量是真的大），就在放寒假前，我发现了github的一个项目：FODI，虽说这UI不是很好看，但是不用服务器（嗯，让白嫖党有点快乐了），所以就动起了手…… 官方教程：https://logi.im/front-end/scf-fodi.html 当我正在按照官方教程搭建的时候，在获取refresh_token这一步，它居然给我报错了？？？ 官方教程中，是要求进入此网址进行登录后，把第一个?删掉，把第一个&amp;改成?，然后就给我弹出以下错误： 1234567891011Message&#123; &quot;error&quot;: &quot;invalid_grant&quot;, &quot;error_description&quot;: &quot;AADSTS54005: OAuth2 Authorization code was already redeemed, please retry with a new valid code or use an existing refresh token.\\r\\nTrace ID: b0425d60-48d1-4006-aec5-76d97732cd00\\r\\nCorrelation ID: 0d390346-7cfa-4284-9518-67444dca1511\\r\\nTimestamp: 2020-02-09 02:08:21Z&quot;, &quot;error_codes&quot;: [ 54005 ], &quot;timestamp&quot;: &quot;2020-02-09 02:08:21Z&quot;, &quot;trace_id&quot;: &quot;b0425d60-48d1-4006-aec5-76d97732cd00&quot;, &quot;correlation_id&quot;: &quot;0d390346-7cfa-4284-9518-67444dca1511&quot;&#125; 我的内心是崩溃的……好了不干了！ 回归正题，干还是要干的，要么握着5T的onedrive没意思是吧…… 然后我在Github又发现了一个新的项目——OneManager 打算部署这个玩意，这时候就有人问了：诶不是，你这标题不是写的FODI？怎么变成OneManager了？ 别急，这玩意自然有它利用的价值 点击这个紫色的按钮，就会进入heroku的部署界面（啥？你说你不会用？那没事了），将此项目部署后进行安装，会要求输入heroku的api和管理员密码，这些就按要求填写就好了 接着就到了比较重要的一步：获取refresh_token（没错你知道我要干嘛了） 第一步安装的时候选择MS（中国版选择CN，如果你喜欢搞事情，你也可以选择MSC自己申请api，我就是懒，就不自己申请api了） 然后登陆自己的微软账户，接着就会弹出自己的refresh_token，这不就搞定了refresh_token啦？！ 如果你没有及时复制你自己的refresh_token，你也可以到你自己heroku项目的变量下复制 接着我们返回FODI，将自己的refresh_token贴近官方给的模板的对应位置，接着将代码复制到cloudflare的workers里面（你又问我workers是什么？看这里啦！），然后保存即可！ 官方模板： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200/** * IS_CN: 如果为世纪互联版本，请将 0 改为 1 * EXPOSE_PATH：暴露路径，如全盘展示请留空，否则按 &#x27;/媒体/音乐&#x27; 的格式填写 * ONEDRIVE_REFRESHTOKEN: refresh_token */const IS_CN = 0;const EXPOSE_PATH = &quot;&quot;const ONEDRIVE_REFRESHTOKEN = &quot;&quot;async function handleRequest(request) &#123; let requestPath let querySplited let queryString = request.url.split(&#x27;?&#x27;)[1] if (queryString) &#123; querySplited = queryString.split(&#x27;=&#x27;) &#125; if (querySplited &amp;&amp; querySplited[0] === &#x27;file&#x27;) &#123; const file = querySplited[1] const fileName = file.split(&#x27;/&#x27;).pop(); requestPath = file.replace(&#x27;/&#x27; + fileName, &#x27;&#x27;) const url = await fetchFiles(requestPath, fileName) return Response.redirect(url, 302) &#125; else &#123; const &#123; headers &#125; = request const contentType = headers.get(&#x27;content-type&#x27;) let body=&#123;&#125; if (contentType &amp;&amp; contentType.includes(&#x27;form&#x27;)) &#123; const formData = await request.formData() for (let entry of formData.entries()) &#123; body[entry[0]] = entry[1] &#125; &#125; requestPath = body ? body[&#x27;?path&#x27;] : &#x27;&#x27;; const files = await fetchFiles(requestPath, null, body.passwd); return new Response(files, &#123; headers: &#123; &#x27;content-type&#x27;: &#x27;application/json; charset=utf-8&#x27;, &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27; &#125; &#125;) &#125;&#125;addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; return event.respondWith(handleRequest(event.request))&#125;)const clientId = [ &#x27;4da3e7f2-bf6d-467c-aaf0-578078f0bf7c&#x27;, &#x27;04c3ca0b-8d07-4773-85ad-98b037d25631&#x27;]const clientSecret = [ &#x27;7/+ykq2xkfx:.DWjacuIRojIaaWL0QI6&#x27;, &#x27;h8@B7kFVOmj0+8HKBWeNTgl@pU/z4yLB&#x27;]const oauthHost = [ &#x27;https://login.microsoftonline.com&#x27;, &#x27;https://login.partner.microsoftonline.cn&#x27;]const apiHost = [ &#x27;https://graph.microsoft.com&#x27;, &#x27;https://microsoftgraph.chinacloudapi.cn&#x27;]const OAUTH = &#123; &#x27;redirectUri&#x27;: &#x27;https://scfonedrive.github.io&#x27;, &#x27;refreshToken&#x27;: ONEDRIVE_REFRESHTOKEN, &#x27;clientId&#x27;: clientId[IS_CN], &#x27;clientSecret&#x27;: clientSecret[IS_CN], &#x27;oauthUrl&#x27;: oauthHost[IS_CN] + &#x27;/common/oauth2/v2.0/&#x27;, &#x27;apiUrl&#x27;: apiHost[IS_CN] + &#x27;/v1.0/me/drive/root&#x27;, &#x27;scope&#x27;: apiHost[IS_CN] + &#x27;/Files.ReadWrite.All offline_access&#x27;&#125;async function gatherResponse(response) &#123; const &#123; headers &#125; = response const contentType = headers.get(&#x27;content-type&#x27;) if (contentType.includes(&#x27;application/json&#x27;)) &#123; return await response.json() &#125; else if (contentType.includes(&#x27;application/text&#x27;)) &#123; return await response.text() &#125; else if (contentType.includes(&#x27;text/html&#x27;)) &#123; return await response.text() &#125; else &#123; return await response.text() &#125;&#125;async function getContent(url) &#123; const response = await fetch(url) const result = await gatherResponse(response) return result&#125;async function getContentWithHeaders(url, headers) &#123; const response = await fetch(url, &#123; headers: headers &#125;) const result = await gatherResponse(response) return result&#125;async function fetchFormData(url, data) &#123; const formdata = new FormData(); for (const key in data) &#123; if (data.hasOwnProperty(key)) &#123; formdata.append(key, data[key]) &#125; &#125; const requestOptions = &#123; method: &#x27;POST&#x27;, body: formdata &#125;; const response = await fetch(url, requestOptions) const result = await gatherResponse(response) return result&#125;async function fetchAccessToken() &#123; url = OAUTH[&#x27;oauthUrl&#x27;] + &#x27;token&#x27; data = &#123; &#x27;client_id&#x27;: OAUTH[&#x27;clientId&#x27;], &#x27;client_secret&#x27;: OAUTH[&#x27;clientSecret&#x27;], &#x27;grant_type&#x27;: &#x27;refresh_token&#x27;, &#x27;requested_token_use&#x27;: &#x27;on_behalf_of&#x27;, &#x27;refresh_token&#x27;: OAUTH[&#x27;refreshToken&#x27;] &#125; const result = await fetchFormData(url, data) return result.access_token&#125;async function fetchFiles(path, fileName, passwd) &#123; if (!path || path === &#x27;/&#x27;) &#123; if (EXPOSE_PATH === &#x27;&#x27;) &#123; path = &#x27;&#x27; &#125; else &#123; path = &#x27;:&#x27; + EXPOSE_PATH &#125; &#125; else &#123; if (EXPOSE_PATH === &#x27;&#x27;) &#123; path = &#x27;:&#x27; + path &#125; else &#123; path = &#x27;:&#x27; + EXPOSE_PATH + path &#125; &#125; const accessToken = await fetchAccessToken() const uri = OAUTH.apiUrl + encodeURI(path) + &#x27;?expand=children(select=name,size,parentReference,lastModifiedDateTime,@microsoft.graph.downloadUrl)&#x27; const body = await getContentWithHeaders(uri, &#123; Authorization: &#x27;Bearer &#x27; + accessToken &#125;) if (fileName) &#123; let thisFile = null body.children.forEach(file =&gt; &#123; if (file.name === decodeURIComponent(fileName)) &#123; thisFile = file[&#x27;@microsoft.graph.downloadUrl&#x27;] return &#125; &#125;) return thisFile &#125; else &#123; let files = [] let encrypted = false for (let i = 0; i &lt; body.children.length; i++) &#123; const file = body.children[i] if (file.name === &#x27;.password&#x27;) &#123; const PASSWD = await getContent(file[&#x27;@microsoft.graph.downloadUrl&#x27;]) if (PASSWD !== passwd) &#123; encrypted = true; break &#125; else &#123; continue &#125; &#125; files.push(&#123; name: file.name, size: file.size, time: file.lastModifiedDateTime, url: file[&#x27;@microsoft.graph.downloadUrl&#x27;] &#125;) &#125; let parent if (body.children.length) &#123; parent = body.children[0].parentReference.path &#125; else &#123; parent = body.parentReference.path &#125; parent = parent.split(&#x27;:&#x27;).pop().replace(EXPOSE_PATH, &#x27;&#x27;) || &#x27;/&#x27; parent = decodeURIComponent(parent) if (encrypted) &#123; return JSON.stringify(&#123; parent: parent, files: [], encrypted: true &#125;) &#125; else &#123; return JSON.stringify(&#123; parent: parent, files: files &#125;) &#125; &#125;&#125; 接着，我们打开官方给的html文件，将自己的workers链接贴到对应的位置，部署到github即可！ html文件备份：（可以直接复制）lt;!DOCTYPE html&gt;&lt;head&gt; &lt;script&gt; /** * SCF_GATEWAY：SCF 云函数网关地址 * SITE_NAME：站点名称 */ window.GLOBAL_CONFIG = &#123; SCF_GATEWAY: &quot;&quot;, SITE_NAME: &quot;FODI&quot;, IS_CF: true &#125;; if (window.GLOBAL_CONFIG.SCF_GATEWAY.indexOf(&#x27;workers&#x27;) === -1) &#123; window.GLOBAL_CONFIG.SCF_GATEWAY += &#x27;/fodi/&#x27;; window.GLOBAL_CONFIG.IS_CF = false; &#125; // if (location.protocol === &#x27;http:&#x27;) &#123; // location.href = location.href.replace(/http/, &#x27;https&#x27;); // &#125; &lt;/script&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt; &lt;script src=&quot;//s0.pstatp.com/cdn/expire-1-M/ionicons/4.5.6/ionicons.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;//s0.pstatp.com/cdn/expire-1-M/marked/0.6.2/marked.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;//s0.pstatp.com/cdn/expire-1-M/highlight.js/9.15.6/highlight.min.js&quot;&gt;&lt;/script&gt; &lt;link href=&quot;//s0.pstatp.com/cdn/expire-1-M/highlight.js/9.15.6/styles/github.min.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;link href=&quot;//s0.pstatp.com/cdn/expire-1-M/github-markdown-css/3.0.1/github-markdown.min.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;script src=&quot;//s0.pstatp.com/cdn/expire-1-M/jquery/3.4.0/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;//s0.pstatp.com/cdn/expire-1-M/fancybox/3.5.7/jquery.fancybox.min.js&quot;&gt;&lt;/script&gt; &lt;link href=&quot;//s0.pstatp.com/cdn/expire-1-M/fancybox/3.5.7/jquery.fancybox.min.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;style&gt; .password-wrapper &#123; display: flex; align-items: center; &#125; .password &#123; margin: 0 auto; padding-top: 1em; display: none; &#125; .password input &#123; height: 2em; outline: none; border: solid rgb(218, 215, 215) 1px; &#125; .password button &#123; background: white; height: 2em; outline: none; border: solid rgb(218, 215, 215) 1px; &#125; .password button:hover &#123; color: white; background: rgb(218, 215, 215); &#125; pre * &#123; font-family: Courier New; &#125; .preview &#123; display: none; font-size: .8em; &#125; .content &#123; clear: both; padding: 0 1em; margin: 0 auto; text-align: center; &#125; .file-name &#123; line-height: 1em; padding: 1em 1em 0; text-align: center; white-space: nowrap; overflow: hidden; &#125; .btn &#123; float: right; text-align: center; border: solid rgb(218, 215, 215) 1px; border-radius: 1em; margin: 1em .2em; width: 4em; height: 2em; line-height: 2em; user-select: none; -moz-user-select: none; -o-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -ms-user-select: none; &#125; .btn:hover &#123; color: white; background: rgb(218, 215, 215); &#125; .btn.download &#123; margin-right: 1em; &#125; #arrow-back, #arrow-forward &#123; color: rgb(218, 215, 215); &#125; .loading-wrapper &#123; display: none; position: fixed; height: 2em; line-height: 2em; margin-top: .5em; width: 100%; z-index: 1; &#125; .loading &#123; color: white; background: rgb(218, 215, 215); height: 100%; width: 8em; margin: 0 auto; text-align: center; border-radius: 1em; &#125; ion-icon &#123; font-size: 1.5em; &#125; * &#123; box-sizing: border-box; font-family: serif; &#125; .markdown-body &#123; min-width: 200px; margin: 0 auto; padding: .7em 1em; font-size: .8em; &#125; .markdown-body h1, h2, h3, h4, h5, h6 &#123; margin-top: 0; &#125; .markdown-body img &#123; max-width: 90%; max-height: 800px; width: auto; height: auto; display: block; margin: 0 auto; &#125; body &#123; width: 100%; height: 100%; margin: 0; padding: 0; &#125; .header-wrapper &#123; position: fixed; height: 3em; width: 100%; -moz-user-select: none; -o-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -ms-user-select: none; user-select: none; &#125; .header &#123; padding: 0 1.8em 0 1em; height: 100%; display: flex; align-items: center; border-bottom: solid rgb(218, 215, 215) 1px; &#125; .logo &#123; margin-right: .3em; &#125; .site &#123; white-space: nowrap; /* margin-left: auto; padding-left: 2em; */ &#125; .nav &#123; width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; &#125; .nav-path, .nav-arr &#123; font-size: 1em; height: 1.5em; margin-right: .3em; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; cursor: default; &#125; #main-page:hover, .nav-path:hover, .tree-node:hover, .row.file-wrapper:hover &#123; color: rgb(90, 101, 133); cursor: pointer; &#125; .container &#123; position: fixed; width: 100%; height: calc(100% - 3em); margin-top: 3em; &#125; .main &#123; position: relative; height: 100%; width: 100%; &#125; .left &#123; position: absolute; display: inline-grid; width: 20%; height: 100%; font-size: .8em; overflow: scroll; &#125; .tree-node-wrapper &#123; margin-left: 1.5em; &#125; .tree-node &#123; display: flex; align-items: center; &#125; .tree-node-name &#123; margin-left: .3em; white-space: nowrap; &#125; .right &#123; position: absolute; width: 80%; height: 100%; margin-left: 20%; overflow: scroll; &#125; .row &#123; height: 2.5em; padding: 0 .8em 0 1em; display: flex; align-items: center; border-bottom: solid rgb(218, 215, 215) 1px; &#125; .row.file-wrapper &#123; font-size: .8em; padding: 0 1em; height: 2em; &#125; .file &#123; width: 100%; display: flex; align-items: center; &#125; .name &#123; display: flex; align-items: center; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; width: 70%; padding-left: .3em; &#125; .list-header .name &#123; width: calc(70% + 1.1em); padding-left: 0; &#125; .time &#123; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; text-align: right; ; width: 133px; &#125; .size &#123; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; margin-left: auto; &#125; @media screen and (max-width: 1000px) &#123; .left &#123; display: none; &#125; .right &#123; width: 100%; margin-left: initial; &#125; &#125; @media screen and (max-width: 800px) &#123; .name &#123; width: 60%; &#125; .list-header .name &#123; width: calc(60% + 1.1em); &#125; .file-name &#123; overflow-x: scroll; height: 100%; &#125; &#125; @media screen and (max-width: 600px) &#123; .name &#123; width: 75%; &#125; .time &#123; display: none; &#125; .header &#123; padding: 0 .3em; &#125; .row &#123; padding: 0 .3em; &#125; .row.file-wrapper &#123; padding: 0 .3em; height: 3em; &#125; .markdown-body &#123; padding: .6em .3em; &#125; .file-name &#123; padding: 1em .3em 0; &#125; .content &#123; padding: 0 .3em; &#125; .btn.download &#123; margin-right: .3em; &#125; .logo &#123; width: 2em; height: 2em; &#125; &#125; &lt;/style&gt; &lt;script&gt; function createCORSRequest(method, url, timeout) &#123; let xhr = new XMLHttpRequest(); if (&#x27;withCredentials&#x27; in xhr) &#123; xhr.open(method, url, true); &#125; else if (typeof XDomainRequest !== &#x27;undefined&#x27;) &#123; xhr = new XDomainRequest(); xhr.open(method, url); &#125; else &#123; xhr = null; &#125; if (xhr) &#123; xhr.timeout = timeout; &#125; return xhr; &#125; function sendRequest(method, url, data, headers, callback, error, times) &#123; let xhr = createCORSRequest(method, url, 2500); xhr.onreadystatechange = () =&gt; &#123; if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) &#123; callback(xhr.responseText); &#125; &#125;; xhr.timeout = xhr.onerror = () =&gt; &#123; if (!times) &#123; times = 0; &#125; console.log(&#123; url: url, data: data, times: times &#125;) if (times &lt; 1) &#123; sendRequest(method, url, data, headers, callback, error, times + 1); &#125; else if (typeof error === &#x27;function&#x27;) &#123; error(); &#125; &#125; if (headers) &#123; for (key in headers) &#123; if (headers.hasOwnProperty(key)) &#123; xhr.setRequestHeader(key, headers[key]); &#125; &#125; &#125; if (data) &#123; xhr.send(data); &#125; else &#123; xhr.send(); &#125; &#125; function renderPage(data, cache) &#123; let files; if (data) &#123; files = JSON.parse(data); window.fileCache.set(files.parent, files); preCache(files, 0); &#125; else &#123; files = cache; &#125; if (files.parent === window.backFordwardCache.current) &#123; renderPath(files.parent); if (files.encrypted) &#123; handleEncryptedFolder(files); &#125; else &#123; renderFileList(files); &#125; renderTreeNode(files); &#125; if (document.body.getAttribute(&#x27;hidden&#x27;)) &#123; document.body.removeAttribute(&#x27;hidden&#x27;); &#125; document.querySelector(&#x27;.loading-wrapper&#x27;).style.display = &#x27;none&#x27;; &#125; function renderPath(path) &#123; const createPathSpan = (text, path) =&gt; &#123; let pathSpan = document.createElement(&#x27;span&#x27;); pathSpan.innerHTML = text.length &gt; 20 ? text.substring(0, 20) + &#x27;..&#x27; : text; pathSpan.className = text === &#x27;/&#x27; ? &#x27;nav-arr&#x27; : &#x27;nav-path&#x27;; if (path) &#123; addPathListener(pathSpan, path); &#125; return pathSpan; &#125;; const paths = path.split(&#x27;/&#x27;); let pathSpanWrapper = document.getElementById(&#x27;path&#x27;); pathSpanWrapper.innerHTML = &#x27;&#x27;; pathSpanWrapper.appendChild(createPathSpan(window.api.root)); let continualPath = &#x27;/&#x27;; for (let i = 1; i &lt; paths.length - 1; i++) &#123; continualPath += paths[i]; pathSpanWrapper.appendChild(createPathSpan(paths[i], continualPath)); pathSpanWrapper.appendChild(createPathSpan(&#x27;/&#x27;)); continualPath += &#x27;/&#x27;; &#125; pathSpanWrapper.appendChild(createPathSpan(paths[paths.length - 1])); &#125; function renderFileList(files) &#123; switchRightDisplay(); const createFileWrapper = (type, name, time, size, path, url) =&gt; &#123; let fileWrapper = document.getElementById(&#x27;file-wrapper-templete&#x27;).content.cloneNode(true); fileWrapper.querySelector(&#x27;ion-icon&#x27;).setAttribute(&#x27;name&#x27;, type); fileWrapper.querySelector(&#x27;.name&#x27;).innerHTML = name; fileWrapper.querySelector(&#x27;.time&#x27;).innerHTML = time; fileWrapper.querySelector(&#x27;.size&#x27;).innerHTML = size; addFileListLineListener(fileWrapper.querySelector(&#x27;.row.file-wrapper&#x27;), path, url, size); return fileWrapper; &#125;; const formatDate = date =&gt; &#123; const addZero = num =&gt; num &gt; 9 ? num : &#x27;0&#x27; + num; date = new Date(date); const year = date.getFullYear(); const month = addZero(date.getMonth() + 1); const day = addZero(date.getDate()); const hour = addZero(date.getHours()); const minute = addZero(date.getMinutes()); const second = addZero(date.getSeconds()); return &#x27;yyyy-MM-dd HH:mm:ss&#x27; .replace(&#x27;yyyy&#x27;, year) .replace(&#x27;MM&#x27;, month) .replace(&#x27;dd&#x27;, day) .replace(&#x27;HH&#x27;, hour) .replace(&#x27;mm&#x27;, minute) .replace(&#x27;ss&#x27;, second); &#125;; const formatSize = size =&gt; &#123; let count = 0; while (size &gt;= 1024) &#123; size /= 1024; count++; &#125; size = size.toFixed(2); switch (count) &#123; case 1: size += &#x27; KB&#x27;; break; case 2: size += &#x27; MB&#x27;; break; case 3: size += &#x27; GB&#x27;; break; case 4: size += &#x27; TB&#x27;; break; case 5: size += &#x27; PB&#x27;; break; default: size += &#x27; B&#x27;; &#125; return size; &#125;; let fileList = document.getElementById(&#x27;file-list&#x27;); fileList.innerHTML = &#x27;&#x27;; files.files.forEach(file =&gt; &#123; if (file.name.split(&#x27;.&#x27;).pop() === &#x27;md&#x27;) &#123; if (file.url) &#123; renderReadme(files.parent + &#x27;/&#x27; + file.name, file.url); &#125; &#125; else &#123; const parent = files.parent === window.api.root ? &#x27;&#x27; : files.parent; fileList.appendChild(createFileWrapper( file.url ? &#x27;document&#x27; : &#x27;folder&#x27;, file.name, formatDate(file.time), formatSize(file.size), parent + &#x27;/&#x27; + file.name, file.url )); &#125; &#125;); &#125; async function renderTreeNode(files) &#123; const createTreeNodeWrapper = (array, type, name, path) =&gt; &#123; let treeNodeWrapper = document.getElementById(&#x27;tree-node-wrapper-template&#x27;).content .cloneNode(true); let icons = treeNodeWrapper.querySelectorAll(&#x27;ion-icon&#x27;); icons[0].setAttribute(&#x27;name&#x27;, array); icons[1].setAttribute(&#x27;name&#x27;, type); treeNodeWrapper.querySelector(&#x27;.tree-node-name&#x27;).innerText = name; treeNodeWrapper.appendNode = node =&gt; treeNodeWrapper.querySelector(&#x27;.tree-node-wrapper&#x27;).append( node); addTreeNodeListener(treeNodeWrapper.querySelector(&#x27;.tree-node&#x27;), path); return treeNodeWrapper; &#125; const paths = files.parent.split(&#x27;/&#x27;); let absolutePath = max =&gt; &#123; let absolutePath = &#x27;&#x27;; for (let j = 1; j &lt;= max; j++) &#123; absolutePath += &#x27;/&#x27; + paths[j]; &#125; return absolutePath; &#125;; let maxIndex = paths.length - 1; let currentTreeNode = createTreeNodeWrapper(&#x27;arrow-dropdown&#x27;, &#x27;folder-open&#x27;, paths[maxIndex], absolutePath(maxIndex) ); files.files.forEach(file =&gt; &#123; if (!file.url) &#123; currentTreeNode.appendNode(createTreeNodeWrapper(&#x27;arrow-dropright&#x27;, &#x27;folder&#x27;, file.name, files.parent + &#x27;/&#x27; + file.name )); &#125; &#125;); for (let i = maxIndex - 1; i &gt; 0; i--) &#123; const currentTreeNodeParentAbsolutePath = absolutePath(i); let currentTreeNodeParent = createTreeNodeWrapper(&#x27;arrow-dropdown&#x27;, &#x27;folder&#x27;, paths[i], currentTreeNodeParentAbsolutePath ); let cache = window.fileCache.get(currentTreeNodeParentAbsolutePath); if (cache) &#123; cache.files.forEach(file =&gt; &#123; if (!file.url) &#123; if (file.name === paths[i + 1]) &#123; currentTreeNodeParent.appendNode(currentTreeNode); &#125; else &#123; currentTreeNodeParent.appendNode(createTreeNodeWrapper( &#x27;arrow-dropright&#x27;, &#x27;folder&#x27;, file.name, currentTreeNodeParentAbsolutePath + &#x27;/&#x27; + file.name )); &#125; &#125; &#125;); &#125; else &#123; currentTreeNodeParent.appendNode(currentTreeNode); &#125; currentTreeNode = currentTreeNodeParent; &#125; const treeRoot = document.getElementById(&#x27;tree-root&#x27;); treeRoot.innerHTML = &#x27;&#x27;; const cache = window.fileCache.get(window.api.root); const currentNodeName = currentTreeNode.querySelector(&#x27;.tree-node-name&#x27;).innerText; if (cache) &#123; cache.files.forEach(file =&gt; &#123; if (!file.url) &#123; if (file.name === currentNodeName) &#123; treeRoot.append(currentTreeNode); &#125; else &#123; treeRoot.append(createTreeNodeWrapper( &#x27;arrow-dropright&#x27;, &#x27;folder&#x27;, file.name, window.api.root + file.name )); &#125; &#125; &#125;); &#125; else &#123; treeRoot.append(currentTreeNode); &#125; &#125; async function renderReadme(path, url) &#123; const render = text =&gt; &#123; let markedText; try &#123; markedText = marked(text, &#123; gfm: true, highlight: (code, lang, callback) =&gt; &#123; return hljs.highlight(lang, code).value; &#125; &#125;); &#125; catch (e) &#123; markedText = marked(text, &#123; gfm: true, highlight: (code, lang, callback) =&gt; &#123; return hljs.highlight(&#x27;bash&#x27;, code).value; &#125; &#125;); &#125; if (window.backFordwardCache.current + &#x27;/README.md&#x27; === path) &#123; if (!window.backFordwardCache.preview) &#123; document.getElementById(&#x27;readme&#x27;).innerHTML = markedText; document.querySelector(&#x27;.markdown-body&#x27;).style.display = &#x27;block&#x27;; &#125; &#125; let cache = window.fileCache.get(path); if (!cache || cache === true) &#123; window.fileCache.set(path, text); &#125; &#125;; let text = window.fileCache.get(path); if (text === true) &#123; let cacheWaitReadmeFetch = setInterval(() =&gt; &#123; text = window.fileCache.get(path); if (typeof text === &#x27;object&#x27;) &#123; render(text, path); clearInterval(cacheWaitReadmeFetch); &#125; else if (text === false) &#123; clearInterval(cacheWaitReadmeFetch); &#125; &#125;, 100); &#125; else if (text) &#123; render(text, path); &#125; else &#123; window.fileCache.set(path, true); sendRequest(&#x27;GET&#x27;, url, null, null, text =&gt; render(text, path), () =&gt; window.fileCache.set(path, false)); &#125; &#125; function handleEncryptedFolder(files) &#123; switchRightDisplay(&#x27;encrypted&#x27;); const password = document.querySelector(&#x27;.password&#x27;); const input = password.querySelector(&#x27;input&#x27;); const button = password.querySelector(&#x27;button&#x27;); const buttonParent = button.parentElement; const buttonClone = button.cloneNode(true); buttonParent.replaceChild(buttonClone, button); input.placeholder = &#x27;请输入密码&#x27;; buttonClone.addEventListener(&#x27;click&#x27;, event =&gt; &#123; const passwd = input.value; if (!input.value) &#123; return; &#125; input.value = &#x27;&#x27;; input.placeholder = &#x27;正在验证..&#x27;; sendRequest(window.api.method, window.api.url, window.api.formatPayload(files.parent, passwd), window.api.headers, data =&gt; &#123; const newFiles = JSON.parse(data); if (newFiles.encrypted) &#123; input.placeholder = &#x27;密码错误&#x27;; &#125; else &#123; window.fileCache.set(newFiles.parent, newFiles); fetchFileList(newFiles.parent); &#125; &#125;, () =&gt; window.fileCache.set(newFiles.parent, false) ); &#125;); &#125; function addPathListener(elem, path) &#123; elem.addEventListener(&#x27;click&#x27;, event =&gt; &#123; fetchFileList(path); switchBackForwardStatus(path); &#125;); &#125; function addTreeNodeListener(elem, path) &#123; elem.addEventListener(&#x27;click&#x27;, event =&gt; &#123; fetchFileList(path); switchBackForwardStatus(path); &#125;); &#125; function addFileListLineListener(elem, path, url, size) &#123; if (url) &#123; elem.addEventListener(&#x27;click&#x27;, event =&gt; &#123; window.backFordwardCache.preview = true; const previewHandler = &#123; copyTextContent: (source, text) =&gt; &#123; let result = false; let target = document.createElement(&#x27;pre&#x27;); target.style.opacity = &#x27;0&#x27;; target.textContent = text || source.textContent; document.body.appendChild(target); try &#123; let range = document.createRange(); range.selectNode(target); window.getSelection().removeAllRanges(); window.getSelection().addRange(range); document.execCommand(&#x27;copy&#x27;); window.getSelection().removeAllRanges(); result = true; &#125; catch (e) &#123; &#125; document.body.removeChild(target); return result; &#125;, fileType: suffix =&gt; &#123; Array.prototype.contains = function (search) &#123; const object = this; for (const key in object) &#123; if (object.hasOwnProperty(key)) &#123; if ((eval(&#x27;/&#x27; + search + &#x27;/i&#x27;)).test(object[key])) &#123; return true; &#125; &#125; &#125; return false; &#125;; if ([&#x27;bmp&#x27;, &#x27;jpg&#x27;, &#x27;png&#x27;, &#x27;svg&#x27;, &#x27;webp&#x27;, &#x27;gif&#x27;].contains(suffix)) &#123; return &#x27;image&#x27;; &#125; else if ([&#x27;mp3&#x27;, &#x27;flac&#x27;, &#x27;wav&#x27;].contains(suffix)) &#123; return &#x27;audio&#x27;; &#125; else if ([&#x27;mp4&#x27;, &#x27;avi&#x27;, &#x27;mkv&#x27;, &#x27;flv&#x27;, &#x27;m3u8&#x27;].contains(suffix)) &#123; return &#x27;video&#x27;; &#125; else if ( [ &#x27;txt&#x27;, &#x27;js&#x27;, &#x27;json&#x27;, &#x27;css&#x27;, &#x27;html&#x27;, &#x27;java&#x27;, &#x27;c&#x27;, &#x27;cpp&#x27;, &#x27;php&#x27;, &#x27;cmd&#x27;, &#x27;ps1&#x27;, &#x27;bat&#x27;, &#x27;sh&#x27;, &#x27;py&#x27;, &#x27;go&#x27;, &#x27;asp&#x27;, ].contains(suffix) ) &#123; return &#x27;text&#x27;; &#125; else if ( [&#x27;doc&#x27;, &#x27;docx&#x27;, &#x27;ppt&#x27;, &#x27;pptx&#x27;, &#x27;xls&#x27;, &#x27;xlsx&#x27;, &#x27;mpp&#x27;, &#x27;rtf&#x27;, &#x27;vsd&#x27;, &#x27;vsdx&#x27;].contains(suffix) ) &#123; return &#x27;office&#x27;; &#125; &#125;, loadResource: (resource, callback) =&gt; &#123; let type; switch (resource.split(&#x27;.&#x27;).pop()) &#123; case &#x27;css&#x27;: type = &#x27;link&#x27;; break; case &#x27;js&#x27;: type = &#x27;script&#x27;; break; &#125; let element = document.createElement(type); let loaded = false; if (typeof callback === &#x27;function&#x27;) &#123; element.onload = element.onreadystatechange = () =&gt; &#123; if (!loaded &amp;&amp; (!element.readyState || /loaded|complete/.test( element.readyState))) &#123; element.onload = element.onreadystatechange = null; loaded = true; callback(); &#125; &#125; &#125; if (type === &#x27;link&#x27;) &#123; element.href = resource; element.rel = &#x27;stylesheet&#x27;; &#125; else &#123; element.src = resource; &#125; document.getElementsByTagName(&#x27;head&#x27;)[0].appendChild(element); &#125;, createDplayer: (video, type, elem) =&gt; &#123; const host = &#x27;//s0.pstatp.com/cdn/expire-1-M&#x27;; const resources = [ &#x27;/dplayer/1.25.0/DPlayer.min.css&#x27;, &#x27;/dplayer/1.25.0/DPlayer.min.js&#x27;, &#x27;/hls.js/0.12.4/hls.light.min.js&#x27;, &#x27;/flv.js/1.5.0/flv.min.js&#x27; ]; let unloadedResourceCount = resources.length; resources.forEach(resource =&gt; &#123; previewHandler.loadResource(host + resource, () =&gt; &#123; if (!--unloadedResourceCount) &#123; let option = &#123; url: video &#125; if (type === &#x27;flv&#x27;) &#123; option.type = &#x27;flv&#x27;; &#125; new DPlayer(&#123; container: elem, screenshot: true, video: option &#125;); &#125; &#125;) &#125;); &#125; &#125; const suffix = path.split(&#x27;.&#x27;).pop(); let content = document.querySelector(&#x27;.content&#x27;); switch (previewHandler.fileType(suffix)) &#123; case &#x27;image&#x27;: let img = new Image(); img.style.maxWidth = &#x27;100%&#x27;; img.src = url; let fancy = document.createElement(&#x27;a&#x27;); fancy.setAttribute(&#x27;data-fancybox&#x27;, &#x27;image&#x27;); fancy.href = img.src; fancy.append(img); content.innerHTML = &#x27;&#x27;; content.append(fancy); break; case &#x27;audio&#x27;: let audio = new Audio(); audio.style.outline = &#x27;none&#x27;; audio.preload = &#x27;auto&#x27;; audio.controls = &#x27;controls&#x27;; audio.style.width = &#x27;100%&#x27;; audio.src = url; content.innerHTML = &#x27;&#x27;; content.append(audio); break; case &#x27;video&#x27;: let video = document.createElement(&#x27;div&#x27;); previewHandler.createDplayer(url, suffix, video); content.innerHTML = &#x27;&#x27;; content.append(video); break; case &#x27;text&#x27;: let pre = document.createElement(&#x27;pre&#x27;); let code = document.createElement(&#x27;code&#x27;); pre.append(code); pre.style.background = &#x27;rgb(245,245,245)&#x27;; pre.style[&#x27;overflow-x&#x27;] = &#x27;scroll&#x27;; pre.classList.add(suffix); content.style[&#x27;text-align&#x27;] = &#x27;initial&#x27;; content.innerHTML = &#x27;&#x27;; content.append(pre); sendRequest(&#x27;GET&#x27;, url, null, null, data =&gt; &#123; code.textContent = data; if (size.indexOf(&#x27; B&#x27;) &gt;= 0 || size.indexOf(&#x27; KB&#x27;) &amp;&amp; size.split(&#x27; &#x27;)[0] &lt; 100 ) &#123; hljs.highlightBlock(pre); &#125; &#125;); break; case &#x27;office&#x27;: const officeOnline = &#x27;//view.officeapps.live.com/op/view.aspx?src=&#x27; + encodeURIComponent(url); let div = document.createElement(&#x27;div&#x27;); div.style.lineHeight = &#x27;2em&#x27;; div.style.background = &#x27;rgba(218, 215, 215, 0.21)&#x27;; div.style.webkitTapHighlightColor = &#x27;rgba(0, 0, 0, 0)&#x27;; div.style.cursor = &#x27;pointer&#x27;; div.innerHTML = &#x27;新窗口打开&#x27;; div.addEventListener(&#x27;click&#x27;, () =&gt; window.open(officeOnline)); content.innerHTML = &#x27;&#x27;; content.appendChild(div); if (document.body.clientWidth &gt;= 480) &#123; let iframe = document.createElement(&#x27;iframe&#x27;); iframe.width = &#x27;100%&#x27;; iframe.style.height = &#x27;41em&#x27;; iframe.style.border = &#x27;0&#x27;; iframe.src = officeOnline; content.appendChild(iframe); &#125; break; default: content.style[&#x27;text-align&#x27;] = &#x27;center&#x27;; content.innerHTML = &#x27;该文件不支持预览&#x27;; break; &#125; document.querySelector(&#x27;.file-name&#x27;).innerHTML = path; document.querySelector(&#x27;.btn.download&#x27;).addEventListener(&#x27;click&#x27;, () =&gt; location.href = url ); document.querySelector(&#x27;.btn.quote&#x27;).addEventListener(&#x27;click&#x27;, event =&gt; &#123; previewHandler.copyTextContent(null, window.api.url + &#x27;?file=&#x27; + path); const btn = document.querySelector(&#x27;.btn.quote&#x27;); btn.innerHTML = &#x27;已复制&#x27;; setTimeout(() =&gt; btn.innerHTML = &#x27;引用&#x27;, 250); &#125; ); document.querySelector(&#x27;.btn.share&#x27;).addEventListener(&#x27;click&#x27;, event =&gt; &#123; const sharePath = () =&gt; &#123; let arr = window.backFordwardCache.current.split(&#x27;/&#x27;); let r = &#x27;&#x27;; for (let i = 1; i &lt; arr.length; i++) &#123; r += &#x27;/&#x27; + arr[i]; &#125; return r; &#125; previewHandler.copyTextContent(null, window.location.origin + window.location.pathname + &#x27;?path=&#x27; + sharePath()); const btn = document.querySelector(&#x27;.btn.share&#x27;); btn.innerHTML = &#x27;已复制&#x27;; setTimeout(() =&gt; btn.innerHTML = &#x27;分享&#x27;, 250); &#125; ); switchRightDisplay(&#x27;preview&#x27;); let start = null; let right = document.querySelector(&#x27;.right&#x27;); const scrollToBottom = (timestamp) =&gt; &#123; if (!start) start = timestamp; let progress = timestamp - start; let last = right.scrollTop; right.scrollTo(0, right.scrollTop + 14); if (right.scrollTop !== last &amp;&amp; progress &lt; 1000 * 2) &#123; window.requestAnimationFrame(scrollToBottom); &#125; &#125;; window.requestAnimationFrame(scrollToBottom); &#125;); &#125; else &#123; elem.addEventListener(&#x27;click&#x27;, event =&gt; &#123; fetchFileList(path); switchBackForwardStatus(path); &#125;); &#125; &#125; function addBackForwardListener() &#123; document.getElementById(&#x27;arrow-back&#x27;).addEventListener(&#x27;click&#x27;, back); document.getElementById(&#x27;arrow-forward&#x27;).addEventListener(&#x27;click&#x27;, forward); document.querySelector(&#x27;#main-page&#x27;).addEventListener(&#x27;click&#x27;, () =&gt; &#123; fetchFileList(window.api.root); switchBackForwardStatus(window.api.root); &#125;); &#125; function switchRightDisplay(display) &#123; if (display === &#x27;preview&#x27;) &#123; document.querySelector(&#x27;.list-header&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;#file-list&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;.markdown-body&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;.password&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;.preview&#x27;).style.display = &#x27;initial&#x27; &#125; else if (display === &#x27;encrypted&#x27;) &#123; document.querySelector(&#x27;.list-header&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;#file-list&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;.markdown-body&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;.preview&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;.password&#x27;).style.display = &#x27;initial&#x27;; document.querySelector(&#x27;#readme&#x27;).innerHTML = &#x27;&#x27;; let content = document.querySelector(&#x27;.preview .content&#x27;); if (content) &#123; document.querySelector(&#x27;.preview .content&#x27;).innerHTML = &#x27;&#x27;; &#125; &#125; else &#123; document.querySelector(&#x27;.list-header&#x27;).style.display = &#x27;initial&#x27;; document.querySelector(&#x27;#file-list&#x27;).style.display = &#x27;initial&#x27;; document.querySelector(&#x27;.markdown-body&#x27;).style.display = &#x27;none&#x27; document.querySelector(&#x27;.preview&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;.password&#x27;).style.display = &#x27;none&#x27;; document.querySelector(&#x27;#readme&#x27;).innerHTML = &#x27;&#x27;; let content = document.querySelector(&#x27;.preview .content&#x27;); if (content) &#123; document.querySelector(&#x27;.preview .content&#x27;).innerHTML = &#x27;&#x27;; &#125; &#125; &#125; function switchBackForwardStatus(path) &#123; if (path) &#123; window.backFordwardCache.deepest = path; &#125; if (window.backFordwardCache.root !== window.backFordwardCache.current) &#123; window.backFordwardCache.backable = true; document.getElementById(&#x27;arrow-back&#x27;).style.color = &#x27;black&#x27;; &#125; else &#123; window.backFordwardCache.backable = false; document.getElementById(&#x27;arrow-back&#x27;).style.color = &#x27;rgb(218, 215, 215)&#x27;; &#125; if (window.backFordwardCache.deepest !== window.backFordwardCache.current) &#123; window.backFordwardCache.forwardable = true; document.getElementById(&#x27;arrow-forward&#x27;).style.color = &#x27;black&#x27;; &#125; else &#123; window.backFordwardCache.forwardable = false; document.getElementById(&#x27;arrow-forward&#x27;).style.color = &#x27;rgb(218, 215, 215)&#x27;; &#125; &#125; function back() &#123; if (!window.backFordwardCache.backable) &#123; return; &#125; if (window.backFordwardCache.preview) &#123; fetchFileList(window.backFordwardCache.current); &#125; else &#123; let former = (() =&gt; &#123; let formerEndIndex = window.backFordwardCache.current.lastIndexOf(&#x27;/&#x27;); return window.backFordwardCache.current.substring(0, formerEndIndex); &#125;)(); former = former || window.api.root; fetchFileList(former); switchBackForwardStatus(); &#125; // console.log(window.backFordwardCache); &#125; function forward() &#123; if (!window.backFordwardCache.forwardable) &#123; return &#125; const current = window.backFordwardCache.current === window.api.root ? &#x27;&#x27; : window.backFordwardCache.current const subLength = current ? current.length : 0; const later = current + &#x27;/&#x27; + window.backFordwardCache.deepest.substring(subLength).split(&#x27;/&#x27;)[1]; fetchFileList(later); switchBackForwardStatus(); // console.log(window.backFordwardCache); &#125; async function preCache(files, level) &#123; if (level &gt; 2) return; files.files.forEach(file =&gt; &#123; const parent = files.parent === &#x27;/&#x27; ? &#x27;&#x27; : files.parent const path = parent + &#x27;/&#x27; + file.name; if (!file.url) &#123; // console.log(&#x27;caching &#x27; + path + &#x27;, level &#x27; + level); window.fileCache.set(path, true); sendRequest(window.api.method, window.api.url, window.api.formatPayload(path), window.api.headers, data =&gt; &#123; const files = JSON.parse(data); window.fileCache.set(path, files); preCache(files, level + 1); &#125;, () =&gt; window.fileCache.set(path, false) ); &#125; else if (file.name.split(&#x27;.&#x27;).pop() === &#x27;md&#x27;) &#123; // console.log(&#x27;caching &#x27; + path + &#x27;, level &#x27; + level); window.fileCache.set(path, true); sendRequest(&#x27;GET&#x27;, file.url, null, null, text =&gt; window.fileCache.set(path, text), () =&gt; window.fileCache.set(path, false)); &#125; &#125;); &#125; async function preCacheCheck(cache, path) &#123; cache.files.forEach(file =&gt; &#123; const prefix = path === window.api.root ? &#x27;&#x27; : path; const nextPath = prefix + &#x27;/&#x27; + file.name; const pathCache = window.fileCache.get(nextPath); if (!file.url) &#123; if (!pathCache &amp;&amp; pathCache !== true) &#123; // console.log(&#x27;inner caching &#x27; + nextPath); window.fileCache.set(nextPath, true); sendRequest(window.api.method, window.api.url, window.api.formatPayload(nextPath), window.api.headers, data =&gt; &#123; const files = JSON.parse(data); window.fileCache.set(nextPath, files); preCache(files, 0); &#125;, () =&gt; window.fileCache.set(nextPath, false) ); &#125; &#125; else if (file.name.split(&#x27;.&#x27;).pop() === &#x27;md&#x27;) &#123; if (!pathCache &amp;&amp; pathCache !== true) &#123; // console.log(&#x27;inner caching &#x27; + nextPath); window.fileCache.set(nextPath, true); sendRequest(&#x27;GET&#x27;, file.url, null, null, text =&gt; window.fileCache.set(nextPath, text), () =&gt; window.fileCache.set(nextPath, false)); &#125; &#125; &#125;); &#125; function fetchFileList(path) &#123; // console.log(&#x27;fetching &#x27; + path); let loading = document.querySelector(&#x27;.loading-wrapper&#x27;); loading.style.display = &#x27;initial&#x27;; window.backFordwardCache.preview = false; window.backFordwardCache.current = path; let cache = window.fileCache.get(path); if (cache === true) &#123; let cacheWaitFileListFetch = setInterval(() =&gt; &#123; cache = window.fileCache.get(path); if (typeof cache === &#x27;object&#x27;) &#123; renderPage(null, cache); preCacheCheck(cache, path); clearInterval(cacheWaitFileListFetch); &#125; else if (cache === false) &#123; clearInterval(cacheWaitFileListFetch); loading.style.color = &#x27;red&#x27;; loading.innerText = &#x27;Failed!&#x27;; setTimeout(() =&gt; &#123; loading.style.display = &#x27;none&#x27;; loading.style.color = &#x27;white&#x27;; loading.innerText = &#x27;Loading..&#x27;; &#125;, 2000); &#125; &#125;, 100); &#125; else if (cache) &#123; renderPage(null, cache); preCacheCheck(cache, path); &#125; else &#123; window.fileCache.set(path, true); sendRequest(window.api.method, window.api.url, window.api.formatPayload(path), window.api.headers, renderPage ); &#125; &#125; document.addEventListener(&#x27;DOMContentLoaded&#x27;, () =&gt; &#123; document.title = window.GLOBAL_CONFIG.SITE_NAME; document.querySelector(&#x27;.site&#x27;).textContent = window.GLOBAL_CONFIG.SITE_NAME; window.api = &#123; root: &#x27;/&#x27;, url: window.GLOBAL_CONFIG.SCF_GATEWAY, method: &#x27;POST&#x27;, formatPayload: (path, passwd) =&gt; &#123; return &#x27;?path=&#x27; + encodeURIComponent(path) + &#x27;&amp;encrypted=&#x27; + window.api.accessToken.encrypted + &#x27;&amp;plain=&#x27; + window.api.accessToken.plain + &#x27;&amp;passwd=&#x27; + passwd; &#125;, headers: &#123; &#x27;Content-type&#x27;: &#x27;application/x-www-form-urlencoded&#x27; &#125; &#125; window.backFordwardCache = &#123; root: window.api.root, deepest: window.api.root, current: window.api.root, backable: false, forwardable: false, preview: false &#125; window.fileCache = new Map(); const initialPath = new URLSearchParams(window.location.search).get(&#x27;path&#x27;) || window.api.root; if (window.GLOBAL_CONFIG.IS_CF) &#123; window.api.accessToken = &#123; encrypted: &#x27;&#x27;, plain: &#x27;&#x27; &#125;; fetchFileList(initialPath); addBackForwardListener(); &#125; else &#123; sendRequest(window.api.method, window.api.url + &#x27;?accessToken&#x27;, null, window.api.headers, data =&gt; &#123; const accessToken = JSON.parse(data); window.api.accessToken = &#123; encrypted: accessToken.encrypted, plain: accessToken.plain &#125;; fetchFileList(initialPath); addBackForwardListener(); &#125; ); &#125; &#125;); &lt;/script&gt;&lt;/head&gt;&lt;body hidden=&quot;hidden&quot;&gt; &lt;template id=&quot;tree-node-wrapper-template&quot;&gt; &lt;div class=&quot;tree-node-wrapper&quot;&gt; &lt;div class=&quot;tree-node&quot;&gt; &lt;ion-icon&gt;&lt;/ion-icon&gt; &lt;ion-icon&gt;&lt;/ion-icon&gt; &lt;div class=&quot;tree-node-name&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt; &lt;template id=&quot;file-wrapper-templete&quot;&gt; &lt;div class=&quot;row file-wrapper&quot;&gt; &lt;div class=&quot;file&quot;&gt; &lt;ion-icon&gt;&lt;/ion-icon&gt; &lt;span class=&quot;name&quot;&gt;&lt;/span&gt; &lt;span class=&quot;time&quot;&gt;&lt;/span&gt; &lt;span class=&quot;size&quot;&gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt; &lt;div class=&quot;loading-wrapper&quot;&gt; &lt;div class=&quot;loading&quot;&gt;Loading...&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;header-wrapper&quot;&gt; &lt;div class=&quot;header&quot;&gt; &lt;ion-icon id=&quot;arrow-back&quot; class=&quot;logo&quot; name=&quot;arrow-back&quot;&gt;&lt;/ion-icon&gt; &lt;ion-icon id=&quot;arrow-forward&quot; class=&quot;logo&quot; name=&quot;arrow-forward&quot;&gt;&lt;/ion-icon&gt; &lt;ion-icon id=&quot;main-page&quot; class=&quot;logo&quot; name=&quot;folder&quot;&gt;&lt;/ion-icon&gt; &lt;div class=&quot;nav&quot;&gt; &lt;span id=&quot;path&quot;&gt; &lt;/span&gt; &lt;/div&gt; &lt;span class=&quot;site&quot; id=&quot;nav-site&quot;&gt;ONEDRIVE&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;main&quot;&gt; &lt;div class=&quot;left&quot;&gt; &lt;div id=&quot;tree-root&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;right&quot;&gt; &lt;div class=&quot;list-header&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;file&quot;&gt; &lt;span class=&quot;name&quot;&gt;ITEMS&lt;/span&gt; &lt;span class=&quot;time&quot;&gt;TIME&lt;/span&gt; &lt;span class=&quot;size&quot;&gt;SIZE&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=&quot;file-list&quot;&gt; &lt;/div&gt; &lt;div class=&quot;markdown-body&quot;&gt; &lt;div id=&quot;readme&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;preview&quot;&gt; &lt;div class=&quot;info&quot;&gt; &lt;div class=&quot;file-name&quot;&gt;&lt;/div&gt; &lt;div class=&quot;btn download&quot;&gt;下载&lt;/div&gt; &lt;div class=&quot;btn quote&quot;&gt;引用&lt;/div&gt; &lt;div class=&quot;btn share&quot;&gt;分享&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;password-wrapper&quot;&gt; &lt;div class=&quot;password&quot;&gt; &lt;input type=&quot;password&quot;&gt; &lt;button&gt;提交&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 完成界面： 题外话： 那个获取refresh_token的网页并不是不可用，但是成功率巨低，我试了前前后后三十多次才一次成功…… heroku的登录需要科学上网，怎么科学上网就不要问我了，Google上大把…… 以后发文件我会放到我的onedrive上，大家可以自取，地址是http://drive.bili33.top/，友链页面也有链接。 我自己部署的heroku项目不会开放给大家获取refresh_token，因为获取完一次要到后台删除refresh_token才能进行下一次的获取","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"jsDelivr的正确打开方式","slug":"jsDelivr-Usage","date":"2020-02-08T13:09:35.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/02/08/jsDelivr-Usage/","link":"","permalink":"https://coralare.com/2020/02/08/jsDelivr-Usage/","excerpt":"","text":"文章已经在2020.4.5更新 开始持续高产前几天开始，github的raw文件下载域名raw.githubusercontent.com被墙了，导致我的网站很多图片都是404（因为我是直接使用github的文件），我转为使用cloudflare的workers反代。但是反代有每日10W次的请求次数限制。万一以后我的网站访问量增大了呢？这样岂不是不够用？（在想Peach） 今天早上我才在【日常吐槽04】的评论区里面说不会用jsDelivr，到了晚上，嗯，真香…… jsDelivr是一个比较好的CDN平台，官方号称jsDelivr – Open Source CDN free, fast, and reliable，简单来说就是开源的CDN，免费、快、可靠这样的 不过确实，这玩意的口碑也挺好，那我就按照我半天的使用体验，来说说这玩意的正确打开方式吧 你需要准备：一个github账号 开始操作你需要登录你的Github，创建一个你想用来放文件的仓库，然后在这个仓库里面上传你的文件，像我这样 然后点击Release，新建一个版本，在上面的小方框里面填写你的版本号，尽量填写数字，例如1.0之类的，不要用中文！！！ 接着直接调用jsDelivr，例如我在名为Picture-repo的仓库发布了1.0版本，那么我访问链接： https://cdn.jsdelivr.net/gh/GamerNoTitle/Picture-repo@1.0/AboutMe/logo-mini.png 就可以直接调用我的头像，按照官方的格式，就是 https://cdn.jsdelivr.net/gh/&lt;username&gt;/&lt;repo-name&gt;@&lt;version&gt;/&lt;path&gt; 的样子，解释一下： &lt;username&gt;就改成自己的名字，&lt;repo-name&gt;改成自己的仓库名字，&lt;version&gt;就是你的release版本，如果不填会自动选择最新的release&lt;path&gt;改成自己的文件路径。当我上传的时候我的文件夹路径是.\\folder\\example.png的话，那么&lt;path&gt;就要改成folder/example.png 但是请注意！当你的release包大于50MB，那么jsdelivr会给你报错并且不给你提供加速服务，例如下面这条链接: https://cdn.jsdelivr.net/gh/NotFoundNEKKO/Storage@1.0/表情包/真叫人质壁分离.jpg 点开就会发现提示： Package size exceeded the configured limit of 50 MB. Try https://github.com/NotFoundNEKKO/Storage/tree/1.0/表情包/真叫人质壁分离.jpg instead. 所以说还是要尽量减少自己每个release的大小，如果说太大了建议分成几个仓库放哦~ 从群友那里学来的：当你的版本号写为master时，只需要第一次发布release即可，后面直接用master分支的文件，也没有50MB的文件包大小限制 2020.4.5 更新：Github Page法 根据评论区@Anonymous的回复，发现有另外一种方式也能够访问Github中的文件（而且还是raw） 我们还是以上面那个仓库为例子，先到仓库中的设置，打开Github Pages服务 然后我们可以看到Github将我的这个仓库的page服务部署到了https://bili33.top/Picture-repo/这个链接 我们尝试访问仓库中的文件 在这里我访问的是我的网站头图↓ 可以看到，的确是可以进行访问的。而如果在Github Pages服务中开启自定义域名的话，还能够配合CloudFlare的CDN进行一波加（jian）速 题外话： 但是还是有人要直接访问raw.githubusercontent.com域名，所以我在这里开放出我的反代 当你访问了域名为raw.githubusercontent.com的文件后（后面应该有一大串的文件路径链接），把它改成下面任意一个域名 反代1：cdn.bili33.top（每日请求上限较少，因为我的反代都在这里） 反代2：bilicdn.tk（推荐） 希望能够帮到大家吧~","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"日常吐槽04","slug":"diary4","date":"2020-02-06T12:00:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/02/06/diary4/","link":"","permalink":"https://coralare.com/2020/02/06/diary4/","excerpt":"","text":"最近甚是无聊，因为做完了作业又不能出门（这都要从一只蝙蝠说起……），天天在家里打命(tu)运(ming)2，在家里躺着都算给国家做贡献……也没干什么技术活，就还是来吐槽一下吧 首先先感谢2019-ncov送来的寒假延长消息，让我们的寒假至少延迟到了2020.2.17（原来是9号回校，10号正式开学），也让我肝土命2的时间变多了（这赛季等级莫不是要冲100，正因如此，周末双休可能就要变成单休了，而且准高三的暑假估计要被阉割掉了）。因为病毒的影响，导致人人不能出门，出门必戴口罩。因为口罩太畅销了，有些地方的口罩纷纷涨价。涨价一点点能接受对吧，但是我看到我们班上有人20买个医用口罩，真心贵……（强烈斥责坐地起价的行为）昨天早上还去排队买口罩，凭身份证一人买五个5￥，买完了还去别的地方看看有没有口罩买，最后十一点半回到家…… 既然学校延迟开学，那也不能闲着，让学生开始用起了钉钉，想着用钉钉的会议模式上课（什么脑洞……）钉钉的商店评分骤降（XSWL），这算是躺枪_(:з」∠)_吧……但是也让钉钉首次超过微信拿到了iOS榜单第一（嘿嘿） 最近特别喜欢用twitter（我也不知道为什么，我的Twitter@GamerNoTitle），天天早上就打开手机看推，然后看到@PlayWarframe（WARFRAME官方账号）关注了@Bungie（命运2开发商）和@Destiny2（命运2官方账号），这两家公司莫非有啥关系？？？（不过话说是同一题材的游戏撒） 15天前，我在Valine-Admin的仓库发布了issue#75，主要是邮件的发送上的问题，直到今天，终于有人回复我啦^v^，感谢大佬*@tnrzy**帮我解决了邮件发送的问题\\v* 前几天还是在刷Twitter的时候，想去Soundcloud上听大佬的歌曲，然后发现国内访问不了Soundcloud，而且用cloudflare反代也不行，我就只能翻墙上soundcloud了。话说到底为啥soundcloud不能在国内用？？？ 近期想做的事情： 1、想玩VR！！！想玩Beat Saber！！！（没有VR的人哭了） 2、趁着现在闲，想继续学一下C++和Python（目前只会基础撒）","categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"}]},{"title":"日常吐槽03 - 聊一聊WARFRAME COINCIDANCE的制作","slug":"diary3","date":"2020-01-22T14:00:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/01/22/diary3/","link":"","permalink":"https://coralare.com/2020/01/22/diary3/","excerpt":"","text":"近期做了一个视频：【WARFRAME 抖肩舞】星 际 仓 鼠 再来亿遍！打三傻不如跳舞！每天一遍，防止抑郁~ WARFRAME版 Coincidance 自制 什么？你说你还没有看？赶紧点开上面的蓝链前往B站查看！！！ 哔哩哔哩播放：【WARFRAME 抖肩舞】星 际 仓 鼠 再来亿遍！打三傻不如跳舞！每天一遍，防止抑郁~ WARFRAME版 Coincidance 自制 YouTube播放： 这是[bilibili@GamerNoTitle](https://space.bilibili.com/44666814)（也就是我自己）和[bilibili@ThisNEKKO_xd](https://space.bilibili.com/49835313/)、[bilibili@MI-rice-json](https://space.bilibili.com/22267745/)和[bilibili@毁天灭地的GEnX](https://space.bilibili.com/49914186/)四人一起合作完成的视频，这算是2019（农历）的最后一个视频，也是第一个视频。至于这个发布日期也是特意挑的，因为是我农历生日…… 一开始想做这个是因为看到了这个【命运2 抖肩舞】再来亿遍！打游戏不如跳舞！每天一遍，防止抑郁~命运2版Coincidance 自制 没错，就是命（tu）运（ming）2版的Coincidance。其实这个视频我是在期末考试最后一天的中午在宿舍里面看的，因为我们的考试安排是这样的（如下表，忘了具体日期了，本人选科是全理科）↓ 日期 场次 科目 时间 第一天 1 语文 7:40~10:10 第一天 2 物理 10:30~11:45 第一天 3 政治（不考） 14:30~15:45 第二天 1 数学 8:00~10:00 第二天 2 生物 10:20~11:45 第二天 3 地理（不考） 14:30~15:45 第三天 1 英语 8:00~10:00 第三天 2 化学 10:20~11:45 第三天 3 历史（不考） 14:30~15:45 也就是在第三天的中午，反正下午也不考试，我就掏出了手机，打开了B站，开始看了一中午的视频（在这天之前我从未掏出过手机！），然后就看到了这个视频。 这个视频也是我的各个好友不断分享，然后在前天（2020.1.20）的晚上，我突然想到“为啥我们不做一个自己的COINCIDANCE”？用WARFRAME来做呢？（因为WARFRAME较完善的动作系统） 然后我就在群里面找人，讲真，我身边加上我玩WARFRAME的人（就是身边的，不算上沙雕群友们）就只有4个人，而且WARFRAME刚好也是一个队伍最多4个人（这里我就要吐槽了，为什么不能像土命一样一个队伍6个人，这样更快乐，即使有5人小队BUG，但是不如土命2快乐），我们就相约第二天九点上线动工。 到了早上8点50分，我的手机闹铃就响了，是标准的Pixel音效 是在催促我起床了，我就赶紧起床，然后打开了WARFRAME。幸好我已经提前更新完了，要不都不知道要等多久。我打开了前一天晚上与@ThisNEKKO_xd一起讨论修改的脚本打开，然后CALL上小队成员，进入Chaptcha（好像是这么叫的）摄影棚开始拍摄。 （下面先放出脚本） KIKI:Gamer.bili ChuChu: Notfound404. 摄像机？（中间的人）：GodGenx 机动：UBIthepotato 第一幕：KIKI KIKI走路（第一个仓鼠叫做kiki） KIKI拍绝路（她手上的是8极化绝路 – 截图） 机动&amp;中间的人（不要和后面用一个甲）拳击（动作：洞悉武式）（她的车队喜拳击） KIKI跳舞（但KIKI喜欢跳舞） 第二幕：ChooChoo ChooChoo三弦琴（第二只仓鼠叫做ChooChoo，是一只？？的仓鼠） ChooChoo子弹跳×2（她喜欢解救受难仓鼠，但更喜欢跳舞） ChooChoo跳舞 第三幕： KIKI子弹跳×1，走动 ChooChoo三弦琴（她们踏上了旅程） 飞船（去到各个星球） KIKI&amp;ChooChoo处决&amp;砍怪（分开）（她们听从莲妈，成为了Tenno强盗） 第四幕： KIKI中继站子弹跳（她们跑遍了宇宙） ChooChoo&amp;NPC深鞠躬（遇到了许多的人） 七字真言弹出登录界面（无论是否有七字真言，她们都在跳舞） KIKI跳舞 ChooChoo跳舞 KIKI在NPC面前跳舞 第五幕：摄影棚中继站 四人加载界面&amp;四人进去不要动（一天她们到达了，宇宙的某个中继站）（加Hydroid中继站大字） 中间黑咖喱显赫刀剑疯狂长按E（她们俩肩并肩跳舞引来了其他仓鼠的围观） KIKI&amp;ChooChoo转身（她们转身面对面） Kiki&amp;ChooChoo跳舞（一切就在这巧合发生了） KIKI鼓掌ChooChoo跳舞（Wow,跳的不错嘛） KIKI跳舞ChooChoo鼓掌（Wow,你也不错嘛） （He went dongdongdong, he went dongdongdong，They said we both been dance all this time） KIKI&amp;ChooChoo转向镜头（同时）（What coincidance） Kiki&amp;ChooChoo跳舞 ▲注意一定要看下面 三个人（kiki&amp;ChooChoo&amp;机动） Kiki左 机动中 ChooChoo右 1、 kiki&amp;ChooChoo跳 2、 三人跳 3、 机动跳 4、 三人跳 第六幕：多场景 1、（场景无所谓）两人跳（从此她们一起跳舞） 2、（塞防图）上下两人跳（在这之前没人像她们一样） 3、（去希图斯）四人跳舞步可不统一（整个小队都在跳舞） 4、（夜灵平野三傻面前）四人跳舞（没有人去欺负三傻） 5、（放大KIKI）（KIKI停下面对镜头）（NO MORE） 6、（金星平原蜘蛛前面）四人跳（整个小队一起跳舞跳到了金星平原） 第七幕： Kiki&amp;ChooChoo同时跳（这都是因为两人的相遇，What a coincidence!） 很多镜头&amp;甲用于快闪 都是单独舞步跳两个轮回 机动 指挥家武式（Lets dance） 第八幕： 1、 （KIKI左 机动中（靠后） ChooChoo右）KIKI&amp;ChooChoo跳 2、 （KIKI左 机动中（靠前） ChooChoo右）（同上） 3、 （KIKI左 机动中（靠后） ChooChoo右）三人跳 4、 （KIKI左 机动中（靠前） ChooChoo右）（同上） 5、 （KIKI左 机动中（并排） ChooChoo右）三人跳 6、 （KIKI）KIKI跳 7、 （ChooChoo）ChooChoo跳 8、 （机动） 9、 （机动）蚀之武式 10、（机动&amp;摄影） 11、KIKI跳 机动左侧鼓掌 12、ChooChoo跳 机动右侧鼓掌 13、KIKI跳 14、全队跳 —END— 制作者名单 对比起视频，讲真，有些镜头我们并没有拍。但是拍摄过程中，同一素材我们拍摄了多次，而且也在刷突击的时候顺带拍摄了某些素材，拍摄时长算下来一个小时多一点，效率还是挺高的。 然后就到了最难的时候了——传素材。我们是四个人分别录制了素材，土豆（这里指@MI-rice-json，因为WARFRAME的ID叫做UBI.the.potato故称作土豆）的电脑比较渣，录了一小段，总共1.46GB，直接使用奶牛快传传给了我；笨猫（此处指@ThisNEKKO_xd）录了总共2.54GB素材，因为人就在我旁边，所以直接用我的SSD拷贝过来；最难的是@GEnX的素材，他的电脑被我们称为“全队最好的电脑”，大部分素材都是他那里录制出来的，总共有29个G，这可难了，QQ最大传输文件和奶牛快传最大传输大小都为4个G，我就想到用压缩的方式，把文件分成N个4095MB（4GB=4096MB）的压缩包分段，然后一个一个传。@GEnX的龟速上行网络最高只有2.5MB/s的传输速度，所以无论我的下载速度多快也突破不了这2.5MB/s的上限，没办法，只能慢慢传了。8个文件，5个用QQ传输，3个用奶牛快传，总计传输了5个多小时。。。 终于传完素材了！可以开始剪辑啦！我满心欢喜地打开了我的PR，问题又来了！我的PR，它，它，它居然——闪退！！！因为我安装的是Adobe Premiere Pro 2020，上网查了以后发现，没有CC（Adobe Creative Cloud）是运行不了的，我就只能被迫下了一个CC（太难了），开始了剪辑 剪辑花费时长大概两个小时，因为素材拖进PR里面以后，PR会自动开始生成视频的峰值文件，这就吃了我很大一部分的CPU，只能顶着100%的CPU剪辑，剪辑了两个半小时（期间包括我上大字幕和@ThisNEKKO_xd上下面的字幕），终于完成了~ 然后我就开始上传，编辑稿件，选择投稿日期-&gt;2020.1.22 09:00（因为这天刚好是我农历生日，我家生日算农历），然后提交了稿件，关上了电脑。 出场的仓鼠们如下（以下为WARFRAME ID）：音乐甲 &amp; NOVA PRIME @Gamer.bili瓦喵 PRIME &amp; 电男 PRIME @NotFound404.黑咖喱 &amp; ASH PRIME &amp; 指挥官 @UBI.the.potato女枪PRIME &amp; （潜行）指挥官 @GODGEnX制作者名单：导演 @Gamer.bili剧本 @Gamer.bili @NotFound404.拍摄 @GODGEnX @NotFound404. @Gamer.bili剪辑 @Gamer.bili @NotFound404.字幕 @NotFound404. 现在我写这一篇文章，应该是算作留个纪念吧，毕竟，这个视频做起来也不容易。。。 喜欢我的视频，请长按点赞键支持我哦~虽然我只是一只比白咕咕还要会咕咕咕的鸽子~ 2020.1.22 GamerNoTitle","categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"}]},{"title":"网易云音乐去除版权限制（Nodejs）","slug":"Unblock163Music","date":"2020-01-18T04:03:32.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/01/18/Unblock163Music/","link":"","permalink":"https://coralare.com/2020/01/18/Unblock163Music/","excerpt":"","text":"2020.3.23重制 今天拿网易云开刀~ 网易云音乐一直是我们使用得比较频繁的音乐平台，可是他的版权问题实在是令人发寒，每次搜索音乐就看着灰色的歌名失望。。。而隔壁的扣扣音乐就什么都有 这种情况真的很烦，点开一首歌直接告诉你因版权无法播放，这时候我们就需要脚本登场了脚本由@nondanee编写，原理是将其他音乐网站的链接替换到网易云，所以并不存在破解网易云音乐的软件，与法律并不矛盾。源代码可以点@nondanee/UnblockNeteaseMusic，在使用之前，需要安装nodejs环境 1$ git clone https://github.com/nondanee/UnblockNeteaseMusic.git 克隆代码后，在文件夹里启动命令窗口，输入 1$ npx @nondanee/unblockneteasemusic 就可以打开程序了，如果提示npx未找到，请先使用 1$ npm install npx -g 来安装npx哦~ 启动了以后，在你的网易云音乐里面修改代理，按照你的配置填写即可！ 题外话： 最近Github的地址raw.githubusercontent.com好像被墙了？不能直接在Github网站中下载RAW文件，很烦 CloudFlare的Workers最近也是BUG一大堆，总是给我抛出1101错误，先不搭建新的反代了…… 本网站的邮件提醒已经搭建好了，以后留言就有邮件了~","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"Cloudflare Workers反代实战（下）","slug":"Cloudflare-Workers-Section2","date":"2020-01-17T13:55:31.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2020/01/17/Cloudflare-Workers-Section2/","link":"","permalink":"https://coralare.com/2020/01/17/Cloudflare-Workers-Section2/","excerpt":"","text":"上篇说道：我们已经成功搭建了Workers的反代服务，但是有的时候我们需要绑定自己的域名来访问该网页，那么本篇我们将来讲一讲怎么绑定自己的域名来访问workers我们先来到我们的域名管理界面，点开自己的任意一个域名，然后点击上面的workers在本界面中，上面的两个按钮点击Add Route然后在上面填写你想要的域名（当然得是你的域名），格式如&lt;SubDoamin&gt;.&lt;Domain&gt;/*，下面选择你创建好的Workers配置，例如我在上面填写g.bili33.top/*，然后下面选择我的名字叫做”g”的Workers配置文件（用于反代Google），然后点击保存，这样就成功添加了route，当然这个时候并不是直接访问就可以访问被反代的网站，而是要进行进一步配置~ 回到我们的域名DNS解析界面，添加一个CNAME记录，指向我们的Workers，在这之中，Proxy Status一定要设定为Proxied！下面照样给个例子 Type Name Target TTL Proxy CNAME g g.bili33.workers.dev Auto 然后添加进入DNS解析，这时候我们再访问自己的域名（在这里是g.bili33.top），然后就发现我们进入了自己反代的网站 当然这也有一定的缺点： 1、因为Redirect URL与api不一致，所以反代出来的网站一般无法登陆 2、使用了Google Recaptcha之类的验证码用于网站保护的网站可能会因为Redirect URL不一致而导致无法访问（如Google自带的Recaptcha保护机制将导致无法进行搜索，这种情况下更换被反代的Google地区即可） 2020.3.14 更新今天给我的博客上SSL，然后临时把CloudFlare自带的SSL关掉了，代理Google旗下网站出现了重定向次数过多的问题，把SSL调回Flexible就可以了，目前只发现Google旗下产品会出现此问题，其他暂未发现 题外话： 网站终于又开始更新啦！小高考考得个人感觉还不错，二月份出成绩*V*，六月份还有物理和政治的…… @TheBaiRuo的公网IP被墙了，需要备案，所以他的网站进不去，确实是有点惨吼，Github Pages它不香吗？ 另外，在Cloudflare的workers调试界面有可能会出现500的错误码，忽略就好，实际上部署后是可以访问的（除非cloudflare分配给你的服务器炸了）","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"日常吐槽02","slug":"diary2","date":"2019-11-17T11:10:42.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/11/17/diary2/","link":"","permalink":"https://coralare.com/2019/11/17/diary2/","excerpt":"","text":"今天是周日，还要考试，哭了。。。 本周二是学校的研学活动，但是说不给带手机给带相机，对我倒是没什么所谓啦（原因在下面），但是学校有没有考虑过有些人家里莫得相机啊？ 周三晚上校运会开幕式，有我们至今为止最庞大的直播阵容： 直播及录像机：我的Lenovo不知道是什么鬼型号，反正i7 7700k够用了，加个16G运存，用NDI采集导播机的画面导播机：梅导的新电脑，用的9900k还有32G运存，我觉得用vmix莫得问题，用NDI传输画面给我的电脑中的OBS（PS：我们是vMix导播切镜头，我的OBS来直播+录像）字幕机：梅导以前的电脑，用的6700k采集机（4台）：采集四个相机/无人机的实时画面，利用NDI传输到导播机相信这一次我们能够避免上次的马赛克由于导播，所以我们一定要使用手机，所以上面才说没什么所谓~ 准备退休啦~","categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"}]},{"title":"日常吐槽01","slug":"diary1","date":"2019-11-05T05:35:58.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/11/05/diary1/","link":"","permalink":"https://coralare.com/2019/11/05/diary1/","excerpt":"","text":"想开一个日常吐槽分区，除了技术（汗？）文还可以发一发平常的感受~ 期中考考完啦！！！开心~ 但是数学考得不很好，反正就是不很好（自闭中） 本周遇到了wordpress会出现429错误的问题，貌似被墙了，果断搭建一个代理站，但是wordpress的链接不是相对链接，是绝对链接，所以要下载wordpress要手动把原来的域名改成我的域名 点我下载wordpress最新版~(zip) 点我下载wordpress最新版~(tar.gz)","categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"}]},{"title":"Cloudflare Workers反代实战（上）","slug":"CloudFlare-Workers-Section1","date":"2019-10-25T04:15:20.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/10/25/CloudFlare-Workers-Section1/","link":"","permalink":"https://coralare.com/2019/10/25/CloudFlare-Workers-Section1/","excerpt":"","text":"CloudFlare一直以其域名托管服务和CDN服务闻名于各位网站管理员，当然我的域名也是托管在这个上面的，后来，有一位被我介绍入CF的同志告诉我CF有种功能。。。（@TheBaiRuo） 就是CF的Workers服务，这是一种能够访问网页时运行特定的JS脚本的服务，所以我们就可以利用它进行 JSPROXY Workers-Proxy（感谢@Anonymous的提醒）的搭建（某反向代理） 前期准备1、一个CloudFlare账号 2、一个域名（可以到Freenom注册一个） 搭建反向代理在这之前，你需要把你的域名托管到CF上！！！ 然后进入CF的workers界面，看下图 进入到Workers后，点击Create a Worker来创建你的第一个JS 然后在workers界面的左边，填入你的JS代码，这时候就需要万能反代代码QAQ 解释一下这个界面： ①项目名称：表现为**[Project].[subdomain].workers.dev**，其中subdomain是你注册workers是输入的名字，project就是项目名称 ②编辑区：就是你放下代码的地方 ③效果预览区：当你按下运行按钮的时候展现出来的效果 ④运行：顾名思义，运行嘛，然后在右边看得到 ⑤保存并部署：部署该项目 将下面的代码放到你的编辑区中： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130// 替换成你想镜像的站点const upstream = &#x27;example.com&#x27; // 如果那个站点有专门的移动适配站点，否则保持和上面一致const upstream_mobile = &#x27;example.com&#x27; // 你希望禁止哪些国家访问const blocked_region = [&#x27;KP&#x27;] // 禁止自访问const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;] // 替换成你想镜像的站点const replace_dict = &#123; &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;, &#x27;//google.com&#x27;: &#x27;&#x27;&#125; //以下内容都不用动addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; event.respondWith(fetchAndApply(event.request));&#125;) async function fetchAndApply(request) &#123; const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase(); const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;); const user_agent = request.headers.get(&#x27;user-agent&#x27;); let response = null; let url = new URL(request.url); let url_host = url.host; if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; response = Response.redirect(url.href); return response; &#125; if (await device_status(user_agent)) &#123; upstream_domain = upstream &#125; else &#123; upstream_domain = upstream_mobile &#125; url.host = upstream_domain; if (blocked_region.includes(region)) &#123; response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123; status: 403 &#125;); &#125; else if(blocked_ip_address.includes(ip_address))&#123; response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123; status: 403 &#125;); &#125; else&#123; let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, upstream_domain); new_request_headers.set(&#x27;Referer&#x27;, url.href); let original_response = await fetch(url.href, &#123; method: method, headers: new_request_headers &#125;) let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;); new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true); new_response_headers.delete(&#x27;content-security-policy&#x27;); new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;); new_response_headers.delete(&#x27;clear-site-data&#x27;); const content_type = new_response_headers.get(&#x27;content-type&#x27;); if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123; original_text = await replace_response_text(original_response_clone, upstream_domain, url_host); &#125; else &#123; original_text = original_response_clone.body &#125; response = new Response(original_text, &#123; status, headers: new_response_headers &#125;) &#125; return response;&#125; async function replace_response_text(response, upstream_domain, host_name) &#123; let text = await response.text() var i, j; for (i in replace_dict) &#123; j = replace_dict[i] if (i == &#x27;$upstream&#x27;) &#123; i = upstream_domain &#125; else if (i == &#x27;$custom_domain&#x27;) &#123; i = host_name &#125; if (j == &#x27;$upstream&#x27;) &#123; j = upstream_domain &#125; else if (j == &#x27;$custom_domain&#x27;) &#123; j = host_name &#125; let re = new RegExp(i, &#x27;g&#x27;) text = text.replace(re, j); &#125; return text;&#125; async function device_status (user_agent_info) &#123; var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123; flag = false; break; &#125; &#125; return flag;&#125; 然后点击运行，就可以反代你需要的网站啦，但是注意，有些网站是无法进行反代的，例如twitter之类的，而且如果原来的网站具有登陆功能，那么这些登陆功能是无法使用的！！！ 加密版（来自旧版文章评论区@Hostloc） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186// 替换成你想镜像的站点const upstream = &#x27;google.com&#x27;// 如果那个站点有专门的移动适配站点，否则保持和上面一致const upstream_mobile = &#x27;m.google.com&#x27;// 密码访问const openAuth = falseconst username = &#x27;username&#x27;const password = &#x27;password&#x27;// 你希望禁止哪些国家访问const blocked_region = [&#x27;KP&#x27;]// 禁止自访问const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;]// 替换成你想镜像的站点const replace_dict = &#123; &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;, &#x27;//google.com&#x27;: &#x27;&#x27;&#125;function unauthorized() &#123; return new Response(&#x27;Unauthorized&#x27;, &#123; headers: &#123; &#x27;WWW-Authenticate&#x27;: &#x27;Basic realm=&quot;goindex&quot;&#x27;, &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27; &#125;, status: 401 &#125;);&#125;function parseBasicAuth(auth) &#123; try &#123; return atob(auth.split(&#x27; &#x27;).pop()).split(&#x27;:&#x27;); &#125; catch (e) &#123; return []; &#125;&#125;function doBasicAuth(request) &#123; const auth = request.headers.get(&#x27;Authorization&#x27;); if (!auth || !/^Basic [A-Za-z0-9._~+/-]+=*$/i.test(auth)) &#123; return false; &#125; const [user, pass] = parseBasicAuth(auth); return user === username &amp;&amp; pass === password;&#125;async function fetchAndApply(request) &#123; if (request.method === &#x27;OPTIONS&#x27;) // allow preflight request return new Response(&#x27;&#x27;, &#123; status: 200, headers: &#123; &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27;, &#x27;Access-Control-Allow-Headers&#x27;: &#x27;*&#x27;, &#x27;Access-Control-Allow-Methods&#x27;: &#x27;GET, POST, PUT, HEAD, OPTIONS&#x27; &#125; &#125;); if (openAuth &amp;&amp; !doBasicAuth(request)) &#123; return unauthorized(); &#125; const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase(); const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;); const user_agent = request.headers.get(&#x27;user-agent&#x27;); let response = null; let url = new URL(request.url); let url_host = url.host; if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; response = Response.redirect(url.href); return response; &#125; if (await device_status(user_agent)) &#123; upstream_domain = upstream &#125; else &#123; upstream_domain = upstream_mobile &#125; url.host = upstream_domain; if (blocked_region.includes(region)) &#123; response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123; status: 403 &#125;); &#125; else if(blocked_ip_address.includes(ip_address))&#123; response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123; status: 403 &#125;); &#125; else&#123; let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, upstream_domain); new_request_headers.set(&#x27;Referer&#x27;, url.href); let original_response = await fetch(url.href, &#123; method: method, headers: new_request_headers &#125;) let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;); new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true); new_response_headers.delete(&#x27;content-security-policy&#x27;); new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;); new_response_headers.delete(&#x27;clear-site-data&#x27;); const content_type = new_response_headers.get(&#x27;content-type&#x27;); if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123; original_text = await replace_response_text(original_response_clone, upstream_domain, url_host); &#125; else &#123; original_text = original_response_clone.body &#125; response = new Response(original_text, &#123; status, headers: new_response_headers &#125;) &#125; return response;&#125;addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; event.respondWith(fetchAndApply(event.request).catch(err =&gt; &#123; console.error(err); new Response(JSON.stringify(err.stack), &#123; status: 500, headers: &#123; &#x27;Content-Type&#x27;: &#x27;application/json&#x27; &#125; &#125;); &#125;));&#125;)async function replace_response_text(response, upstream_domain, host_name) &#123; let text = await response.text() var i, j; for (i in replace_dict) &#123; j = replace_dict[i] if (i == &#x27;$upstream&#x27;) &#123; i = upstream_domain &#125; else if (i == &#x27;$custom_domain&#x27;) &#123; i = host_name &#125; if (j == &#x27;$upstream&#x27;) &#123; j = upstream_domain &#125; else if (j == &#x27;$custom_domain&#x27;) &#123; j = host_name &#125; let re = new RegExp(i, &#x27;g&#x27;) text = text.replace(re, j); &#125; return text;&#125;async function device_status (user_agent_info) &#123; var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123; flag = false; break; &#125; &#125; return flag;&#125; 下篇：Cloudflare Workers绑定自定义域名进行访问 这就是JSPROXY的反代啦，祝各位成功呀！题外话： 下周要考试了，我好方，怎么办 我已经用此方法部署了Google镜像站、Google学术镜像站、wiki镜像站，可以在我的友链界面找到哦~","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"白嫖党教你白嫖Cloudflare Workers反代~","slug":"CloudFlare-Workers","date":"2019-10-25T04:15:20.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/10/25/CloudFlare-Workers/","link":"","permalink":"https://coralare.com/2019/10/25/CloudFlare-Workers/","excerpt":"","text":"注：本页面为旧版本备份，新版本请点我！ CloudFlare一直以其域名托管服务和CDN服务闻名于各位网站管理员，当然我的域名也是托管在这个上面的，后来，有一位被我介绍入CF的同志告诉我CF有种功能。。。（@TheBaiRuo） 就是CF的Workers服务，这是一种能够访问网页时运行特定的JS脚本的服务，所以我们就可以利用它进行 JSPROXY Workers-Proxy（感谢@Anonymous的提醒）的搭建（某反向代理） 前期准备1、一个CloudFlare账号 2、一个域名（可以到Freenom注册一个） 搭建反向代理在这之前，你需要把你的域名托管到CF上！！！ 然后进入CF的workers界面，看下图 进入到Workers后，点击Create a Worker来创建你的第一个JS 然后在workers界面的左边，填入你的JS代码，这时候就需要万能反代代码QAQ 解释一下这个界面： ①项目名称：表现为**[Project].[subdomain].workers.dev**，其中subdomain是你注册workers是输入的名字，project就是项目名称 ②编辑区：就是你放下代码的地方 ③效果预览区：当你按下运行按钮的时候展现出来的效果 ④运行：顾名思义，运行嘛，然后在右边看得到 ⑤保存并部署：部署该项目 将下面的代码放到你的编辑区中： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130// 替换成你想镜像的站点const upstream = &#x27;example.com&#x27; // 如果那个站点有专门的移动适配站点，否则保持和上面一致const upstream_mobile = &#x27;example.com&#x27; // 你希望禁止哪些国家访问const blocked_region = [&#x27;KP&#x27;] // 禁止自访问const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;] // 替换成你想镜像的站点const replace_dict = &#123; &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;, &#x27;//google.com&#x27;: &#x27;&#x27;&#125; //以下内容都不用动addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; event.respondWith(fetchAndApply(event.request));&#125;) async function fetchAndApply(request) &#123; const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase(); const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;); const user_agent = request.headers.get(&#x27;user-agent&#x27;); let response = null; let url = new URL(request.url); let url_host = url.host; if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; response = Response.redirect(url.href); return response; &#125; if (await device_status(user_agent)) &#123; upstream_domain = upstream &#125; else &#123; upstream_domain = upstream_mobile &#125; url.host = upstream_domain; if (blocked_region.includes(region)) &#123; response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123; status: 403 &#125;); &#125; else if(blocked_ip_address.includes(ip_address))&#123; response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123; status: 403 &#125;); &#125; else&#123; let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, upstream_domain); new_request_headers.set(&#x27;Referer&#x27;, url.href); let original_response = await fetch(url.href, &#123; method: method, headers: new_request_headers &#125;) let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;); new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true); new_response_headers.delete(&#x27;content-security-policy&#x27;); new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;); new_response_headers.delete(&#x27;clear-site-data&#x27;); const content_type = new_response_headers.get(&#x27;content-type&#x27;); if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123; original_text = await replace_response_text(original_response_clone, upstream_domain, url_host); &#125; else &#123; original_text = original_response_clone.body &#125; response = new Response(original_text, &#123; status, headers: new_response_headers &#125;) &#125; return response;&#125; async function replace_response_text(response, upstream_domain, host_name) &#123; let text = await response.text() var i, j; for (i in replace_dict) &#123; j = replace_dict[i] if (i == &#x27;$upstream&#x27;) &#123; i = upstream_domain &#125; else if (i == &#x27;$custom_domain&#x27;) &#123; i = host_name &#125; if (j == &#x27;$upstream&#x27;) &#123; j = upstream_domain &#125; else if (j == &#x27;$custom_domain&#x27;) &#123; j = host_name &#125; let re = new RegExp(i, &#x27;g&#x27;) text = text.replace(re, j); &#125; return text;&#125; async function device_status (user_agent_info) &#123; var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123; flag = false; break; &#125; &#125; return flag;&#125; 然后点击运行，就可以反代你需要的网站啦，但是注意，有些网站是无法进行反代的，例如twitter之类的，而且如果原来的网站具有登陆功能，那么这些登陆功能是无法使用的！！！ 加密版（来自评论区@Hostloc） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186// 替换成你想镜像的站点const upstream = &#x27;google.com&#x27;// 如果那个站点有专门的移动适配站点，否则保持和上面一致const upstream_mobile = &#x27;m.google.com&#x27;// 密码访问const openAuth = falseconst username = &#x27;username&#x27;const password = &#x27;password&#x27;// 你希望禁止哪些国家访问const blocked_region = [&#x27;KP&#x27;]// 禁止自访问const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;]// 替换成你想镜像的站点const replace_dict = &#123; &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;, &#x27;//google.com&#x27;: &#x27;&#x27;&#125;function unauthorized() &#123; return new Response(&#x27;Unauthorized&#x27;, &#123; headers: &#123; &#x27;WWW-Authenticate&#x27;: &#x27;Basic realm=&quot;goindex&quot;&#x27;, &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27; &#125;, status: 401 &#125;);&#125;function parseBasicAuth(auth) &#123; try &#123; return atob(auth.split(&#x27; &#x27;).pop()).split(&#x27;:&#x27;); &#125; catch (e) &#123; return []; &#125;&#125;function doBasicAuth(request) &#123; const auth = request.headers.get(&#x27;Authorization&#x27;); if (!auth || !/^Basic [A-Za-z0-9._~+/-]+=*$/i.test(auth)) &#123; return false; &#125; const [user, pass] = parseBasicAuth(auth); return user === username &amp;&amp; pass === password;&#125;async function fetchAndApply(request) &#123; if (request.method === &#x27;OPTIONS&#x27;) // allow preflight request return new Response(&#x27;&#x27;, &#123; status: 200, headers: &#123; &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27;, &#x27;Access-Control-Allow-Headers&#x27;: &#x27;*&#x27;, &#x27;Access-Control-Allow-Methods&#x27;: &#x27;GET, POST, PUT, HEAD, OPTIONS&#x27; &#125; &#125;); if (openAuth &amp;&amp; !doBasicAuth(request)) &#123; return unauthorized(); &#125; const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase(); const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;); const user_agent = request.headers.get(&#x27;user-agent&#x27;); let response = null; let url = new URL(request.url); let url_host = url.host; if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; response = Response.redirect(url.href); return response; &#125; if (await device_status(user_agent)) &#123; upstream_domain = upstream &#125; else &#123; upstream_domain = upstream_mobile &#125; url.host = upstream_domain; if (blocked_region.includes(region)) &#123; response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123; status: 403 &#125;); &#125; else if(blocked_ip_address.includes(ip_address))&#123; response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123; status: 403 &#125;); &#125; else&#123; let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, upstream_domain); new_request_headers.set(&#x27;Referer&#x27;, url.href); let original_response = await fetch(url.href, &#123; method: method, headers: new_request_headers &#125;) let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;); new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true); new_response_headers.delete(&#x27;content-security-policy&#x27;); new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;); new_response_headers.delete(&#x27;clear-site-data&#x27;); const content_type = new_response_headers.get(&#x27;content-type&#x27;); if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123; original_text = await replace_response_text(original_response_clone, upstream_domain, url_host); &#125; else &#123; original_text = original_response_clone.body &#125; response = new Response(original_text, &#123; status, headers: new_response_headers &#125;) &#125; return response;&#125;addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; event.respondWith(fetchAndApply(event.request).catch(err =&gt; &#123; console.error(err); new Response(JSON.stringify(err.stack), &#123; status: 500, headers: &#123; &#x27;Content-Type&#x27;: &#x27;application/json&#x27; &#125; &#125;); &#125;));&#125;)async function replace_response_text(response, upstream_domain, host_name) &#123; let text = await response.text() var i, j; for (i in replace_dict) &#123; j = replace_dict[i] if (i == &#x27;$upstream&#x27;) &#123; i = upstream_domain &#125; else if (i == &#x27;$custom_domain&#x27;) &#123; i = host_name &#125; if (j == &#x27;$upstream&#x27;) &#123; j = upstream_domain &#125; else if (j == &#x27;$custom_domain&#x27;) &#123; j = host_name &#125; let re = new RegExp(i, &#x27;g&#x27;) text = text.replace(re, j); &#125; return text;&#125;async function device_status (user_agent_info) &#123; var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123; flag = false; break; &#125; &#125; return flag;&#125; 下篇：Cloudflare Workers绑定自定义域名进行访问 这就是JSPROXY的反代啦，祝各位成功呀！题外话： 下周要考试了，我好方，怎么办 我已经用此方法部署了Google镜像站、Google学术镜像站、wiki镜像站，可以在我的友链界面找到哦~","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"PIXIV网页版及客户端访问恢复指南（Linux版）","slug":"Pixiv-Nginx","date":"2019-10-04T11:16:38.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/10/04/Pixiv-Nginx/","link":"","permalink":"https://coralare.com/2019/10/04/Pixiv-Nginx/","excerpt":"","text":"Windows版点这里，本文只介绍linux 国庆快乐鸭~ 本周在想，既然Mashirozx的Nginx反代上P站的方案能在Windows上用，那Linux上肯定也是可以的，而且如果是一台linux服务器搭建好了，只需要把host指向到linux服务器上，就可以直接上P站，不用再开Mashirozx的Windows反代工具包了 废话不多说，直接上教程（封面图是从樱花庄的白猫引用过来的） 安装Nginx在这里，我们安装Nginx（既然都是Nginx的反代了，不装怎么可以呢），Ubuntu上使用 1$ apt-get install nginx 就可以安装了，安装完后输入 1$ nginx -t 如果提示 12nginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successful 就证明你安装成功了，当然，你也可以试着访问一下nginx的默认网站 访问localhost即可~！ 克隆工具包1$ git clone git@github.com:mashirozx/Pixiv-Nginx.git 使用上面这个命令来克隆@Mashirozx/Pixiv-Nginx的反代工具包，然后打开文件夹中的“配置文件（非Windows用户使用）”文件夹 安装反代配置进入~/etc/nginx/这个位置，把上面打开的那个文件夹的东西全部都丢进去（此处需要root权限），提示覆盖就覆盖即可！ 然后在~/etc/nginx目录下打开终端，输入以下命令 12$ cd ca$ cp pixiv.net.crt /usr/local/share/ca-certificates/pixiv.net.crt 将证书复制到根证书安装目录下，然后使用该命令 1$ update-ca-certificates 更新证书，这样子你的根证书就成功安装了！ 重载Nginx使用命令 1$ nginx -t reload 重启nginx，然后新配置就会应用到nginx中，这样，反向代理就建好了 修改host接下来，你需要修改ubuntu的host 在~/etc/目录中找到host文件host文件没有后缀名，然后打开它，在里面加入以下内容（摘自PIXIV网页版及客户端访问恢复指南） 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#www.google.com域名仅用于登陆验证#如果你不需要这个功能，请把下一行删掉127.0.0.1 www.google.com#Pixiv Start127.0.0.1 pixiv.net 127.0.0.1 www.pixiv.net 127.0.0.1 ssl.pixiv.net127.0.0.1 accounts.pixiv.net 127.0.0.1 touch.pixiv.net127.0.0.1 oauth.secure.pixiv.net127.0.0.1 dic.pixiv.net127.0.0.1 en-dic.pixiv.net 127.0.0.1 sketch.pixiv.net127.0.0.1 payment.pixiv.net127.0.0.1 factory.pixiv.net 127.0.0.1 comic.pixiv.net 127.0.0.1 novel.pixiv.net 127.0.0.1 imgaz.pixiv.net 127.0.0.1 sensei.pixiv.net127.0.0.1 fanbox.pixiv.net127.0.0.1 i.pximg.net127.0.0.1 source.pixiv.net127.0.0.1 i1.pixiv.net 127.0.0.1 i2.pixiv.net 127.0.0.1 i3.pixiv.net 127.0.0.1 i4.pixiv.net 210.129.120.50 app-api.pixiv.net 74.120.148.207 g-client-proxy.pixiv.net 210.140.131.159 d.pixiv.org 210.140.92.135 pixiv.pximg.net 210.140.92.134 s.pximg.net#Pixiv End# 顺手修一下维基百科# Wikipedia Start127.0.0.1 en.wikipedia.org127.0.0.1 zh.wikipedia.org #中文维基百科桌面版127.0.0.1 en.m.wikipedia.org127.0.0.1 zh.m.wikipedia.org127.0.0.1 zh-yue.wikipedia.org #粤文维基百科桌面版127.0.0.1 wuu.wikipedia.org #吴语维基百科桌面版127.0.0.1 ug.wikipedia.org #维吾尔文维基百科桌面版127.0.0.1 ja.wikipedia.org #日文维基百科桌面版127.0.0.1 zh.wikinews.org #中文维基新闻桌面版# Wikipedia End# 顺手修一下Steam# Steam127.0.0.1 store.steampowered.com127.0.0.1 steamcommunity.com# Steam end 接下来有两种方式让host生效 重启电脑这个不多说了，右上角电源键走起 重启服务使用一下命令来重启networking服务（请用root用户运行） 123$ cd ~$ cd etc/init.d$ ./networking restart 这样就可以立即加载HOST文件，打开你的浏览器，打开P站就可以愉快地浏览图片啦~ 小技巧当你在你的linux服务器上安装了反代服务后，你可以在你的windows计算机上利用host指向到你的linux服务器来达到上P站的目的（当然，你需要安装Mashirozx提供的ca证书） 在host文件中输入以下内容 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#www.google.com域名仅用于登陆验证#如果你不需要这个功能，请把下一行删掉172.52.5.100 www.google.com#Pixiv Start172.52.5.100 pixiv.net 172.52.5.100 www.pixiv.net 172.52.5.100 ssl.pixiv.net172.52.5.100 accounts.pixiv.net 172.52.5.100 touch.pixiv.net172.52.5.100 oauth.secure.pixiv.net172.52.5.100 dic.pixiv.net172.52.5.100 en-dic.pixiv.net 172.52.5.100 sketch.pixiv.net172.52.5.100 payment.pixiv.net172.52.5.100 factory.pixiv.net 172.52.5.100 comic.pixiv.net 172.52.5.100 novel.pixiv.net 172.52.5.100 imgaz.pixiv.net 172.52.5.100 sensei.pixiv.net172.52.5.100 fanbox.pixiv.net172.52.5.100 i.pximg.net172.52.5.100 source.pixiv.net172.52.5.100 i1.pixiv.net 172.52.5.100 i2.pixiv.net 172.52.5.100 i3.pixiv.net 172.52.5.100 i4.pixiv.net 210.129.120.50 app-api.pixiv.net 74.120.148.207 g-client-proxy.pixiv.net 210.140.131.159 d.pixiv.org 210.140.92.135 pixiv.pximg.net 210.140.92.134 s.pximg.net#Pixiv End# 顺手修一下维基百科# Wikipedia Start172.52.5.100 en.wikipedia.org172.52.5.100 zh.wikipedia.org #中文维基百科桌面版172.52.5.100 en.m.wikipedia.org172.52.5.100 zh.m.wikipedia.org172.52.5.100 zh-yue.wikipedia.org #粤文维基百科桌面版172.52.5.100 wuu.wikipedia.org #吴语维基百科桌面版172.52.5.100 ug.wikipedia.org #维吾尔文维基百科桌面版172.52.5.100 ja.wikipedia.org #日文维基百科桌面版172.52.5.100 zh.wikinews.org #中文维基新闻桌面版# Wikipedia End# 顺手修一下Steam# Steam172.52.5.100 store.steampowered.com172.52.5.100 steamcommunity.com# Steam end 其中的ip地址172.52.5.100请更换为你的linux服务器地址！！！ 当你确认已经安装完了证书，linux服务器的nginx服务运行正常后，你就可以打开pixiv愉快地浏览图片了！ 题外话上个月没有写3篇文章，我的问题（给自己的定位是3篇/mo） 国庆我没有咕咕咕，是不是应该夸奖我~","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"手把手教你怎么搭建属于自己的直播服务器~","slug":"srs","date":"2019-09-19T05:23:16.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/09/19/srs/","link":"","permalink":"https://coralare.com/2019/09/19/srs/","excerpt":"","text":"前两个月学校的旧外包跑路了（其实是合约到期了），他们的直播系统就被学校废弃了，那么问题就来了：学校要直播呀！！！没有直播系统怎么办啊！！！ 所以这次就来手把手（按照我搭建的经验）来教你怎么搭建属于自个的直播系统~ PS：可以打开侧边栏看，方便找到需要的内容 准备材料*表示非必需 1、一台linux电脑（windows上没试过，感兴趣的同志们可以试试） *2、一台网页服务器（可以用上面的linux电脑，或者个人电脑） 搭建环境GoLang环境使用命令进入root用户 1$ su 一键安装方式123$ git clone https://github.com/letseeqiji/oneinstall.git$ cd oneinstall/golang$ bash goinstall.sh 直接运行脚本进行安装 Ubantu/Debian用户你可以使用 1$ sudo apt-get install golang 直接安装Go环境，然后设置GOPATH即可 1$ vi /etc/profile 打开文件后，对文件修改，在文件最下面添加 export GOPATH=/goWorkPlace 然后按Esc，保存文件 最后，刷新文件，使更改生效。输入命令 1$ source /etc/profile 二进制码安装方式64位 1$ wget https://storage.googleapis.com/golang/go1.4.1.linux-amd64.tar.gz 32位 1$ wget https://storage.googleapis.com/golang/go1.4.1.linux-386.tar.gz 在/usr/local下安装： 1$ sudo tar -xzf &lt;filename&gt; -C /usr/local 配置环境变量：有三个变量GOPATH、PATH、GOROOT GOROOT就是go的安装路径 GOPATH就是go的工作目录 PATH是go安装路径下的bin目录 1$ vi /etc/profile 打开文件后，对文件修改，在文件最下面添加 export GOPATH=/goWorkPlace export GOROOT=/usr/local/go export PATH=$PATH:$GOROOT/bin 保存文件，刷新，使更改生效 1$ source /etc/profile srs设置使用git克隆代码 12$ git clone git@github.com:ossrs/srs.git$ cd srs 进入srs目录，对目录中的文件进行修改。 打开./trunk/conf/srs.conf文件，对其进行修改 其中有几个参数需要修改： 1234listen 1935; #直播推流的端口max_connections 1000; #最大线程数srs_log_tank console; #srs日志输出位置，可以为console或filesrs_log_file ./objs/srs.log; #srs日志输出文件，当上面为file时必须设置 上面的参数根据自己的需要进行修改，其中max_connections推荐设置为100，否则编译有可能会出错 在root用户中，进入./trunk，使用命令 1$ ./configure &amp;&amp; make 对srs进行编译，编译过程稍长，请耐心等待 当编译完成后，可以使用 1$ ./objs/srs -c conf/srs.conf 打开srs服务器，打开客户机上的OBS Studio（vMix也可以），推流地址填写如下 rtmp://&lt;你的srs服务器ip&gt;:1935/home 推流密钥填写如下 /live 也可以把live换成任意的文字或路径 此时可以使用VLC Media Player来检测是否推流成功，打开VLC Media Player，选择“媒体”-&gt;“打开网络串流”，在URL里面填写你的rtmp地址（包括密钥）例如我的OBS配置如下 那么我就应该填写rtmp://172.52.5.100:1935/home/live 点击确定，可以看到我推流出来的内容 这样就证明我推流成功了！ 网页前端设置我们毕竟是个直播，总不可能每个班级都安装一个VLC Media Player的嘛，所以说，我们要用网页来拉流。 用网页来拉流，就要用到HLS了（具体百度哦~），但是我们要怎么打开HLS呢？ 你需要在你的srs.conf中的 12vhost __defaultVhost__ &#123;&#125; 中加入以下内容（可以直接复制粘贴） 12345678910111213141516vhost __defaultVhost__ &#123; # http-flv设置 http_remux&#123; enabled on; mount [vhost]/[app]/[stream].flv; hstrs on; &#125; # hls设置 hls&#123; enabled on; hls_path ./objs/nginx/html; hls_fragment 10; hls_window 60; &#125;&#125; 然后重新打开srs即可 那么下面的链接应该都可以使用（按照我的填写方法为例） 链接类型 链接 rtmp rtmp://172.52.5.100:1935/live/home http/flv http://172.52.5.100:8080/live/home.flv http/m3u8 http://172.52.5.100:8080/live/home.m3u8 可以利用我们的网页示例，进行调试（请不要使用本地打开文件的方式进行调试，会被拦截） 1$ git clone git@github.com:5amstd/live-system.git 将里面的146行的视频地址更改为自己的视频地址即可 1video:&#x27;http://172.52.5.100:8080/home/live.flv&#x27; //视频地址 然后保存刷新，打开里面的视频播放器（都9102年了还用Flash？？？），就可以看到直播画面了 如果你看到了直播画面，就证明你成功了~ 题外话第一次用Ubantu来搭建项目，感觉Ubantu挺好用的，所以现在两台电脑吧，把我之前的那台DELL OptiPlex 3046拿来装Ubantu了 srs搞了我很长时间，其实最主要的问题是Ubantu（Linux）用的不很熟悉，然后权限问题也很烦 HLS的分发挺麻烦的，查看了很多官方文档，后来在别人的文章里面找到了解决方法 最近喜欢打方舟，有舟游玩家嘛，加波好友啊：喵呜初音#0717（B服玩家哦~）","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]},{"title":"最全面的Hexo部署方法，交给你了~","slug":"hexo-deploy-guide","date":"2019-09-07T12:00:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/09/07/hexo-deploy-guide/","link":"","permalink":"https://coralare.com/2019/09/07/hexo-deploy-guide/","excerpt":"","text":"温馨提示：推荐点击左下角箭头打开目录，方便你更好地找到内容！ 开始什么是Hexo？（我不多BB了，去看官网吧，介绍什么的真的不适合我……） 如何安装？准备工作你需要的东西有： 一个带有Page服务的仓库（推荐Github，Coding） 一台电脑（Windows或Linux均可，差别不大） 最后就是耐心（这个过程可能会很枯燥的说~） 前期准备安装Node.js安装 Node.js 的最佳方式是使用 nvm。nvm 的开发者提供了一个自动安装 nvm 的简单脚本： Curl: $ curl -o- https://cdn.bili33.top/nvm-sh/nvm/v0.34.0/install.sh | sh wget: $ wget -qO- https://cdn.bili33.top/nvm-sh/nvm/v0.34.0/install.sh | sh 安装完成后，重启终端并执行下列命令即可安装 Node.js。 $ nvm install stable Windows 用户对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选Add to PATH选项。另外，您也可以使用Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用Git Bash来进行操作。 Linux 用户大部分 Linux 发行版都会在它们的默认软件包仓库中分发 Node.js。第三方仓库 NodeSource 通常能分发最新版本的 Node.js。 可选操作：由于众所周知的原因，使用npm进行安装速度十分缓慢。也可以参考这个页面，利用国内镜像安装npm模块。 安装GitWindows：下载并安装 git.Mac：使用 Homebrew, MacPorts ：brew install git;或下载 安装程序 安装。Linux (Ubuntu, Debian)：sudo apt-get install git-coreLinux (Fedora, Red Hat, CentOS)：sudo yum install git-core Windows 用户由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考这个页面，收录了存储于百度云的下载地址。 安装Hexo当你确定你已经安装完了Node.js和Git，就可以使用npm安装hexo了，使用 1$ npm install -g hexo-cli 或（安装了cnpm国内镜像的情况下，下面所有的npm命令均可换为cnpm命令，下面不再说明） 1$ cnpm install -g hexo-cli 初始化Hexo文件夹在你认为合适的地方新建一个文件夹，文件夹名字自拟，然后使用 1$ hexo init 来初始化你的文件夹（文件夹必须是空的），并且使用 1$ npm install 来安装相关的依赖库！ 配置网站当你安装完所有的依赖以后，你就可以配置你的网站。 你也可以使用 1$ hexo s 来进行本地调试，在浏览器中输入localhost:4000进入自己的网站。 关于hexo目录下的_config.yml文件 123456789101112131415# Sitetitle: &lt;title&gt; #自己的网页名字，将在标签页标题中显示为&lt;title&gt; - &lt;subtitle&gt;subtitle: &lt;subtitle&gt; #副标题，在标签页标题显示description: &lt;descr&gt; #网页描述（讲真我不知道有啥用）keywords: &lt;keywords&gt; #网页搜索关键词author: &lt;author&gt; #网页作者language: en #网页语言，若主题支持中文可以不用改timezone: #时区，可以不改# URL## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;url: http://yoursite.com #网页网址，一般填写主页的地址，例如我的网页就填http://bili33.toproot: / #网站根目录，可以不改permalink: :year/:month/:day/:title/ #网页永久链接格式，可以自己修改permalink_defaults: 关于主题： 主题可以去https://hexo.io/themes/找，也可以在github逛一逛，说不定就找到好主题了呢？ 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: landscape # 主题名字，landscape是默认主题，改成你的主题文件夹的名字即可！ 在clone的时候建议用git clone &lt;address&gt; theme/&lt;theme name&gt; 这样方便管理~ 关于主题的配置，详情请见各主题说明文档！ 部署网站在准备东西的时候，我们准备了一个github（或coding）账号，下面以github为例子 在Github中新建一个仓库，仓库名自拟，也可以采用官方格式&lt;username&gt;.github.io，一定要设为公开仓库（有Github Pro的当我没说） 然后回到你的hexo文件夹，打开命令窗口，输入 1$ npm install hexo-deployer-git --save 来安装git的部署器，其他部署器请看这里 打开_config.yml，拉到最底下，会发现有个Deployment，你可以按照我下面这么填写 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &lt;repo address&gt; # 请替换为你的仓库地址！ branch: master 填写完成后，保存即可，然后打开命令窗口，使用 123$ hexo clean #不是必要的$ hexo generate$ hexo deploy 来部署你的网站，其中generate可以简写为g，deploy可以简写为d，如果觉得打两行命令太麻烦，可以使用 1$ hexo d -g 一条命令来直接部署，省去不必要的麻烦。 你也可以同时部署多个仓库，例如 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &lt;repo1 address&gt;,master # 请替换为你的仓库地址！ repo: &lt;repo2 address&gt;,master # 请替换为你的仓库地址！ 这样编写的话一次部署，两边的仓库都会上传~ 部署完成后，请到你的Github仓库的设置中，找到Github Pages，将source选到master branch来打开Pages服务！ 撰写文章你可以使用 1$ hexo new &quot;&lt;article name&gt;&quot; 来创建一篇文章，它会出现在source/_posts中，是一个.md文件，使用md编辑器打开（推荐Typora）编辑即可，支持markdown和html语法 小技巧添加自定义域名每次部署hexo都会清除你的库并且重新部署，这意味着如果你在Github的设置中添加自定义域名（会生成CNAME文件）每次都会被清除，为了避免这种麻烦，我们可以使用在source文件夹里新建CNAME文件 并且在CNAME文件中填写你的域名 这样就可以避免每次部署都清除掉自定义域名，导致网站404了~ 自定义404页面你可以在/themes/&lt;themes name&gt;/source中放置你的404页面，当你的网站页面不存在的时候，就会显示404页面，可以引用css文件和js文件，只要跟404页面放在同一目录即可！ 如何直接看到404呢？你可以直接在网站后面加上/404就可以进入404页面了~ 添加看板娘（live2d）你是否也想像我一样领养一只猫呢？或者领养一只~ 回归正题，我们要怎么领养一只萌萌哒看板娘呢？当然还是要用到插件的说~ 先安装插件hexo-helper-live2d 1$ npm install hexo-helper-live2d --save 等待安装完后，在你的网站根目录的_config.yml中加入（可以直接复制粘贴） 123456789101112#hexo-helper-live2dlive2d: enable: true #是否开启显示 pluginModelPath: assets/ model: use: live2d-widget-model-tororo #模板目录，在node_modules里 display: position: right width: 150 height: 300 mobile: show: false #是否在手机进行显示 然后，找到你喜欢的模型进行安装，并把model的use属性的文本改成你安装的看板娘的文件夹名字（在node_modules里面）即可！ 这样你就可以像我一样领养一只萌萌哒看板娘了~ 搜索引擎站点认证当你提交站点到搜索引擎的时候，免不了的就是认证你的站点。当然，认证方式有很多种，例如什么把标记放在&lt;head&gt;&lt;/head&gt;之间啦，什么文件认证啊之类的，太多了 当然最方便的就是文件认证了，下载一个文件到本地，然后传到你的网站上面。 有的人就会问了，文件要放在哪里呢？ 其实有两个地方都可以放，一个是根目录的source文件夹，另一个就是主题里面的source文件夹，都可以放，放在这两个文件夹的根目录即可！ 添加站点地图当你想让你的网站被Google或者Baidu什么的收录的时候，你就需要用到站点地图。 使用以下命令安装站点地图插件 12$ npm install hexo-generator-baidu-sitemap --save #安装Baidu的站点地图，为Baidu优化过的$ npm install hexo-generator-sitemap --save 然后打开网站根目录的_config.yml文件，加入以下条目： 12345678Plugins:- hexo-generator-baidu-sitemap- hexo-generator-sitemapbaidusitemap: path: baidusitemap.xmlsitemap: path: sitemap.xml 这样每次部署就会生成一个baidusitemap.xml和一个sitemap.xml文件，用于提交站点地图 这里以google为例子描述怎么添加站点地图 当你的网站提交到Google后，为了点击量高，我们会提交站点地图，在左边的栏目中选择站点地图，然后在上面”添加新的站点地图”中填写&lt;Your Link&gt;/sitemap.xml即可，Google会定期收集你的站点，并且展示在搜索结果上 添加RSS订阅虽然我不知道这年头谁还用RSS，但是有好过没有嘛 先打开命令窗口，然后输入命令安装插件 1$ npm install hexo-generator-feed --save 安装完成后，在网站的根目录中的_config.yml中，加入以下内容 12345678#RSS订阅plugin:- hexo-generator-feed#Feed Atomfeed:type: atompath: atom.xml #RSS文件名字，可自定义limit: 20 当你加入RSS订阅按钮的时候，就可以设置链接到你的/atom.xml文件（RSS文件名字改过的当我没说），这样当别人点击你的RSS按钮时，就会弹出订阅提醒，让别人订阅你的网站。 按钮调用邮件应用如果你想让别人联系你，那么最方便的方式就是通过电子邮件了。如何才能让别人点击链接或者按钮直接调用邮件应用发邮件给你呢？实例 在文章中，可以使用这样的编写格式 1[&lt;Text&gt;](mailto:&lt;Email Address&gt;) 这样当别人点击&lt;Text&gt;的时候，就会调用电子邮件应用，同样如果是按钮的话，只需要将按钮的链接设为 1mailto:&lt;Email Address&gt; 即可调用电子邮件程序！ 结尾Hexo的教程我就写了这么多，可能有些没写到的或者我没想到的，有可能在将来会偶尔更新一下这篇文章，当然，如果你有什么问题，欢迎发邮件到admin@bili33.top来与我探讨，我非常欢迎！如果你想与我交换友链，请到友情链接网页的评论区留言，我有时间会看评论的~商业网站勿扰哦~","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"白嫖Office365？这种好事我当然要来！","slug":"Office365","date":"2019-08-30T11:40:19.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/08/30/Office365/","link":"","permalink":"https://coralare.com/2019/08/30/Office365/","excerpt":"","text":"本方法存在局限性，尝试之前请确保你有让微软讲你的账户认定为开发者的能力（如频繁调用api等），如果你只是搀着onedrive的5T空间，那么我推荐你直接拉到题外话中的网址领取 相信很多人都在用Office，用的要么是WPS Office，要么就是Microsoft Office。正版的Office365价格贵得要死↓ 所以今天，我就来教教怎么获取免费的Office365（而且还是管理员哦~） 准备工作你需要准备：一个微软账户（个人用户，即非企业用户） 获取Office365账号网址我贴在这里啦：https://developer.microsoft.com 进入以后发现里面有四个按钮 稍微解释一下，第一个和最后一个想必不用说了吧，都是熟悉的东西；第二个是微软的云服务平台Azure，第三个是微软的开发者软件Visual Studio（我还是喜欢VSCode），在这里我们点击Office，其他有需要的自己斟酌哈~ 会看英文的小伙伴们就知道点哪个，不会看的我告诉你是先点右上角sign in 登录自己的账号后，点上面的Developer Program，进入开发者计划页面，点击中间那个最大的按钮写着JOIN NOW的~ 点进去后会看见一个全英的界面，在第一个选择框里选择”China”（当然你要选其他国家我也没意见），第二个的Company填写你自己想要的名字，因为微软给的管理员账号是&lt;username&gt;@&lt;domain&gt;.onmicrosoft.com（自定义域名除外），所以你设定的名字需要尽量跟后面设置的一致。 设定好后，把下面两个勾给勾上，点击NEXT 然后微软就会问你一堆问题 像下面这样： 看得懂英语的自己选择，但是在Products里面最好全部勾上，这样你就能使用所有的功能。如果看不懂英语，那么第一个问题和第二个问题请选择Personal Projects（第四个选项），第三个Products和第四个Technologies全部勾上，最后一个问题随便选择一个即可（如果你不是真的要开发的话），全部选择完以后点击下方的JOIN即可！ 然后你就会像我一样被导到这个界面，说明你已经成功注册了！ 点击下方的SET UP SUBSCRIPTION会弹出来一个小窗，第一个不用说，之前选什么现在就选什么，第二个create username是设置邮箱前缀，create domain就是上面提到的在邮箱后缀的第一位的东西，自己喜欢，但是尽量跟前面一致！下面两个框都是让你输入密码，输入完以后点下面的Continue即可！ 然后就会弹出提示，要你输入手机号码 输入完了点击下面的send code，就会有短信发到你的手机，后面我不用说都可以解决了吧~ 2020/4/27更新 保命需要，教程在这 题外话：这个Office365需要用户足够活跃，每次的订阅周期为92天，过了92天就会检测用户是否足够活跃，如果不活跃则会被删除所有数据（当然你再注册也是可以的），所以比较推荐多人用一个组织。 1、你的姓名（可以是假名，我不在意）2、显示名称（类似你在登录win10前的用户名）3、邮箱前缀（就是@前面的那一串）4、接收账号密码邮件的邮箱（如果没收到请检查垃圾箱！）当我为你创建账户后，我会通过邮件通知你，也会把账号密码发到你的邮箱！说明：我使用的也是这种office（92天订阅期），所以为了避免office删除组织后文件丢失，请不要把贵重文件放在onedrive中，丢失概不负责！（表示微软并没有给我续费。。。） 如果不能确保自己能够被微软认定为开发者，那么我推荐你到http://233455.xyz:3000/（好像已经失效了？）去领取一个临时邮箱注册edu版（注：此edu注册的账户仅提供5T的onedrive空间，若需要office授权，请在该网页下面的使用规则查看）祝大家白嫖成功~~~","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"被限速的日子，该过去了！","slug":"BaiduNetDisk-Limit-Break","date":"2019-08-04T09:07:20.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/08/04/BaiduNetDisk-Limit-Break/","link":"","permalink":"https://coralare.com/2019/08/04/BaiduNetDisk-Limit-Break/","excerpt":"","text":"本教程可能已经过时鉴于Pandownload网页端经常服务器维护，本页面教程可能已经过时！ 辣鸡百度云，又限我速！ 百度云天天限速，8M/s的网速硬生生被拖到8kb/s，太真实了，这限速估计也烦了不少人，但是用speedpan之类的软件可能就有封号风险，所谓的封号不是封禁账号，是直接断你的线程断剩下一个，这样就可以拖慢你的网速。 那么我们要怎么样不被封号的同时又能告诉下载呢？（鉴于好多小伙伴看不懂我的在线版本教程，所以我在2019/8/13修改了教程，只剩下普通版） 第一步、部署本地aria2下载Aria2c All In One工具包，然后打开里面的start.bat文件，会弹出一个cmd窗口，防火墙提示请允许！你也可以打开start-vanish.vbs文件，这样就不会弹出cmd窗口，若要关闭Aria2c，直接双击stop.bat即可！ 1、开启aria2直接点开文件里面的start.bat文件就可以打开aria2，但是这样做就会生成一个窗口，有些人就认为它不美观，不想要它，那就可以打开文件里面的start-vanish.vbs，就可以做到既没有窗口又可以打开aria2 2、配置aria2①、第二十七行12# 单个任务最大线程数, 添加时可指定, 默认:5split=5 split后面的数字随便改，只要你认为你的电脑能吃那么多的线程。 ②、第六十一行12# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项#rpc-secret=secret 这是你的aria2密钥，不过如果你是本地用或者局域网内用就不建议设置密钥，rpc-secret前面的#去掉，然后把后面的secret改成你自己的密钥即可！ 第二步（可选）：部署ariaNg下载AriaNg文件，并解压到自定义目录 打开里面的index.html文件，进入AriaNg设置 填写以下内容： Aria2c RPC 别名：【自己填写】 Aria2c RPC 地址：127.0.0.1或localhost 6800 jsonrpc Aria2c RPC 协议：HTTP Aria2c RPC HTTP 请求方法：POST Aria2c RPC 密钥：（填写自己的密钥，默认为空） 第三步、打开你的分享链接，在分享链接后面加上wp进入PanDownload[无图警告] 第四步、点击想下载的文件，选择Aria2下载，输入内容如下：主机：127.0.0.1 或 localhost端口：6800 （如果自己改了端口就请填写自己的）密钥：（默认留空，如果设置了密钥就填写密钥）下载路径：（填自己电脑的文件夹路径，例如C:\\Users\\GamerNoTitle\\Download，就是我的文档里面的下载文件夹）（以下是一个例子，请不要按照我这么填！！！） 填好以后点确定会直接开始下载 这种方式是可以飞速下载的，当然这样下载的结果就是文件存放在了自己设定的目录。 忘了说了，pandownload是有每日获取次数限制的，限制是限制公网ip，也就是同网络下一个人被限制了，其他人也会被限制，不知道具体是多少次。。。 祝各位突破限速成功！ 封面下载（来自Watch_Dogs 2）：点我下载！（4K图） 狗二图包详见育碧！","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"“这个故事由我开始，也应由我来结束”","slug":"666","date":"2019-07-13T04:00:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/07/13/666/","link":"","permalink":"https://coralare.com/2019/07/13/666/","excerpt":"","text":"小编：本页面展示的为和谐号（你懂的），原版在文章末尾有下载链接第一章：GG之外的往事 —— 罗伯·氘特森老师推了推黑框眼镜，一位三十左右的中年男人站在GG中学的门口。 “这就是传说中的那所学校么？还真不赖呢！” 罗老师是四川人，当年高考的时候因为一道选择题分数之差，含恨考进师范学院，光荣地成为了一名人民物理教师，毕业后先在四川内地教学，而后转入KK市。 “欢迎您，罗伯·氘特森老师，请随我来。” 一位彬彬有礼的绅士引导着罗伯·氘特森老师，很快他们来到办公室。 “校长先生，罗伯·氘特森老师到了。” “请进。” 推开门把手，一位如狮子般威猛的大汉坐在办公室的中央，脸上的皱纹并不能掩饰他目光中寒冷的杀气，杀人的目光仿佛要将来者吞吃。 “坐。”他似乎没有张开口说话。 “听说你是四川内地的物理老师，让我来出几道简单的题目考考你，就当作是你的入职测试了，如何？很好，下面是第一题。” 他的双眼仍斜视着桌面，一动不动。 “宏观上宇宙的构成？” “4.9%的普通物质，包括恒星行星、气体和尘埃，26.8%的暗物质，和68.3%的暗能量。” “很不错。第二题：简单介绍下与门。” 罗老师的嘴角上扬了5.6°，这以后，“5.6°的微笑”成为了罗老师独特的标志。 “利用内部结构，使输入两个高电平1，输出高电平1，不满足有两个高电平1，则输出低电平0。” “你令我很吃惊，那么，接下来……” “别问了。” “什么！” “别问了，我可不想，像我面前的这个人一样。” 罗伯·氘特森用手用力一推，那具冰冷的躯体砰然倒地，发出沉重的砸地声，他的后脑勺有一个金属物件，那应该就是小型扬声器。 “看来这里的气氛很不友好，告辞。” “请留步，罗伯·氘特森先生。” 办公室后的墙壁缓慢转动，一名体型微胖的中年男人出现在墙后。 “他曾经是学校最得力的保安，——曾经。唉，可惜他知道了他不该知道的事情。哦，忘了自我介绍，我是GG中学校长——我叫孟梦。几年来，我一直在用这种压抑、恐怖的手法来测试应职老师的文化素质和心理素质。当然最重要的一点是，找到能够参与那个计划的候选人。” “那个计划？” “罗伯·氘特森先生，我现在以GG中学校长的名义，诚挚地邀请你加入GG中学自主承办的领军计划，让我们一起，打造一个强悍的高校吧！” “可笑的疯子，再见！” 罗伯·氘特森走到门前，用力推门把手，突然整个人抽搐了一下，瘫坐在地。 “可恶，怎么会……” “被人体承受的极限电压电击到是种什么感受？现在只有从我身后的通道才能离开这里，来吧，加入GG中学，加入我们，你是我有生以来见识过的最优秀的物理教师，我们一定可以完成这个伟大的计划！“ 坐在冰凉的地板上，沉默许久。 “好吧，我加入。” 孟梦激动地握住罗伯·氘特森老师的手，说出了那句令他终生难忘的话： “现在，我们是同志了！” 从此，罗伯·氘特森老师开始了在GG中学教书的苦逼之旅，其风格风趣幽默，深受学生喜爱。由于班主任工作出色，被评为“KK市名班主任”。罗伯·氘特森老师在教学中还创造出几种解物理题的方法： ①秒杀法此法以快而著称，用于选择题。旨在用最短的时间，在大脑中瞬间建模分析计算，直接得出结论，选出选项。使用此法需思维善于跳跃、灵活。其优点是解题速度极快；缺点是做得对才怪。 ②走人法此法十分之巧妙，用于选择题或解答题，旨在在卷子上直接写出得分公式就直接离开试室，走出考场，不必算出结果，使用此法需熟练掌握公式并灵活运用。此法优点是写完就走，不用回头，十分霸气；缺点是物理成绩作废。 ③不看其他选项法此法为“氘氏之法”中最玄妙，最难掌握的一法，用于选择题，旨在不看题干，只看答案，直接选出正确选项，其他的选项不用看，该法配合秒杀法可称霸物理选择题。其优点是掌握以后物理选择题全对；缺点是你根本学不会。 每日氘语：氘曰：“请注意” 氘曰：“这种题看天气预报就会了” 氘曰：“直接写出公式就可以走人了” 氘曰：“自欺欺人” 第二章：领军纪年第2年 —— 才筠与溶玄[作者：是“寸”哦（原稿作者将“寸”写作“才”，下面文章沿用作者的写法），再次说明，筠读作yún写作jūn]新学期开始，班里来了两位新同学。 “各位同学，他们是这个学期转学过来的两位新同学，大家以后要多多关照。”班主任罗伯·氘特森说。 陆般把目光投向两位新同学，男生的个子比女生高出了一截，男生应该有170，而女生则可能没到160。他俩手紧紧握着，显得有些紧张。 “不是兄妹就是情侣了。”陆般想。 两位同学依次上台自我介绍。 “大家好，我叫才筠。我来自……自……咦？记不起来了。” “我们都记不起来。”台下的同学异口同声地说道。 “噢……我有着一些独特的爱好，像调墨与古风音乐，很难想象一位男生喜欢这些，但这的确是我的个人爱好。”[作者：不很喜欢，炸厕所才是最妙的风格] 台下响起鼓励的掌声。 “旁边这位是我的……嗯，从小玩到大的好朋友。她叫溶玄。”说到这里，才筠羞涩的脸颊不免泛红。 台下已经开始热议。 女生走上台，害羞地说：“我叫溶玄，第一次来到新班级里有些不适应呢，希望大家多多关照哦，我们一定能成为朋友。对了，我喜欢旅游，最想去的地方是美利坚合众国。The United States of America。” 台下一片惊呼，她的口语竟这么流利标准。 “为什么是美国？”罗伯·氘特森老师带着5.6°微笑问。 “因为……” 溶玄抬起头，本想望望那碧蓝的天空，装作自己在面带微笑地遐想，结果并没有。教室的上端只有洁白的天花板。也罢，将就着看看吧。 “那里可是有我最喜欢的自由女神雕像啊！” 台下又是一片热烈的掌声。 伴随着众人的目光，两人手拉着手走下台。罗伯·氘特森老师保持着微笑跨上讲台： “谢谢两位同学精彩的自我介绍，相信有你们的加入，六班一定变得更团结，更有活力。才筠和溶玄两位同学纯真的友谊我们有目共睹，希望你们能在高中时期把持情感，携手共进，共同进步。”他停顿了一下，低着头，像是在思韵。 “在这个绽放青春的时代，每个人都应该有自己喜欢的人，都应该被人喜欢。” [作者：感谢35号ZQ（小编：没有征求本人意见，先不打出真实姓名）同学的日志记录，不然我还真记不起罗涛老师讲了啥]第三章：领军纪年第2年 —— 陈瑞端&amp;钟俊华“啊，好痛，我在哪？” “你醒了？”瑞端朦胧的双眼已看不清来者。但依稀地可以听出此人的声音。 “你是……俊华？” “是我。” “怎么回事？我在哪？我只记得我在GG篮球场打球时被一个飞来的球砸晕，然后什么也不记得了。” “唉，说来话长。我和你慢慢讲吧。” 陈瑞端与钟俊华是一对非常要好的朋友，两人经常一起打球，一起吃饭，一起打游戏，一起搞……然而，变故发生了。 这原本起源于一场误会，但这却引发了出人意料的后果，也许罗伯·氘特森至终都不会知道，自己会栽在这两位的手中。 时间回到领军纪年元年，一天的晚自习课。 “钟俊华、陈瑞端，你们两个出来。”推门而入的罗伯·氘特森大声说道，原本安静的教室马上喧闹起来。 “你看看这个，”罗伯·氘特森拿出手机，打开一段视频，让俊华凑上前看，“你自己看看，你在干什么？” 俊华瞬间懵了，他自己都不记得他当时在干啥：“我没干什么。” “你手里拿的是什么？” “我没拿什么啊？” “你还跟我争，你自己看视频，我给你看三遍。” 俊华认真看着，画面中的他将双手放在课桌柜里，鬼鬼祟祟地摆弄着什么。目光斜视，紧张的神情中夹杂着一丝喜悦。这一举一动，不是在看小黄书就是在玩手机。 “说吧，你在干什么？是不是在看小黄书？” “我真没有，我当时在翻化学课本写学评。”钟俊华突然想起来，争辩着。 “你看视频。” 就这样争论了半天，罗伯·氘特森还是被气走了，即使俊华真的没看小黄书。 俊华因为受到误解，肚子里也有一团火。进班时“砰”地一声，将门重重摔上。 很快，罗伯·氘特森阴沉着脸回来了。 “谁摔的门？”罗伯·氘特森像一只发怒的狮子。 “我。”俊华平静地说。 “很好，钟俊华，你跟我过来办公室。“ 俊华起身离去，他并不知道，这一走，就是一个月。 当天晚上，一个人被扔出了GG外。 罗伯·氘特森狞笑着，对那个被扔出去的人说： “无心学习的废物，就应该被当做垃圾扔掉啊。” 另一位捞仔陈瑞端的遭遇也大致相同：网瘾突发，溜去电脑室打电脑，误打误撞闯入了神秘的”0室“禁区，也在当天下午被飞来的篮球砸晕，然后被扔出了GG。被击中时，瑞端躺在地上，篮球场下午的阳光仍旧火热，橡胶地面像一块烤肉的砧板。但火辣的灼烧与刺痛感仍旧无法挽回这个失足少年的神智，眼前的黑暗即将将瑞端吞噬，他拼尽全身力气，喊出了他昏迷前的最后一句话： “猛龙总冠军！”（俊华说：勇士总冠军） “同学们，俊华和瑞端两位同学因球技过人，已被东莞银行篮球教练看中，他们被招标去外地训练，可能会暂时离开我们，让我们一起……” “……祝他们好运！”罗伯·氘特森阴沉着脸说。 “我就是这样被扔出来的。”俊华对瑞端说。 “那么我呢？” “不很清楚，不过肯定是触犯了GG的某个禁忌，才会被扔到这里。” “这里是哪？” “麒麟山山洞，GG的后山。” “我在GG呆了那么久，还从来没听说过或看见到过GG有什么后山。” 俊华叹了口气，说道： “你当然不知道，GG所有的学生，包括我，都不知道GG有后山。” “为什么？” “因为现在知道这座山存在的同学，除了你我，其他人都死了。” 瑞端猛地把被子掀开，从床上跳下来。 “你说什么？” “是的没错，他们都死了。“ “可是，怎么会……” 俊华摆摆手，接着往下讲： “他们用了些小手段，将GG和外界隔离开了。” “那是什么？你又是如何知道的？” 俊华又叹了口气，他需要喝口水。 第四章：领军纪年第2年 —— 魔术“你跟我来。”俊华带瑞端进入了一个小房间。 房间里很阴暗，但隐隐约约地看得出来桌上有四块凸透镜，一个光具座和一个背景板。 俊华打开手电，房间里顿时光亮了许多。 “接下来，我来表演一个魔术。” 俊华拿起四块凸透镜，将它们安放在光具座上，每个凸透镜减有一定的间隔，且从中间对称摆放，然后他拿起背景板，装在光具座的最后方。 俊华把手指放在第一块与第二块透镜之间，他的手指消失了！而背景板仍可完整地被看见。 “这……”物理课都没认真听过几节的瑞端居然也开始认真思索着。 “当我们看到一个东西时，我们真正看到的是光频率和物体之间的相互作用。在这个魔术中，四块透镜间焦距不同，手指反射出的光线，经过四块透镜改变了折射率，光路变窄，使其发出的光线最终无法被我们的视网膜接收，看起来就像手指隐形了。”思维跳跃的人能力就是强。 “嗯……”瑞端若有所思地点点头。 “明白了这个，你再出去看看。” 瑞端走出山洞，望了望四周，与他料想的一样，根本看不到学校。 “他们应该用了类似的方法改变了光的折射率，使GG中学在外界看来是完全隐形的。”俊华顿了顿，继续说道：”我早就留意到了，后来我才知道，那些灯都是投影仪！整个GG的天空都是一大块投影布，那些投影仪将外面世界的一花一草、一树一木、太阳月亮、行人车辆都完整地投影在内部的投影布中，让我们这种无知的学生信以为真，为保持我们这些弱小虫子的生命，GG应该还配备一套完整的生态循环系统，更新空气，促使有机物分解，虽然我不知道这些装备GG是从哪里弄到的，但可以肯定能的是——他们用政府的钱，干出这一些伤天害理的事！” “不仅如此，他们还将那些违纪违规、不善于学习的同学通通扔到麒麟山，不给他们食物，让他们活活饿死，那些同学，包括我们，都无法走出麒麟山，只能在挨饿的痛苦中死去，我俩差点栽在这些野兽手里！” 俊华说道，愤怒地捶了捶洞壁，虽然很痛。 “原来是这样……他们的目的是什么？”瑞端问。 “目的……瑞端，你仔细想想，一个只留优生，不留差生，清除了学生入校之前的记忆，给他们洗脑，告知他们只有高考完后才能离开学校，并强迫学生整天学习的学校的升学高优率能恐怖到什么程度？学生毕业后再清除他们有关高中的一切记忆，这一切都好像从未发生。高优率远高于其他学校，这样学校就能吸引到更多愚昧的家长，用所谓的”孩子美好的未来“去迷惑他们，鼓励他们，将孩子送入GG，当然每个学期的学杂费都价格不菲。GG也就能赚到更多的利润。所有入学的学生，家长都为他们签了一份生死状，只要触及违令或成绩实在太差，学生都会被处理掉。家长不能报警，否则也会有生命危险。这些丧心病狂的家长和他们对自己孩子成绩和品行的极度自信，才导致一个有一个的悲剧发生。而这，就是GG的‘领军计划’。” “原来周末真能回家，这也太可恶了……话说回来，你又是如何知道这些事情的？还有，这一年以来，你是如何生存下来的？”瑞端不解地问。 “是A，他在内部已经知晓了这个秘密，他知道我们还活着，从‘0室’的密道里来到麒麟山，将水、食物等生活物资递给了我。我们才能够活下来，具体以后再说。现在的任务是如何逃出去，向外界求救。既然你醒了，我们休整一下，明天马上行动。” “居然是A这小子，平时看她不正经，学习起来好像也不咋地，成绩却还可以。” 俊华走到洞口，望着头顶投影出来的星辰，感叹道： “我们都是阴沟里的虫子，但总得有人仰望星空。” 第五章：领军纪年第2年 —— 俊华瑞端失踪两天后早在与A交谈时，陆般就感觉到有些不对劲，为什么自己入学以前的事不记得了？为什么高考完后才能离校，这真是教育局规定的？还有最重要的一点：为什么饭堂三楼的饭菜这么难吃？ 随着俊华和瑞端的失踪，陆般开始警觉起来，对学校违令的“禁区”愈发好奇，联想到A与史克经常去的“0室”，陆般决定一定要去到里面一探究竟。 首先得想办法进去，而想进0室得先弄到密码。 “A，最近皇室（战争）有个十二胜公主挑战，打满可拿到新的公主表情，我帮你打，保证打满，怎么样？” “真的吗？太好了，谢谢你。我很喜欢公主的那个新表情。” “不过你得告诉我0室的密码。” “0室密码？想都别想，这是学校最高机密，况且0室是禁区，只有我和史克能进入，公主表情我还是自己打吧。” “加上下一次的全球锦标赛和选卡挑战。” “行，成交！”A爽快地告诉了密码。 接下来就是保安了，0室禁区的保安巡逻异常频繁，很难有机会溜进去。不过俗话说：“百密而一疏”，经过多次踩点，观察，陆还是找到了机会，每周日下午，几个保安都会经不住奶茶的诱惑，在奶茶店点上几杯奶茶坐在一起聊天、打游戏，时长为一个小时左右，而这正是陆的最佳时机。 刚一进门，陆就被这里的环境吓到了：一大堆的文件资料堆在墙角，地上密密麻麻全是网线，有四五台主机在嗡嗡作响，几台终端机还亮着，里面简直就是一个作战中心。 很快路陆般回过神来，他明白自己要干什么。他走到一台终端机前，手指敲击键盘，移动鼠标。 “欢迎来到0室，或者你可以叫它：学生档案中心。”A和史克如鬼影从一旁的侧门出现。陆般吓了一跳，瘫坐在椅子上，心脏在疯狂地搏动。 “你们怎么知道我会来的？” “要密码，常踩点，有事没事盯着0室，不是想要进来玩玩还能是干什么？”史克诡异地笑着对陆说。 “我早就警告过你了，0室是禁区，只有我和史克才能进入，其他擅自靠近禁区的人，哼！保安马上就到，陆，你还有什么想说的吗？” “可恶，”陆般无奈地撞了撞地板，“难道你们不觉得学校很奇怪吗？你们真的对自己过去的记忆丧失没有一点怀疑？GG肯定有鬼！还有，俊华和瑞端的失踪，你们真能相信罗伯·氘特森那所谓’训练‘的说辞？” A和史克相视一笑，看来我们又有新的力量了！ “抱歉，陆般，让你受到了惊吓。但我们必须测试一下你是不是学校的人，我们早就察觉到了学校的不对劲，关于俊华和瑞端的失踪，我们也清楚他们到底去了哪。”A对陆说道。 “这里本是学生档案中心，专门管理学生入学前后档案，于是档案管理过于复杂且需一定的电脑技术，学生处主任刘锋事务繁杂，只能将0室交由他最放心的学生——我们前去管理。可惜啊，他最放心的两位学生居然背叛了他。 “我们原本和你一样，也只是只听从命令的机器而已，直到我们发现了这个。”A走到一台终端前，手指飞速操作，因为他知道他们聚会的时间有限。 “这貌似是一名保安的日志，”A打开了一个很隐秘的文件夹，里面有三十多份.txt文稿。“这些日志原本保存在一个U盘中，我和史克来到0室后不久就发现了它。这30多份日志可不简单，它们包含了GG所有的秘密。我们由此有了自主意识，并一直在寻找可信赖的同学加入我们。幸运的是，我们找到了GG第一个有自主意识的学生——你。“ “我？” “是的，GG的学生都丧失了他们的自主意识，成为了只会学习和听从指示的机器。而你不同，你是完全独立拥有自主意识的第一人，你意识到GG的危险，并果断采取行动，我们无从得知你的自主意识哪来的，但可以肯定的是——” 史克握住陆般的手：“我们，是同志了。” 迅速浏览完日志，陆般随着A来到了0室的一面墙处。史克在一台终端机上操作了一下，陆面前的墙缓缓打开了。 “没有错，0室还有一个不为人知的密道，这个密道我们也是从保安的日志中得知的，修建的原因不清楚，但密道的另一端连接着麒麟山的山洞内，俊华和瑞端就在那儿。” “我明白了，话说那个发现GG秘密的保安怎么样了 ？” “他被抓了。” “……” “很遗憾，我们在第34篇日志中没能看到完整的信息，应该是他在急忙中拔下了U盘，我们推断，他应该是被发现了，情急之下他只给我们留下有限的34篇日志。”史克说。 “他是个英雄。”A说。 陆般走到窗前，拉开窗帘，夕阳的余晖正洒在这篇是非之地上，微弱的阳光照亮了面对它的0室，也照亮了陆般面面颊上晶莹的泪光。这位素未谋面的保安，为GG的学生能够回家带来了一丝希望。 后记：一直想对短暂的六班说的话（By XZW）我不知道，六班的小伙伴们对我的印象如何，上次研学科给他人贴标签那次的活动我没有参与。我并不是特别想让其他人来评价我，但同时，我又十分在乎别人对我的评价。在这短暂一年的共处时光里，我希望我能留下好印象给你们。如果曾经我做错过什么或伤害了某个人，那就在这里说一声抱歉了。 其实我觉得高一六班是一个很团结友善的班级，从第一次军训到现在即将分离，班里没发生过较大的矛盾，学习的气氛、环境都很不错。每天的课堂总能很愉悦地度过。“班级日志“这种严肃、正经的每日记录工作都能被六班的小伙伴们写得很有趣呢！ 我是作为广大附中一名次优等生过来玉岩的。当时的我还不了解玉岩中学，第一志愿也没有填这，因为外地户口，离想去的学校差了几分，来到了玉岩，这也算是一种遗憾吧，毕竟也曾经努力过。说实话吧，来玉岩的时候是抱着几分不情愿，因为个人小小的虚荣心及自负心吧。但是六班给我带来了一种不一样的体验，是我在以前的班级里没有的友善感，可能我更适合这个班集体吧，毕竟竞争总会给人带来伤害。[作者：这里说明一下，之前罗涛老师说我说六班本来就很差劲，没有的事，我从来都没觉得成绩是衡量班级好坏的标准。] 说说同学吧，与六班的某些同学确实让我有些不舍，这里就不说是谁了。六班的同学还是很幽默的，这一年里有很多的新梗创造出来，然后被我们玩坏。六班的同学还很坚强，经历了这么多次祥老师、赵老师、罗老师的残酷批评，我们依然顽强地在课上课下活跃着，大家都能相处得十分融洽，这也许是我钟爱六班同学的一点。 再来谈谈老师，六班的老师都很强呢！他们或多或少都有着个人荣誉，罗老师的“名班主任”和陈兴祥老师的“全国优秀教师”，当然这并不是我评价他们和“强”的标准。六班的老师们知识面都很广很深，像查理就很厉害，上他的英语课能学会很多其他的知识。六班的老师们也很敬业，像陈兴祥老师就为全体高一编了校本教材，还专门为六班的数学成绩的提升想出各种办法；罗涛老师更是不辞辛苦，晚上九点多还不回家休息，亲自跑来六班监督他最看好的，也是最不放心的钟俊烨同学，督促他认真学习，为目标而奋斗，实在令人敬佩！总之，六班的老师们虽然平均年龄大。但有时却很可爱，还是很舍不得这些老师们的。 明天可能就是六班最后一次在班里上课了，后天分别时，也许我们中的许多人都形同陌路，互不相识。时间与距离真的能够冲淡我们之间的友谊与感情。但是没有关系，有了与你们在一起的美好回忆，抚摸着与你们拍的大合影，回想起一起学习、一起生活、一起参加集体活动、一起为燃烧青春而付出的努力和汗水…… 当我们若干年后在不同地方回忆起高一六班这个集体时，它的存在，便有了意义。而这一切，便已足矣。 就写到这里吧，千言万语都表达不了我的感情，只能让你们自己去想了！ “无论命运将我们引向何处，我们决定，选择希望。” 肖正午 2019年7月11日晚 谨以此篇日志，献给广州市玉岩中学2018届高一六班（2018.9.1 2018.8.26~2019.7.12） ZQ同学：（由于WJ同学不让我写了，于是我还是决定写一点） 看完肖正午同学的文章，有好多想法，其实没有想到他居然会写下这么感人的话。记忆中的XZW还是在军训时领唱军歌，上课时搞xíe气。 六班真的很棒，这个集体，每一个人，都有自己很优秀的地方。 昨天晚上想写一篇总结高一的日志，思考着六班教会了我什么，我带给了六班什么，说不清。但我知道，六班给我留下的，会伴随我们一生。 军训时一起淋过的雨，还在呢，在这个世界循环着，也许它会去经历固液气的旅行。六班，成长路上，感谢有你们！ 庄琪 2019年7月11日 （我好爱这个本本，它最后会去到哪里呢） （最后得到这个本本的人可不可以告诉我一下下） （如果它不属于任何人，我可不可以收留它，虽然……） 29号说：终于下定决心写了！[作者：因为相比其他写这个简单而有趣]，就当我夜来非吧。[作者：放假了也]依然头疼不知道写的什么。（双关）第六章：领军纪年 二年过渡期 2019年7月8日「 沉沦和放纵没有带来任何期待 这是个不符合梦想的世界」 在即将进入梦境的瞬间，才筠吸入一阵凉风，惊醒。头昏脑胀地感知四周环境，模糊确定下这是在自家床上，不是在GG。既不是入睡前潮湿被铺中的闷热，也不是灰尘飞扬时的浑浊空气，更没有一台空调吐露的气息与家中的相似，又怎么会想到GG？才筠不禁深呼吸一口，平复情绪重新入睡。今日才想起自己买了溶玄的海带丝，随手开了一包吃，不知从什么时候开始，海带丝成了GG小卖部的违禁物。外卖、染发化、打牌、智能手机、恋爱……这些白纸黑字记录在“违禁”清单，海带丝倒无伤大雅，但她知道，有些东西是不容反抗的违禁物，却从不被承认。从刘锋主任说出“来了就是GG人”的瞬间，她也就意识到这点了。 （那天写了写不下去，先补一下吧）很久之前她就疑惑过，为什么GG容不下其他的记忆（那些部分仿佛被挤出脑中楼阁），一离开GG，除了周末作业以外的记忆都轻易清除脑中。 数十次去往GG的车上，寸筠（小编：续写作者这里这么写的）盯着眼前不断后退的景象，轻声说：“不想去学校。”天空一如既往地灰白着，看不出到底是散射着光，还是吸收着。“GG有什么不好……爸爸妈妈给你的从来都是最好的，你说你有什么不满意的？”父亲问，声音中满含着不理解、责备与强硬的劝说。从第一句话落入耳中开始，才筠就不得不把全部精力用于压制大脑的思考，封闭听觉，尽全力堵住喉间——无论是即将发出的无力嘲讽和干呕，还是要道出GG的真面貌。但那灰白天空下灰白的楼房，you（小编：作者这里是想写黝）黑的地面，草皮翻起的裸土，干枯的竹叶，浑浊的绿水，全都不受控制地涌入脑海。才筠不得不用更多的力气去反抗。她想干笑与解释，但接踵而来的满堆质问只会将她压得窒息。 “只有痛苦，永远不会让人腻烦。“ 回到家的几天，把GG抛在脑后，沉浸在自由的夏日，只有回到这里，回到这里的那一刻，一切都想起来了。 第七章：领军纪年 二年过渡期 2019年7月11日「 地理课摘要：某种东西形成过程」 GG建校几年了？才筠记得非典比自己小一年，666中学（初中）比自己小几年，GG也比自己小几年。十几年时间，GG用如使观赏湖雨天仿佛割裂成几块的东方神秘力量，成为了H区的一块名片，争取到政府1.8亿的拨款。“我从GD附属中学来……我相信，GG也会越来越好！”即使因为站得遥远而看得一片模糊，才筠也能感受到，刘锋主任脸上一定是带着笑的。 溶玄是本班四名”老GG“之一。作为自由散漫早读一枝花，在认真负责地播放早读听力音频时，却不时会出一些……小小的差错。震耳欲聋的电音以诡异的旋律旋转出，同学们以轻快的声调来调侃溶玄，才筠环视四周——难道只有他听出这是什么音乐吗？ 那或许是一个信号。在溶玄又不小心放出几次音乐后，才筠这么想着（从某种程度上说这系列就是炸厕所曲风 ）。妄想症系列——一重加害……这系列中，是有哪一句歌词唱的“不要__,”是作茧自缚，还是自作多情，还是欺骗自己，才筠已经记不清了。或许是建校不久，GG的制度从某种程度上不如其他学校严格，学生还能够有反抗的力量，今年管束渐严。溶玄在GG近四年，四年在GG十几年历史中已经可以说是很长了。 “你好像跟很多老师都很熟——很多老师都认得你。”才筠这么说 溶玄笑着扯开她搭在自己手腕上的手，“其实我没有的……初中我也不叫溶玄……我换了个身份进的GG。” ——但还是被认了出来。 才筠再次拉住溶玄的手臂将她拉进自己，压低声音。“你咽下的话语……都到了什么地方？” “什么？“溶玄听不清，俯下身靠近才筠，另一个英语课代投来了目光，溶玄只好又挣脱她的手，“先早读，以后再说。” 那个“以后”实在什么时候来临，才筠也记不清了，她仍然主动向溶玄搭话，同时问些像GG房顶的瓦到底是灰色还是灰黄还是灰红，GG操场会不会秃这样无所谓的问题。至于像麒麟山山门后是什么，体育馆木地板下有什么，她始终不敢问。 “我和Mr.Char就是一个自由散漫的学生遇上一个自由散漫的老师，但现在我要离开他了，好难过。”是日，溶玄这般与同桌说着。听到这话的才筠往那边看了一眼，溶玄一侧头，没有与她对上目光。是的，高一即将结束。课代表们忙于收发资料费，发资料书。GG如何成为强校并不重要，暑假作业不过是它漫长计划之中，微小如芥的一步。 明日就是离校之日，阴云如期笼罩在GG在SCI城上空，云与雨徒留一片黑白。“春天结束了。”七月一日的夜晚，才筠这么对溶玄说，“已经结束一个月了。”后者结束了这对话。有无数人与她一样期待着夏日吧，但在GG麻木的生活才筠专注于期盼，忽略了它的到来。明日就是真正的夏日了，只是summer time这词不再包含着“自由”。 “无论我们走的再高再远，也走不出这末日。” 后记：（By ZZJ）还是没写成想要的题材呢。由于平时写作狭窄，我还是shèn长写以某人为中心的风格（小编：这里@zly）[作者：这里原意是指故事以寸筠的视角zhěn开，大多是“寸筠想起”“寸筠觉得”这样，没办法像xzw同学一样跳出这个角色的视角来写别的地方，比如主角是陆般但是也能写山洞两个人对话那么久。不过故事写出来就不是我的了pexi（指小编）这样想也没关系的]。这两篇写的梗没什么意思，思路也不很清晰，故事也不知道怎样zhěn开比较。自yuán，就当作正常的班志和一篇关于自由和幻想的故事来随便kān kān吧。 看了一下之前那篇，提到的四个班内的同学。起名字很有意思的啦也很靠灵感。 为自己字丑说声抱歉（反正我也不改的）（“才”真的是“寸”不是“才”！）祝大家字越来越好康。 帕格尼尼练习曲No.24巨好听！+V/Q你就能获得一个每天尖叫流的安利选手（不是）（还有很多表情包库以前的我现在的我相册清空了=)） 我们六班的同学都非常有趣，大家都是shèn于学习的啦，祝大家走得更高更远！ By：张卓嘉 后记：（By ZQ）军训的时候我们班好高冷，教官组织的游戏大家都是冷漠，一直到了我们一起淋雨一起被罚，那个夜晚是我在玉岩的第一次流泪，也是我开始感到六班成为了一个集体，一个一起受罚的群体。军训合唱节，我们收获了六班的第一次荣誉，是平凡之路，我们在跨过山和大海之时一定有对彼此的记忆。校运会开幕式王骏给我们排队型动作，最后我们还是忘记了，但是效果还是很棒。1500米的过程真的好漫长，过程中有你们的加油真的很棒，我也不知道自己为什么会报名长跑。肖正午，尹鹏宇和张岚月借着志愿者的名义陪我跑到了终点，后来我趴下了，是肖正午和郭言扶着我。期末音乐表演大家都解锁新技能，秦梓亮一唱成名，我们小组的“小美好”还记得吗，要记得高一六班的我们，最好的我们。合唱节准备节目，租衣服，化妆扎头发，忘记了学习忘记了一切只想一起给大家呈现最好的六班。看英语配音的那段时间期待着英语课，等待着每一次惊喜。刀老师的“说”和赵奶奶的“自己去想”让我们好快乐。晚自习安静的时候我会忍不住感慨，六班真的太棒了吧，吵闹的时候，我们是给彼此分享快乐的六班。六班的每一个人都很特别，都特别好。我记得第二次选语文课代表的时候我去番中了，后来回来知道大家对我的信任感动到热泪盈眶，当语文课代表的这两个学期其实我不很合格，不说语文学的不好吧，我连平翘舌前后鼻音都分不清，但是我真的好爱六班齐读的早晨。特别喜欢琵琶行，因为每次背琵琶行大家会特别整齐特别大声节奏超级好，以至于我在最后两个星期总是让你们背琵琶行，嘻嘻嘻。谢谢六班的一切。无法用语言祝福你们，你们一定要好好的 在大扫除的时候，找到了这个学期和刀老师“结仇”的那张“别自欺欺人”的纸条，那时候为我去找刀老师的同学真的好感动，哭了两节物理课并决定把那段话剪下来，记仇一辈子。后来慢慢地遗忘了，在大扫除把它丢进垃圾袋的那一刻，我心中的刀老师又回到了心中原来的样子，细心温柔友善的。对于曾经地耿耿于怀，我想对刀老师说，对不起 109的这两个学期是粉粉的，来着各地的六个女孩一起努力过，多少个夜晚分享着彼此的故事。洗手台的， 厕所的大蜘蛛，床上的蜈蚣。庄q去饭（fang）堂（tan），麦xw喝牛（liu）奶（lai），米孜努尔听到猫（毛）叫，阿达莱提说要读（赌）博，朱zm喜欢在宿舍吃泡面，徐xt每天挑灯夜战。 希望八月学妹会喜欢粉色的109并善待它。希望九月109小宝贝的新室友如我们相亲相爱那样互相照顾昨天晚上班群好感人，原来男生也会在离别之际对自己的不舍毫不隐瞒，“我不管 反正这个群不能凉”“行 人齐了”超级感动。郭言为六班付出的这一年辛苦了，谢谢你！ 和张卓嘉小姐姐的故事一定未完待续…… 港湾小学开始玉岩相见，击剑队四年训练曾有你相伴，少年宫美术课你不记得有我了，认识这么多年，高中才开始慢慢熟悉。我们的缘分要慢慢地慢慢地用，久久不忘。 关于林凯茵和麦麦的故事 和lky的友谊从军训一见如故就开始啦，导致好多人以为我们是初中同学。校运会开幕式彩排的时候，秦梓亮的玩笑让我误以为是麦麦做的，麦麦告诉真相以后，lky竟然去揪住qzl的衣领。平时温柔美丽的lky为了我而不顾自己的形象❤从那天开始麦麦加入了我们活动最积极的小团体❤❤❤。 庄琪 罗涛回复：老师忌讳欺骗，学生忌讳误解，那天改作业我是很情绪化了，因为在意，所以我们才会感受到伤害，希望你真的放下，学生也给老师上了一课，未来可期！ 小编后记：我还是决定写点什么（By WPX）虽然我们已经分开一天了，再说现在写可能有点晚，但是我还是想写点东西。 从我第一天进入玉岩中学，这就决定了，我是六班的一份子。 刚开始705考进玉岩，又在开学考考得挺好（也许吧）分进了琢玉班，我就已经是六班人了。记得刚进入学校，在男生宿舍门口的马路上见到了PY。我本来就是跟PY一个学校的，当我得知我跟PY一个班，心里非常高兴，毕竟PY的成绩非常好。 B205，一个里面一半是苏元人的宿舍，让我熟悉起来特别容易（因为PY和Z*Z我都认识）。不管是天天游戏的LOL的lwj还是对鞋有着深刻（？）研究的drcccccccccccc，再或是被我们调侃的添哥，我都非常喜欢和你们在一起。添哥上学期的早起说不定就是我养成天天早起的习惯的原因之一。不过我还是要跟添哥道个歉，很抱歉我们天天“欺负”你，你是我们尊敬的添哥。（下面皮一手） 在男生宿舍中，更是有善于唱歌的wj、xzw、qzl三人（wj超帅！），跟我一样是米粉的斯文哥（斯文哥好可爱哒！）【←本性暴露】，善于运动的gtf、小液滴（在这里就让我这么称呼吧）、cpf（钻石大佬带我上分！）等具有运动细胞的同学们。你们都或多或少地影响我，毕竟我一开始是不喜欢运动的，但是现在体育课我至少会跟你们打球，谢谢你们！ 六班的所有同学，都是我尊敬的。我的同桌lmx真的是位大佬，她虽然成绩特别（手动着重）优异，但是还是会问别人，即使我是一介萌新，可能是她影响了我，至少懂得不会就要问；myq，我们的纪律委员，非常有威严（有时吧），对班级的晚修纪律是做出了比较大的贡献的（虽然有时……）；我们班的班长gy，当了两个学期的班长，每次都传达工作都是能够做好的（虽然每次锣叨会先打电话给我），拍照技术超一流，工作室的超高级摄影师！ 其实，那张“想继续琢玉当兄弟”的心愿是我的，我真的很想跟大家在琢玉继续当兄弟（？），但是，无奈最后出来的结果让我的“妄想”真正变成了妄想。如果下学期还有跟我一个班的同学，我们可以继续当兄弟！ 每一次大家在台上看视频，我都会说：“不准看视频”并且把你们轰下去。其实，每一次辣么多人，有时候我看着都不想管，让你们继续看就好了我还是决定要写点什么，无奈这份责任落在我的身上，我必须管理好，所以还请大家原谅_。 肖正午的那篇小说，我正在转成电子版，我想给大家留下点什么，到时候我会放出下载方式（肖正午的文笔没想到这么好），希望大家多多支持肖正午呀！还有续写同学的部分我也回打上去的（大佬之作呀） 我们班的老师，都是非常好的老师，不像某位xzy同志非常无情地对待她们班的学生。要不是华哥要课前提问，我或许不会去背文言文；要不是祥哥的“边听边想”，我可能在数学课上还在神游；要不是Charlie给我们开拓视野，我可能连the beatles都不知道。。。各位老师交给我的太多太多，我在这里非常感激你们！如果下学期各位老师还能教我，我一定不会辜负你们的期望！ 写到这里我也不知道我到底说了什么，只觉得六班给我的东西太多太多，三言两语根本说不完。在这里还是祝大家前程似锦吧！ 「 永远相信 美好的事情 即将发生」 吴沛熹 2019年7月13日 写于英才计划 2019.8.30 更新罗涛说：这一年，非著名物理学家、哲学家“罗伯. 道特森”发表了很多歪理，其实他分别时有想来一个完美的ending，甚至想再为你们哼唱几句，但却被小罗伯的高烧乱了方寸 ，小遗憾，不过，这些日子在他心中应该永远都不会抹去。刀刀再见你们时，可能只会努力在他黑乎乎的脸上挤出淡淡的略带诡异的笑，不怪他，黑不是他的错，或许他的偶像是古天乐，也许是包拯，毕竟良心与理想，他也有在内心时刻铭记。其实刀刀他害怕照相，毕竟他身边的面孔永远年轻热烈，虽然偶尔他也撒撒娇，卖个萌。刀刀去年爱说“滚！”，刀刀今年欢“说！”有些词语用了一年后刀刀会换掉不在课堂说，毕竟物是人非。有的人，对不起！有的人，谢谢！ 感谢：作者：肖正午、张卓嘉 编导：吴沛熹 录入：吴沛熹 校对：杨斯文 图片：郭言 原版链接请点我","categories":[{"name":"School","slug":"School","permalink":"https://coralare.com/categories/School/"}],"tags":[{"name":"School","slug":"School","permalink":"https://coralare.com/tags/School/"}]},{"title":"别再问我怎么装系统了，再问我就把这边文章丢到你脸上！","slug":"Windows-Setup","date":"2019-07-09T15:00:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/07/09/Windows-Setup/","link":"","permalink":"https://coralare.com/2019/07/09/Windows-Setup/","excerpt":"","text":"封面来源地址 为什么会写这篇文章？昨天晚上我拉我们班某位钻石大佬打LOL，带我上分，结果他告诉我他电脑炸了，要重装系统，问我怎么重装系统。。。 我是这么回答他的（源自微信聊天记录）： 我（内心）：有句MMP不知当说不当说。。。 今天我就要来详细讲一讲怎么新装/重装系统（win7~Win10通用，不包含Linux） 序言我会介绍两个方法，第一个我把它叫做萌新友好法，第二个我把它叫做萌新不友好法 这里用到的工具稍微列举一下： 1.萌新友好法：Windows官方镜像、一个8G+的U盘、U深度或者其他乱七八糟的PE工具箱（这里没有给U深度打广告的意思，只是我一般介绍别人方法的时候会告诉他用U深度）2.萌新不友好法：Windows官方镜像、软碟通（Ultraiso，无需注册）、一个8G+的U盘开始装机！1.1/2.1、镜像下载你需要去微软官网或者是某些网站上面下载Windows的官方镜像，这里推荐Windows官方下载工具或者推荐网站MSDN, 我告诉你下载镜像。 需要注意的是，如果使用Windows官方下载工具，建议直接使用里面的“为另一台电脑创建介质“功能，并且直接插入U盘写入，当然你愿意选择创建ISO也可以，ISO的用法会在下面提到。 如果使用MSDN下载，那么建议使用支持ed2k协议的下载工具（例如迅雷，但不推荐）来下载，在这里介绍我平常使用的方式：将ed2k链接丢进百度网盘的离线下载，然后创建分享，在分享链接的pan.baidu.com的baidu后面加wp变成pan.baiduwp.com，进入PanDownload可以下载得快一些（文件需小于4G，否则还是得使用百度网盘） 1.2、写入U深度 插入U盘，勾上支持UEFI启动（现在的电脑应该都支持），点击开始制作。（当然你可以选择高级设置设定自己的UI） 制作完后可以试试模拟启动，看看是否制作成功了 1.3、解压Windows镜像将Windows镜像解压，丢在U盘的根目录或建立文件夹丢在文件夹内（不要直接把镜像丢在ISO文件夹里面，等会会告诉你为什么） 1.4、从U盘启动重启你的电脑，打开启动菜单（按什么键请问百度），选择你的U盘，如果发现有两个同样名字的U盘，优先选择前面有UEFI字样的，如果UEFI无法启动再选择没有UEFI的。进入PE，可以在导航栏右边的彩屏图标右键调整分辨率（不是必要的），关闭弹出来的装机工具（不推荐使用它，因为使用它装系统后第一次开机会有很多奇奇怪怪的软件。这也是不推荐把ISO直接丢在U盘的ISO文件夹里的原因） 1.5、用WindowsNTSetup安装系统在桌面上找到WindowsNTSetup，或者在所有应用里面找到它，打开它。 Windows安装源请选择.\\sources\\install.wim或者.\\sources\\install.esd，引导驱动器选择你想要安装Windows的盘符（对单系统而言），安装驱动器选择你要安装Windows的盘符。 下面的版本选项选择你需要的版本，优化调整根据自己的需要调整。下面是我一般会选择的东西 调整完以后点开始安装即可！ 1.6、安装完成安装完成后，电脑将自动重启，请移除你的U盘，等待系统启动，并且根据提示设置你的电脑！ 2.2、使用软碟通写入镜像打开软碟通（以管理员身份运行），将你的Windows镜像拖入右边上面的框里面并双击打开（如果弹出提示请点“是”） 在上面的导航栏中选择启动–&gt;写入硬盘映像，如果弹出UAC提示请点击是，就会出现写入页面（如下图） 点击写入，注意：此操作会清除你U盘的所有数据，包括所有分区！！！一旦你明白注意事项，点“是”就可以写入了 等待写入完成，重启电脑进入BOOT Menu，从U盘启动（UEFI优先） 2.3、安装Windows根据提示安装，如果提示说无法安装，请点击下面的详细信息，根据内容百度解决，这里我提供最常见的一种情况 提示：Windows 无法安装到这个磁盘。选中的磁盘具有MBR分区表。在 EFI 系统上，Windows 只能安装到 GPT 磁盘。 方法：利用DiskGenius或者傲梅分区助手，将硬盘转换为GUID格式即可 安装完后，系统会自动重启，请移除你的U盘！ 2.4、安装完成系统已经安装完成，请根据系统提示配置你的电脑！ 下次有谁再问我怎么装系统，或者有人问你怎么装系统，请把这篇文章给他/她看！如果有什么问题，可以在评论区内告诉我，推荐使用Github账号登录，这样我可以快速找到你！封面原图出处","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"Cmd的互替软件，让Cmder来帮助你更好地使用控制台！","slug":"cmder","date":"2019-07-05T04:00:00.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2019/07/05/cmder/","link":"","permalink":"https://coralare.com/2019/07/05/cmder/","excerpt":"","text":"问题：什么是Cmd？命令提示符是在操作系统中，提示进行命令输入的一种工作提示符。在不同的操作系统环境下，命令提示符各不相同。在windows环境下，命令行程序为cmd.exe，是一个32位的命令行程序，微软Windows系统基于Windows上的命令解释程序，类似于微软的DOS操作系统。 ——来自 百度百科 为什么要用Cmder来替换Cmd呢？1、Cmd有的时候复制粘贴很麻烦，Cmder则不会 2、Cmder可以分屏多开窗口，Cmd不行 3、Cmder可以设置窗口颜色,字体大小（更加美观） 4、Cmder有很多快捷键和谷歌浏览器操作类似（反正就是很多功能） 下载地址（官网）：Cmder官网 官网下载有mini版和完整版，我建议完整版（虽然我也不知道两个之间有什么区别，或许是少了点命令？） 一点小技巧：你可以在系统属性里面配置环境变量，把cmder的路径加入到path里面去 然后以管理员身份打开cmd，输入 12# 设置任意地方鼠标右键启动CmderCmder.exe /REGISTER ALL 然后你就可以像我一样在任意地方打开cmder了 快捷键大全（官网有）：12345678910111213Tab 自动路径补全Ctrl+T 建立新页签Ctrl+W 关闭页签Ctrl+Tab 切换页签Alt+F4 关闭所有页签Alt+Shift+1 开启cmd.exeAlt+Shift+2 开启powershell.exeAlt+Shift+3 开启powershell.exe (系统管理员权限)Ctrl+1 快速切换到第1个页签Ctrl+n 快速切换到第n个页签(n无上限)Alt + enter 切换到全屏状态Ctrl+r 历史命令搜索Win+Alt+P 开启工具选项视窗 TIPS：如果中文不能正常显示，可以在设置的环境选项(Settings–&gt;Startup–&gt;Eniviroment)内加入以下语句1set LANG=zh_CN.UTF8 题外话1、我没有收广告费，单纯是因为它很好用 2、Win10还是比较推荐Powershell的，但是win10以下powershell（即使内置）是没有在环境变量中的，所以win10以下我还是会用cmder 后期更新：Powershell真香！ 2020.3.19 更新应评论区用户要求，我就来讲讲小白式玩法~ 第一点：将cmder加入PATH变量以Win10为例（Win10以下的path变量管理界面不一样，但是道理还是一样的） 我们首先右键我的电脑（此电脑），然后选择属性 在此电脑的属性页面中选择高级系统设置 在打开来的窗口选择环境变量 然后在上面的用户变量栏里面选择path然后点击编辑 在右侧点击新建，然后在框框里面先随便输入点内容（因为如果不输入直接点浏览的话会覆盖掉上面的数据） 接着选择浏览，选到你的cmder存放的目录，我这里是在G:\\cmder，所以直接选择到这里就好了 点击确定，在左边的环境变量栏里面就会有刚刚选择的目录路径了 接着打开运行，你也可以通过Win+R来打开，在里面输入cmder然后确定 如果你能正常打开cmder就说明你设置成功啦！ 上面说的把cmder加入到右键菜单，在电脑左下角的Win标那里右键，选择命令提示符（管理员）或者Windows Powershell（管理员） 把上面的那一串命令打进去就可以了。 你是不是完成配置了呢？那就开始你的cmder之旅吧！","categories":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"}],"tags":[{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"}]},{"title":"用Heroku自建V2ray作为紧急连接","slug":"Heroku-V2ray","date":"2008-01-01T01:46:44.000Z","updated":"2021-02-13T13:42:15.000Z","comments":true,"path":"2008/01/01/Heroku-V2ray/","link":"","permalink":"https://coralare.com/2008/01/01/Heroku-V2ray/","excerpt":"","text":"免责声明请遵循当地法律使用，如有违反当地法律造成的责任，拒不承担 Heroku 为我们提供了免费的容器服务，我们不应该滥用它，所以本项目不宜做为长期翻墙使用。 可以部署两个以上的应用，实现 负载均衡，避免长时间大流量连接某一应用而被 Heroku 判定为滥用。 Heroku 的网络并不稳定，部署前请三思。 在开始之前，你需要准备： 一个Heroku账号 一个CloudFlare账号 准备完这两个东西，你就可以开始下面的操作了 部署应用点击右边的这个链接，会看到如下的页面，其中APP name这里随便填，但是不能跟别人重复（重复或不可用会标红） 如果你这里加载出来了一个变量的框，写着UUID，下面有一串字母和数字组成的字符串，你可以修改它，到这里生成一个，也可以直接保留（推荐修改，这是连接凭证） 修改UUID（如果你在部署的时候已经修改过了UUID，或者认为没必要修改UUID，那就直接往下看CloudFlare部分） 点击Deploy APP后就会开始部署，等部署完后下面会出现两个按钮，一个是Manage APP，另一个是View，我们点Manage APP 接着我们点Settings，然后点Reveal Config Vars，来修改我们的UUID Cloudflare加速我们先到这个仓库下载它的Release来使用其程序找到最适合我们的节点 解压下载的压缩包，用管理员权限运行它的pingip.exe，输入线程，等待程序跑完 在ping_host.log里面找到延迟最低的IP地址（一般在第一行），把它复制下来，等会会用到 在跑程序的期间，你可以登录你的cloudflare，找到workers，新建一个workers，并把一下代码复制进去 双Heroku APP（该js从隔壁OneManager借用过来并作了小修改） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081// odd, 单日const SingleDay = &#x27;https://first-app.herokuapp.com&#x27; // 在这里填你第一个APP的链接// even, 双日const DoubleDay = &#x27;https://second-app.herokuapp.com&#x27; // 在这里填你第二个APP的链接// Used in cloudflare workers, odd or even days point to 2 heroku account.// 由于heroku不绑卡不能自定义域名，就算绑卡后https也不方便// 另外免费套餐每月550小时，有些人不够用// 于是在CF Workers使用此代码，分单双日拉取不同heroku帐号下的相同网页// 只改上面，下面不用动addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; let url=new URL(event.request.url); if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; event.respondWith( Response.redirect(url.href) ) &#125; else &#123; let response = null; let nd = new Date(); if (nd.getDate()%2) &#123; host = SingleDay &#125; else &#123; host = DoubleDay &#125; if (host.substr(0, 7)!=&#x27;http://&#x27;&amp;&amp;host.substr(0, 8)!=&#x27;https://&#x27;) host = &#x27;http://&#x27; + host; response = fetchAndApply(host, event.request); event.respondWith( response ); &#125;&#125;)async function fetchAndApply(host, request) &#123; let f_url = new URL(request.url); let a_url = new URL(host); let replace_path = a_url.pathname; if (replace_path.substr(replace_path.length-1)!=&#x27;/&#x27;) replace_path += &#x27;/&#x27;; let replaced_path = &#x27;/&#x27;; let query = f_url.search; let path = f_url.pathname; if (host.substr(host.length-1)==&#x27;/&#x27;) path = path.substr(1); f_url.href = host + path + query; let response = null; let method = request.method; let body = request.body; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, f_url.host); new_request_headers.set(&#x27;Referer&#x27;, request.url); response = await fetch(f_url.href, &#123; method: method, body: body, headers: new_request_headers &#125;); &#125; let out_headers = new Headers(response.headers); if (out_headers.get(&#x27;Content-Disposition&#x27;)==&#x27;attachment&#x27;) out_headers.delete(&#x27;Content-Disposition&#x27;); let out_body = null; let contentType = out_headers.get(&#x27;Content-Type&#x27;); if (contentType.includes(&quot;application/text&quot;)) &#123; out_body = await response.text(); while (out_body.includes(replace_path)) out_body = out_body.replace(replace_path, replaced_path); &#125; else if (contentType.includes(&quot;text/html&quot;)) &#123; out_body = await response.text(); while (replace_path!=&#x27;/&#x27;&amp;&amp;out_body.includes(replace_path)) out_body = out_body.replace(replace_path, replaced_path); &#125; else &#123; out_body = await response.body; &#125; let out_response = new Response(out_body, &#123; status: response.status, headers: out_headers &#125;) return out_response;&#125; 单Heroku APP12345678910addEventListener( &quot;fetch&quot;,event =&gt; &#123; let url=new URL(event.request.url); url.hostname=&quot;change-this-to-your-app-name.herokuapp.com&quot;; let request=new Request(url,event.request); event. respondWith( fetch(request) ) &#125;) 把其中的hostname的地址改成你的herokuapp的地址，然后保存 复制直接访问cloudflare提供的域名，如果提示Bad Request就可以了，把域名复制下来，等下会用到 配置V2Ray打开你的v2ray，添加vme$$服务器，按照下面的图填写 然后保存，愉快地使用v2ray就可以了 （不会用v2的自己找教程，这里不教） 注意事项这只是一个临时用的方法，不适宜长期使用 heroku每个月有运行时长限制，只适合轻度使用用户 heroku的实例半小时没有访问就会自动休眠，你可以使用此项目来避免这个问题 ReferenceHeroku+Cloudflare+V2搭建详细图文教程","categories":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"}],"tags":[{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"}]}],"categories":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/categories/diary/"},{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/categories/Tech/"},{"name":"Software","slug":"Software","permalink":"https://coralare.com/categories/Software/"},{"name":"School","slug":"School","permalink":"https://coralare.com/categories/School/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://coralare.com/tags/diary/"},{"name":"Tech","slug":"Tech","permalink":"https://coralare.com/tags/Tech/"},{"name":"Software","slug":"Software","permalink":"https://coralare.com/tags/Software/"},{"name":"School","slug":"School","permalink":"https://coralare.com/tags/School/"}]}